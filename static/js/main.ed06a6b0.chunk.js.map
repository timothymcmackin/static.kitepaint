{"version":3,"sources":["theme/colors.js","theme/media.js","theme/patterns.js","theme/A.js","theme/Text.js","theme/P.js","theme/Alert.js","theme/BlockListItem.js","theme/Button.js","theme/Dropdown.js","theme/Icon.js","theme/Error.js","utils/embedAllowed.js","utils/getAppDimensions.js","constants/environment.js","utils/getAssetUrl.js","utils/getQueryParams.js","utils/makeCancelable.js","utils/redirect.js","utils/softCompareStrings.js","theme/FillToBottom.js","theme/H1.js","theme/H2.js","theme/H3.js","theme/Input.js","theme/Label.js","theme/Loading.js","theme/utilities/BodyPortal.js","theme/Modal.js","theme/ModalClose.js","theme/ModalConfirm.js","theme/ModalPrompt.js","theme/PageLoader/dual-line.svg","theme/PageLoader/quad-line.svg","theme/PageLoader/PageLoader.js","theme/PageLoader/index.js","theme/Select.js","theme/Sidebar.js","theme/Spacer.js","theme/Tile.js","theme/TextButton.js","theme/Tooltip.js","theme/index.js","api/kitePaint/activateAccount.js","api/kitePaint/changeEmail.js","api/kitePaint/changePassword.js","api/kitePaint/checkLoginStatus.js","api/kitePaint/createAccount.js","api/kitePaint/createDesign.js","api/kitePaint/deleteAccount.js","api/kitePaint/deleteDesign.js","models/Manufacturer.js","models/Status.js","models/Product.js","models/Design.js","api/kitePaint/getDesign.js","api/kitePaint/getDesigns.js","api/kitePaint/getManufacturers.js","api/kitePaint/getProducts.js","models/User.js","api/kitePaint/getUser.js","api/kitePaint/logIn.js","api/kitePaint/logOut.js","api/kitePaint/resetPassword.js","api/kitePaint/updateDesign.js","api/KitePaintApi.js","redux/createAsyncAction.js","redux/actions.js","redux/modules/user.js","constants/embed.js","containers/UserContainer.js","components/layout/Footer.js","components/layout/Header.js","components/EmbeddedCss.js","components/ErrorPage.js","components/RestrictedRoute.js","components/LegacyRedirect.js","components/about/About.js","containers/AccountContainer.js","components/account/ChangeEmail.js","components/account/ChangePassword.js","components/account/Account.js","containers/ActivateContainer.js","components/activate/Activate.js","redux/modules/products.js","redux/modules/manufacturers.js","containers/ProductsContainer.js","components/ManufacturerLogo.js","components/create/ManufacturerShowcase.js","components/Svg.js","components/create/ProductShowcase.js","components/create/Create.js","containers/CreateNewContainer.js","containers/EditorContainer.js","components/ShareModal.js","components/DesignSettingsModal.js","containers/DesignSettingsModalContainer.js","components/editor/Toolbar.js","components/editor/ColorTile.js","components/editor/ColorableSvg.js","components/editor/Sidebar.js","components/editor/Canvas.js","components/editor/ProductNotes.js","components/createNew/CreateNew.js","redux/modules/designs.js","containers/DesignsContainer.js","components/designs/Designs.js","components/RecentDesigns.js","containers/EditContainer.js","components/edit/Edit.js","containers/RecentDesignsContainer.js","components/LogInForm.js","containers/LogInFormContainer.js","components/RegisterForm.js","containers/RegisterFormContainer.js","components/ResetPasswordForm.js","containers/ResetPasswordFormContainer.js","components/AccountForm.js","components/home/CTABanner.js","components/home/Home.js","components/home/AccountBanner.js","components/login/Login.js","containers/MyDesignsContainer.js","components/my-designs/DesignManager.js","components/my-designs/MyDesigns.js","redux/modules/users.js","containers/ViewContainer.js","components/view/Sidebar.js","components/view/View.js","components/App.js","containers/AppContainer.js","redux/modules/index.js","redux/index.js","utils/polyfill.js","index.js","components/home/bg-rev.jpg"],"names":["navy","blueLighter","blue","blueDarker","aqua","teal","olive","green","lime","yellow","orange","red","fuchsia","purple","maroon","white","gray","grayDark","grayDarker","silver","black","mediaSm","mediaMd","mediaLg","mediaXl","transparencyBackground","css","_templateObject","Object","taggedTemplateLiteral","A","styled","a","A_templateObject","_ref","theme","colors","TypographyStyles","Text_templateObject","StyledText","p","_templateObject2","props","isLight","P","children","objectWithoutProperties","react_default","createElement","Text","assign","as","success","message","window","kp_alert","type","error","AlertWrapper","div","Alert_templateObject","alertEntryAnimation","keyframes","Alert_templateObject2","StyledAlert","_templateObject3","removing","_templateObject4","_templateObject5","alertType","_templateObject6","_templateObject7","_templateObject8","Alert","state","alerts","handleIncomingAlert","alert","_alert$duration","duration","includes","currentAlerts","_this","currentTime","Date","getTime","id","concat","push","created","setState","Promise","resolve","setTimeout","find","removeAlert","console","updatedAlerts","map","prunedAlerts","filter","_this2","this","key","theme_P","React","Component","BlockListItem","BlockListItem_templateObject","StyledButton","button","Button_templateObject","Button","_ref2","isPrimary","isBlock","className","classes","join","StyleWrapper","span","Dropdown_templateObject","StyledDropdown","Dropdown_templateObject2","Item","Dropdown_templateObject3","disabled","Spacer","Dropdown_templateObject4","Dropdown","isOpen","autoClose","event","node","contains","target","close","open","document","addEventListener","removeEventListener","renderData","actions","components","ref","dropdownContent","FontAwesomeIcon","StyledError","Error_templateObject","Error","_ref3","Icon","icon","embedAllowed","whitelist","parentDomain","arguments","length","undefined","referrer","replace","split","toConsumableArray","entry","trim","getAppDimensions","height","documentElement","clientHeight","width","clientWidth","location","hostname","getAssetUrl","path","getQueryParams","search","substr","paramString","reduce","accumulated","parts","paramName","paramValue","decodeURIComponent","Array","isArray","makeCancelable","promise","hasCanceled_","reject","then","val","isCanceled","cancel","redirect","url","href","softCompareStrings","_len","strings","_key","match","string","index","toLowerCase","FillToBottom_templateObject","FillToBottom_templateObject2","FillToBottom","originalHeight","fillToBottom","wrapperRect","wrapper","getBoundingClientRect","distanceFromBottom","y","offset","strict","minHeight","offsetHeight","FillToBottom_StyleWrapper","defaultProps","StyledH1","H1_templateObject","StyledH2","H2_templateObject","StyledH3","H3_templateObject","Input","input","Input_templateObject","StyledLabel","Label_templateObject","animation","Loading_templateObject","Loading_templateObject2","Loading","Loading_StyleWrapper","BodyPortal","ReactDOM","createPortal","querySelector","backdropAnimation","Modal_templateObject","ModalBackdrop","Modal_templateObject2","modalAnimation","Modal_templateObject3","StyledModal","Modal_templateObject4","Modal","modalContent","onBackdropClick","Fragment","utilities_BodyPortal","onClick","ModalCloseStyle","ModalClose_templateObject","ModalClose","ModalConfirm_templateObject","ModalPrompt","handleConfirm","onConfirm","handleCancel","onCancel","data","theme_Modal","ModalConfirm_StyleWrapper","theme_Button","confirmText","cancelText","ModalPrompt_templateObject","value","handleSubmit","preventDefault","onSubmit","handleValueChange","prevProps","prevState","promptInput","focus","ModalPrompt_StyleWrapper","theme_Label","theme_Input","inputType","onChange","submitText","_path","_extends","i","source","prototype","hasOwnProperty","call","apply","_polygon","dual_line_SvgComponent","version","xmlnsXlink","x","viewBox","style","enableBackground","xmlSpace","d","__webpack_require__","quad_line_extends","quad_line_SvgComponent","points","k1Animation","PageLoader_templateObject","k2Animation","PageLoader_templateObject2","k3Animation","PageLoader_templateObject3","k4Animation","PageLoader_templateObject4","PageLoader_templateObject5","PageLoader","PageLoader_StyleWrapper","SelectWrapper","Select_templateObject","Select","Sidebar_templateObject","Sidebar_templateObject2","hasAction","isActive","Sidebar_templateObject3","Heading","Sidebar_templateObject4","Sidebar","Sidebar_StyleWrapper","sizes","xs","sm","md","lg","xl","StyledSpacer","Spacer_templateObject","top","bottom","left","right","Tile","TextButton_templateObject","Tile_templateObject","fadeIn","Tooltip_templateObject","fadeOut","Tooltip_templateObject2","Tooltip_templateObject3","fadeSpeed","TooltipIcon","Tooltip_templateObject4","TooltipText","Tooltip_templateObject5","Tooltip","renderTooltip","removingTooltip","fadeTimer","handleMouseEnter","clearTimeout","targetBounds","handleMouseLeave","fadeSpeedMs","onMouseEnter","onMouseLeave","Tooltip_StyleWrapper","isVisible","displayTooltip","Theme","media","patterns","_callee","userId","activationCode","bodyFormData","response","regenerator_default","wrap","_context","prev","next","FormData","append","axiosInstance","post","sent","activated","abrupt","stop","newEmail","changed","email","username","currentPassword","newPassword","confirmNewPassword","sessionData","parsedSessionData","localStorage","getItem","JSON","parse","_unused","keys","forEach","logged_in","setItem","stringify","registered","design","defaults","status","new","getProperties","variations","valid","password","designId","delete","Manufacturer","createModel","name","logo","website","json","computed","propTypes","PropTypes","isRequired","shape","statusProp","oneOf","Status","0","1","2","PRIVATE","UNLISTED","PUBLIC","Product","embed","notes","manufacturer","arrayOf","color","svg","Design","active","images","updated","product","user","productStatus","updatedDate","get","moment","valueOf","isPublic","isPrivate","isPrivateProduct","currentStatus","primary","bool","instanceOf","object","cache","_message","_args","_cacheable","continue","params","useCache","filterDefaults","filterWithDefaults","requestData","requestString","publicOnly","limit","order","Qs","sortIndex","note","User","loginid","return","removeItem","reset","api_KitePaintApi","KitePaintApi","classCallCheck","baseUrl","apiDomains","beta.kitepaint.com","kitepaint.com","default","_getApiDomain","config","_cache","_getUserCache","_getDesignsCache","_getProductsCache","_getManufacturersCache","baseURL","headers","Accept","Content-Type","axios","create","createClass","identifier","defaultData","relevantIndex","relevantCacheGroup","relevantCache","cacheTime","splice","_x","_x2","_activateAccount","_checkLoginStatus","_logIn","_logOut","_createAccount","_resetPassword","_changeEmail","_changePassword","_deleteAccount","_getUser","_getDesigns","_getDesign","_getProducts","_getManufacturers","designData","_createDesign","_updateDesign","_deleteDesign","createAsyncAction","actionType","request","ACTION_REQUESTED","createAction","ACTION_RECEIVED","ACTION_FAILED","asyncAction","args","dispatch","REQUESTED","payload","RECEIVED","catch","FAILED","CHECK_LOGIN","checkLoginStatus","LOG_IN","logIn","LOG_OUT","logOut","CREATE_ACCOUNT","createAccount","RESET_PASSWORD","resetPassword","CHANGE_EMAIL","changeEmail","CHANGE_PASSWORD","changePassword","DELETE_ACCOUNT","deleteAccount","SET_RECOGNIZED_USER","newValue","GET_DESIGNS","filters","getDesigns","GET_DESIGN","getDesign","GET_PRODUCTS","getProducts","GET_MANUFACTURERS","getManufacturers","GET_USER","getUser","CREATE_DESIGN","createDesign","UPDATE_DESIGN","updateDesign","DELETE_DESIGN","deleteDesign","defaultState","fromJS","actcode","firstName","isCheckingLogin","isLoggedIn","isLoggingIn","isRecognizedUser","lastName","handleActions","_handleActions","defineProperty","action","set","merge","first_name","user_id","last_name","getUserRecognition","getIn","getCheckingLogin","queryParams","isEmbedded","self","e","inIframe","externalCss","defaultBackground","background","UserContainer","_React$Component","inherits","_super","UserContainer_createSuper","toggleRecognition","onSetRecognition","setRecognition","handleLogOut","onLogOut","buildRedirect","onRedirect","Redirect","to","_this$props$user","mapDispatchToProps","connect","header","Header_templateObject","Header_templateObject2","footer","Footer_templateObject","Footer","Footer_StyleWrapper","theme_A","getFullYear","EmbeddedCss","_isEmbedded","_externalCss","rel","ErrorPage_templateObject","ErrorPage","errorCode","errorMessage","ErrorPage_StyleWrapper","theme_H1","RestrictedRoute","components_ErrorPage","Route","generateObjectFromQueryParams","param","_param$split","_param$split2","slicedToArray","LegacyRedirect","LegacyRedirect_createSuper","rest","legacyPath","history","hash","possibleConstructorReturn","redirectData","relevantRedirectRule","from","rule","_legacyPath$split","_legacyPath$split2","_rule$from$split","_rule$from$split2","rulePath","ruleSearch","searchObject","ruleSearchObject","redirectTo","withRouter","About_templateObject","About","About_StyleWrapper","theme_Spacer","AccountContainer","AccountContainer_createSuper","deleteError","editingEmail","editingPassword","emailError","passwordError","handleToggleEditEmail","handleToggleEditPassword","handleEmailChange","handleCurrentPasswordChange","handleNewPasswordChange","handleConfirmNewPasswordChange","handleSubmitEmail","onEmailChange","_requests","handleSubmitPassword","onPasswordChange","handleDeleteAccount","onDeleteAccount","changeCurrentPassword","changeNewPassword","changeConfirmNewPassword","toggleEditEmail","toggleEditPassword","submitEmail","submitPassword","StyledForm","form","ChangeEmail_templateObject","ChangeEmail","editing","onChangeEmail","onToggleEdit","htmlFor","readOnly","required","theme_Error","ChangePassword_templateObject","ChangePassword","onChangeConfirmNewPassword","onChangeCurrentPassword","onChangeNewPassword","ChangePassword_StyledForm","theme_Tooltip","defaultValue","Account_templateObject","Account","Account_StyleWrapper","containers_AccountContainer","accountData","theme_Tile","account_ChangeEmail","account_ChangePassword","theme_H2","theme_ModalPrompt","modal","ActivateContainer","isPending","_cancelablePromises","cancelable","activateAccount","Activate_templateObject","Activate","Activate_StyleWrapper","ActivateContainer_ActivateContainer","activation","theme_Loading","productsById","getPublicProductsGrouped","groupBy","toList","toJS","getProductById","getProductsWithIndex","manufacturersById","sort","manA","manB","aName","bName","getManufacturerByProductId","productId","manufacturerId","getManufacturersWithIndex","ProductsContainer","ProductsContainer_createSuper","isLoading","cancelablePromises","productRequest","manufacturerRequest","all","products","manufacturers","ManufacturerLogo","ManufacturerLogo_templateObject","src","size","noMargin","ManufacturerShowcase_templateObject","HeadingWrapper","ManufacturerShowcase_templateObject2","ManufacturerShowcase","ManufacturerShowcase_StyleWrapper","components_ManufacturerLogo","theme_H3","Svg","dangerouslySetInnerHTML","__html","ProductShowcase_templateObject","ProductShowcase","ProductShowcase_StyleWrapper","Link","variation","components_Svg","Create_templateObject","Create","Create_StyleWrapper","containers_ProductsContainer","productsData","theme_PageLoader","create_ManufacturerShowcase","create_ProductShowcase","CreateNewContainer","CreateNewContainer_createSuper","onRequestProduct","onRequestManufacturer","appliedColorsShape","objectOf","generateAppliedColors","panels","DOMParser","parseFromString","querySelectorAll","appliedColors","_loop","panel","getAttribute","colorMatch","storedColor","colorName","EditorContainer","EditorContainer_createSuper","handleUndo","currentUndoDepth","undoDepth","appliedColorsHistory","stepToUndo","setIn","previousValue","handleRedo","stepToRedo","handleColorSelection","currentColor","handleVariationSelection","variationId","currentVariation","handleColorApplied","_applyColors","generateDesignVariations","render","colorMap","setAttribute","outerHTML","handleReset","handleSave","onSave","handleUpdate","onUpdate","getCurrentVariationColors","currentVariationId","handleAutofill","currentColors","objectSpread","handleChangeBackground","handleToggleHideOutlines","hideOutlines","defaultColor","defaultVariation","currentAppliedColors","hasIn","Iterable","isIterable","slice","historyEntry","unshift","pop","applyColor","autofill","changeBackground","redo","save","selectColor","selectVariation","toggleHideOutlines","undo","update","canRedo","canUndo","currentVariationColors","ShareModal_templateObject","Content","onClose","onDownloadSvg","onDownloadPng","ShareModal_StyleWrapper","theme_ModalClose","origin","theme_Dropdown","dropdownData","ShareModal","handleOpen","handleClose","handleDownloadSvg","element","encodeURIComponent","display","body","appendChild","click","removeChild","handleDownloadPng","canvas","canvg","dataUrl","toDataURL","ShareModal_Content","DesignSettingsModal_templateObject","onChangeName","onChangeStatus","onChangePrimary","statusOptions","label","DesignSettingsModal_StyleWrapper","theme_Select","option","DesignSettingsModal","handleChangeName","handleChangeStatus","handleChangePrimary","DesignSettingsModal_Content","backgroundOptions","Toolbar_templateObject","ModalWrapper","saveModal","components_ShareModal","shareModal","DesignSettingsModalContainer","designSettingsModal","Toolbar","truncationCount","actionIndex","_indexActions","item","_determineTruncationCount","truncationIndex","windowWidth","actionEdge","Toolbar_ModalWrapper","dataWrapper","content","truncatedContent","onUndo","undoDisabled","onRedo","redoDisabled","dropdown","onBackgroundChange","onHideOutlines","onAutofill","onReset","showSettings","nonTruncatedActions","truncatedActions","Toolbar_StyleWrapper","ColorTile","ColorTile_templateObject","StyledDiv","ColorableSvg_templateObject","ColorableSvg_templateObject2","ColorableSvg","originalColors","applyColors","panelId","VariationPreview","editor_Sidebar_templateObject","StyledSidebar","SidebarUI","editor_Sidebar_templateObject2","selectedVariation","selectedColor","onColorSelect","onVariationSelect","sidebar","editor_ColorableSvg","theme_FillToBottom","editor_ColorTile","Canvas_templateObject","Canvas_templateObject2","isReadOnly","Canvas","handleClick","checkWhitelist","processWhitelist","whitelistString","targetId","parentElement","parentGroupId","Canvas_StyleWrapper","ProductNotes_templateObject","ProductNotes","ProductNotes_StyleWrapper","PageLayout","CreateNew_templateObject","CreateNew","containers_CreateNewContainer","createNewData","containers_EditorContainer","editorData","containers_UserContainer","userData","editor_Toolbar","editor_Sidebar","editor_Canvas","editor_ProductNotes","designs_handleActions","designsById","deletedId","sortNewestToOldest","designA","designB","aId","bId","getRecentDesigns","count","getDesignsByUser","getDesignById","PAGE_SIZE","Counter","DesignsContainer_createSuper","updateCount","pageSize","Data","_React$Component2","_super2","_len2","_key2","hasMore","_fetchDesigns","setLoading","onFetchDesigns","loadedCount","onChangeLoadedCount","_this3","designRequest","onFetchProducts","onFetchManufacturers","responses","loadMore","designs","DataConnected","DesignsContainer","DesignsContainer_Counter","counter","Designs","RecentDesigns_templateObject","containers_DesignsContainer","EditContainer","EditContainer_createSuper","onRequestDesign","userMatchesDesign","withoutDesign","Edit_templateObject","Edit","containers_EditContainer","editData","Edit_PageLayout","RecentDesignsContainer","RecentDesignsContainer_createSuper","productsRequest","manufacturersRequest","LogInForm","isDisabled","onRegister","onResetPassword","onUsernameChange","LogInFormContainer","LogInFormContainer_createSuper","pendingRequest","handleUsernameChange","handlePasswordChange","cancelablePromise","onLogin","pendingPromises","components_LogInForm","RegisterForm","onLogIn","onPasswordConfirmationChange","passwordConfirmation","showSuccessMessage","RegisterFormContainer","RegisterFormContainer_createSuper","registrationSent","handlePasswordConfirmationChange","password2","components_RegisterForm","ResetPasswordForm","ResetPasswordFormContainer","ResetPasswordFormContainer_createSuper","resetPasswordSent","components_ResetPasswordForm","AccountForm_templateObject","AccountForm","showResetPassword","handleResetPasswordToggle","_this$props","AccountForm_StyleWrapper","containers_ResetPasswordFormContainer","handlePasswordReset","containers_LogInFormContainer","onToggleRecognition","containers_RegisterFormContainer","CTABanner_templateObject","bgRev","CTABanner","CTABanner_StyleWrapper","Home","AccountBanner_templateObject","home_CTABanner","Login_templateObject","Login","redirectAfterLogin","redirectUrl","Login_StyleWrapper","components_AccountForm","MyDesignsContainer","MyDesignsContainer_createSuper","onDeleteDesign","withoutUser","DesignManager_templateObject","DesignManager","onDelete","DesignManager_StyleWrapper","ModalConfirm","MyDesigns_templateObject","MyDesigns","MyDesigns_StyleWrapper","containers_MyDesignsContainer","userDesigns","my_designs_DesignManager","getUserById","ViewContainer","ViewContainer_createSuper","usedColors","handleBackgroundChange","promises","designPromise","onFetchDesign","onFetchUser","productColors","newState","accumulatedColors","colorValue","view_Sidebar_templateObject","view_Sidebar_templateObject2","Sidebar_StyledSidebar","Sidebar_VariationPreview","View_templateObject","View","containers_ViewContainer","viewData","View_PageLayout","view_Sidebar","App","components_EmbeddedCss","components_LegacyRedirect","Switch","components_RestrictedRoute","exact","component","layout_Footer","theme_Alert","library","add","faAngleDown","faCog","faEdit","faEllipsisH","faEraser","faExclamationCircle","faEye","faEyeSlash","faHome","faImage","faInfo","faMagic","faPalette","faPlus","faRedo","faSave","faShare","faSignOutAlt","faSpinner","faUndo","faTimes","faTrash","AppContainer","AppContainer_createSuper","onCheckLogin","BrowserRouter","styled_components_browser_esm","components_App","combineReducers","DesignsReducer","UserReducer","users","UsersReducer","ProductsReducer","ManufacturersReducer","composeEnahancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","thunk","NodeList","es","store","Store","containers_AppContainer","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ed06a6b0.chunk.js","sourcesContent":["export const navy = \"#001F3F\";\nexport const blueLighter = \"#f0fbff\";\nexport const blue = \"#0074D9\";\nexport const blueDarker = \"#005daa\";\nexport const aqua = \"#7FDBFF\";\nexport const teal = \"#39CCCC\";\nexport const olive = \"#3D9970\";\nexport const green = \"#2ECC40\";\nexport const lime = \"#01FF70\";\nexport const yellow = \"#FFDC00\";\nexport const orange = \"#FF851B\";\nexport const red = \"#FF4136\";\nexport const fuchsia = \"#F012BE\";\nexport const purple = \"#B10DC9\";\nexport const maroon = \"#85144B\";\nexport const white = \"#FFFFFF\";\nexport const gray = \"#AAAAAA\";\nexport const grayDark = \"#5e5e5e\";\nexport const grayDarker = \"#3a3a3a\";\nexport const silver = \"#DDDDDD\";\nexport const black = \"#111111\";\n","export const mediaSm = \"@media screen and (min-width: 600px)\";\nexport const mediaMd = \"@media screen and (min-width: 900px)\";\nexport const mediaLg = \"@media screen and (min-width: 1200px)\";\nexport const mediaXl = \"@media screen and (min-width: 1800px)\";\n","import { css } from \"styled-components\";\nimport { gray, grayDark } from \"./colors\";\n\n/**\n * Creates a gray checkerboad background to denote transparency.\n */\nexport const transparencyBackground = css`\n  background-image: linear-gradient(45deg, ${gray} 25%, transparent 25%),\n    linear-gradient(-45deg, ${gray} 25%, transparent 25%),\n    linear-gradient(45deg, transparent 75%, ${gray} 75%),\n    linear-gradient(-45deg, transparent 75%, ${gray} 75%);\n  background-color: ${grayDark};\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n`;\n","import styled from \"styled-components\";\n\n/**\n * A styled <a> element. Passes all props directly to the <a> element.\n *\n * @param {Node} children The items to be rendered inside the <a> tag\n */\nconst A = styled.a`\n  color: ${({ theme }) => theme.colors.blue};\n  text-decoration: none;\n  margin: 0;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nexport default A;\n","import styled, { css } from \"styled-components\";\n\n/**\n * Displays styled text with the provided tag\n * @param {Boolean} isLight If set to true, the text will be lighter colored for dark backgrounds\n */\nexport const TypographyStyles = css`\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  line-height: 16px;\n`;\nconst StyledText = styled.p`\n  margin: 0;\n  padding: 0;\n  ${TypographyStyles}\n\n  color: ${props =>\n    props.isLight ? props.theme.colors.silver : props.theme.colors.black};\n`;\nexport default StyledText;\n","import React from \"react\";\nimport Text from \"./Text\";\n\n/**\n * A styled <p> element.\n * This uses <Text> and passes arguments there.\n * @param {Node} children The items to render inside the <p>\n */\nconst P = ({ children, ...props }) => (\n  <Text as=\"p\" {...props}>\n    {children}\n  </Text>\n);\nexport default P;\n","/* eslint-disable no-console */\nimport React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport P from \"./P\";\n\n/**\n * Triggers a success alert to display with the provided message.\n * @param  {String} message message\n */\nexport function success(message) {\n  window.kp_alert({\n    message,\n    type: \"success\"\n  });\n}\n\n/**\n * Triggers a warning alert to display with the provided message.\n * @param  {String} message message\n */\nexport function warn(message) {\n  window.kp_alert({\n    message,\n    type: \"warning\"\n  });\n}\n\n/**\n * Triggers an error alert to display with the provided message.\n * @param  {String} message message\n */\nexport function error(message) {\n  window.kp_alert({\n    message,\n    type: \"error\"\n  });\n}\n\n/**\n * Styling for the element that contains all of the alerts.\n */\nconst AlertWrapper = styled.div`\n  position: fixed;\n  top: 7vh;\n  right: 0;\n  z-index: 1000;\n`;\n\n/** The animation used when an alert is created. */\nconst alertEntryAnimation = keyframes`\n  0% {\n    transform: translateX(120%);\n  }\n  80% {\n    transform: translateX(-5%);\n  }\n  100% {\n    transform: translateX(0);\n  }\n`;\n\n/**\n * An individual alert\n * @prop {Boolean} removing Causes the alert to animate away before being removed from the DOM\n * @prop {\"success\"|\"warning\"|\"error\"} alertType\n */\nexport const StyledAlert = styled.div`\n  padding: 8px;\n  box-sizing: border-box;\n  width: 300px;\n  position: relative;\n  max-height: 500px\n  transition: .2s max-height, .2s padding;\n  transition-delay: .2s;\n  ${props =>\n    props.removing\n      ? css`\n          max-height: 0;\n          padding: 0;\n        `\n      : null};\n\n  > div {\n    box-sizing: border-box;\n    padding: 8px 8px 8px 12px;\n    background: ${props => props.theme.colors.grayDarker};\n    border-radius: 4px;\n    width: 100%;\n    box-shadow: 0 1px 2px 0px ${props => props.theme.colors.black};\n    transition: 0.2s transform;\n    position: relative;\n    animation: ${alertEntryAnimation} .3s ease-out 1\n\n    ${props =>\n      props.removing\n        ? css`\n            transform: translateX(120%);\n          `\n        : null};\n\n    &:before {\n      display: block;\n      position: absolute;\n      content: \"\";\n      width: 4px;\n      height: 100%;\n      top: 0;\n      left: 0;\n\n      ${props =>\n        props.alertType === \"error\"\n          ? css`\n              background: ${props.theme.colors.red};\n            `\n          : null};\n      ${props =>\n        props.alertType === \"success\"\n          ? css`\n              background: ${props.theme.colors.green};\n            `\n          : null};\n      ${props =>\n        props.alertType === \"warning\"\n          ? css`\n              background: ${props.theme.colors.orange};\n            `\n          : null};\n    }\n  }\n`;\n\nclass Alert extends React.Component {\n  state = {\n    /** An array of alerts being displayed. */\n    alerts: [\n      // { Example data format\n      //   // A unique ID for this alert\n      //   id: \"abc\",\n      //   // The displayed message\n      //   message: \"boogers\",\n      //   // The type of alert (error, warning, or success)\n      //   type: \"error\",\n      //   // The time that it was created (ms)\n      //   created: 123,\n      //   // Indication if the alert is about to be removed\n      //   removing: false\n      // },\n    ]\n  };\n\n  componentDidMount() {\n    if (window.kp_alert) {\n      console.error(\n        \"More than one instance of Alert is rendered. Only one Alert should be rendered at a time.\"\n      );\n      return;\n    }\n    window.kp_alert = alert => {\n      return this.handleIncomingAlert(alert);\n    };\n  }\n\n  componentWillUnmount() {\n    delete window.kp_alert;\n  }\n\n  handleIncomingAlert = alert => {\n    const { message, type, duration = 5000 } = alert;\n    if (!message || !type) {\n      console.error(\n        \"Alert called with no message or type. A type and message must be supplied.\"\n      );\n      return;\n    }\n    if (![\"error\", \"success\", \"warning\"].includes(type)) {\n      console.error(\n        `Alert called with ${type} as type. Only \"error\", \"success\", and \"warning\" are accepted.`\n      );\n      return;\n    }\n\n    // Create the alert and store it on the state with the others\n    const currentAlerts = this.state.alerts;\n    const currentTime = new Date().getTime();\n    const id = `${currentTime}${type}${message}`;\n    currentAlerts.push({\n      message,\n      type,\n      created: currentTime,\n      id,\n      removing: false\n    });\n    this.setState({\n      alerts: currentAlerts\n    });\n\n    // Wait the specified duration to remove the alert\n    return new Promise(resolve => {\n      window.setTimeout(() => {\n        // Only remove the alert if it still exists\n        if (this.state.alerts.find(alert => alert.id === id)) {\n          this.removeAlert(id);\n        }\n        resolve();\n      }, duration);\n    });\n  };\n\n  removeAlert = id => {\n    // Indicate on the alert that it will be removed soon\n    const updatedAlerts = this.state.alerts.map(alert => {\n      if (alert.id === id) {\n        alert.removing = true;\n      }\n      return alert;\n    });\n    this.setState({\n      alerts: updatedAlerts\n    });\n\n    // Give the alert time to animate out before removing it from the DOM\n    window.setTimeout(() => {\n      const prunedAlerts = this.state.alerts.filter(alert => alert.id !== id);\n      this.setState({\n        alerts: prunedAlerts\n      });\n    }, 1000);\n  };\n\n  render() {\n    return (\n      <AlertWrapper>\n        {this.state.alerts.map(alert => (\n          <StyledAlert\n            alertType={alert.type}\n            removing={alert.removing}\n            key={alert.id}\n          >\n            <div>\n              <P isLight>{alert.message}</P>\n            </div>\n          </StyledAlert>\n        ))}\n      </AlertWrapper>\n    );\n  }\n}\n\nexport default Alert;\n","import styled from \"styled-components\";\nimport { TypographyStyles } from \"./Text\";\n\nconst BlockListItem = styled.div`\n  ${TypographyStyles};\n  display: block;\n  border-bottom: 1px solid\n    ${props =>\n      props.isLight ? props.theme.colors.grayDark : props.theme.colors.gray};\n  color: ${props =>\n    props.isLight ? props.theme.colors.silver : props.theme.colors.black};\n  white-space: nowrap;\n  padding: 8px;\n  text-decoration: none;\n  transition: 0.2s background;\n`;\n\nexport default BlockListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TypographyStyles } from \"./Text\";\n\nconst StyledButton = styled.button`\n  ${TypographyStyles};\n  background: linear-gradient(\n    -45deg,\n    ${props => props.theme.colors.silver},\n    ${props => props.theme.colors.silver},\n    ${props => props.theme.colors.gray},\n    ${props => props.theme.colors.gray}\n  );\n  background-size: 400% 400%;\n  background-position: 100% 50%;\n  border-radius: 4px;\n  border: 0;\n  padding: 4px 8px;\n  margin: 8px 0;\n  cursor: pointer;\n  transition: 0.6s background;\n  box-sizing: border-box;\n  outline: none;\n  text-decoration: none;\n  text-align: center;\n  color: ${props => props.theme.colors.black};\n\n  &:hover {\n    background-position: 0% 50%;\n  }\n  &.is-primary {\n    background-image: linear-gradient(\n      -45deg,\n      ${props => props.theme.colors.blue},\n      ${props => props.theme.colors.blue},\n      ${props => props.theme.colors.blueDarker},\n      ${props => props.theme.colors.blueDarker}\n    );\n    color: ${({ theme }) => theme.colors.silver};\n  }\n  &.is-block {\n    display: block;\n    width: 100%;\n  }\n  &[disabled] {\n    opacity: 0.5;\n    box-shadow: none;\n    cursor: not-allowed;\n  }\n`;\n\nconst Button = ({ isPrimary, isBlock, children, className, ...props }) => {\n  const classes = className ? [className] : [];\n  if (isPrimary) {\n    classes.push(\"is-primary\");\n  }\n  if (isBlock) {\n    classes.push(\"is-block\");\n  }\n  return (\n    <StyledButton className={classes.join(\" \")} {...props}>\n      {children}\n    </StyledButton>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { TypographyStyles } from \"./Text\";\n\nconst StyleWrapper = styled.span`\n  position: relative;\n`;\n\n/**\n * Applies styles to the dropdown itself\n */\nexport const StyledDropdown = styled.span`\n  position: absolute;\n  top: calc(100% + 4px);\n  right: 0;\n  background: ${props => props.theme.colors.white};\n  border-radius: 4px;\n  border: 1px solid ${props => props.theme.colors.gray};\n  text-align: right;\n  box-shadow: 0px 2px 2px -1px ${props => props.theme.colors.grayDarker};\n`;\n\n/**\n * A component for a styled dropdown item.\n */\nexport const Item = styled.a`\n  ${TypographyStyles};\n  display: block;\n  text-decoration: none;\n  white-space: nowrap;\n  padding: 4px 8px;\n  font-size: 14px;\n  color: ${props =>\n    props.disabled ? props.theme.colors.gray : props.theme.colors.black};\n  transition: 0.2s;\n  cursor: ${props => (props.disabled ? \"default\" : \"pointer\")};\n\n  ${props =>\n    !props.disabled &&\n    `&:hover {\n      background: ${props.theme.colors.silver};\n    }`};\n`;\n\n/**\n * A component for a styled spacer to separate dropdown items.\n */\nexport const Spacer = styled.div`\n  border-bottom: 1px solid ${props => props.theme.colors.gray};\n  margin: 4px 0;\n`;\n\n/**\n * Wraps the provided children in a ralative container and allows for opening and closing an\n * absolutely positionined dropdown.\n *\n * Example:\n * ```\n * <Dropdown\n *   dropdownContent={dropdownData => <a onClick={dropdownData.actions.close}>Close</a>}\n * >\n *   {dropdownData => <a onClick={dropdownData.actions.open}>Open</a>}\n * </Dropdown>\n * ```\n */\nclass Dropdown extends React.Component {\n  static propTypes = {\n    /**\n     * The persistent content that the dropdown is bound to.\n     */\n    children: PropTypes.func.isRequired,\n    /**\n     * The contents of the dropdown\n     */\n    dropdownContent: PropTypes.func.isRequired\n  };\n  state = {\n    /**\n     * Indicates if the dropdown is open or not\n     */\n    isOpen: false\n  };\n\n  /**\n   * Based on the provided event, close the dropdown if the event happened outside this component.\n   * This enables the dropdown to automatically close when clicking outside of it.\n   * @param {Object} event A DOM click event\n   */\n  autoClose = event => {\n    if (!this.state.isOpen) {\n      return;\n    }\n    if (this.node.contains(event.target)) {\n      return;\n    }\n    this.close();\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"click\", this.autoClose);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.autoClose);\n  }\n\n  /**\n   * Opens the dropdown\n   */\n  open = () => {\n    this.setState({\n      isOpen: true\n    });\n  };\n\n  /**\n   * Closes the dropdown\n   */\n  close = () => {\n    this.setState({\n      isOpen: false\n    });\n  };\n\n  render() {\n    const renderData = {\n      actions: {\n        open: this.open,\n        close: this.close\n      },\n      props: {\n        isOpen: this.state.isOpen\n      },\n      components: {\n        Item,\n        Spacer\n      }\n    };\n    return (\n      <StyleWrapper ref={node => (this.node = node)}>\n        {this.props.children(renderData)}\n        {this.state.isOpen && (\n          <StyledDropdown>\n            {this.props.dropdownContent(renderData)}\n          </StyledDropdown>\n        )}\n      </StyleWrapper>\n    );\n  }\n}\n\nexport default Dropdown;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faAngleDown,\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faEraser,\n  faExclamationCircle,\n  faEye,\n  faEyeSlash,\n  faHome,\n  faImage,\n  faInfo,\n  faMagic,\n  faPalette,\n  faPlus,\n  faRedo,\n  faSave,\n  faShare,\n  faSignOutAlt,\n  faSpinner,\n  faUndo,\n  faTimes,\n  faTrash\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport function setupFontAwesome() {\n  library.add(\n    faAngleDown,\n    faCog,\n    faEdit,\n    faEllipsisH,\n    faEraser,\n    faExclamationCircle,\n    faEye,\n    faEyeSlash,\n    faHome,\n    faImage,\n    faInfo,\n    faMagic,\n    faPalette,\n    faPlus,\n    faRedo,\n    faSave,\n    faShare,\n    faSignOutAlt,\n    faSpinner,\n    faUndo,\n    faTimes,\n    faTrash\n  );\n}\n\nexport default FontAwesomeIcon;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"./Icon\";\n\nconst StyledError = styled.div`\n  color: ${({ theme }) => theme.colors.red};\n  border: 1px solid ${({ theme }) => theme.colors.red};\n  padding: 4px;\n  margin: 0 0 8px;\n  border-radius: 4px;\n  display: flex;\n\n  > .error-icon {\n    padding: 1px 4px 0 0;\n  }\n`;\n\n/**\n * Displays an error box that can house any type of content.\n */\nconst Error = ({ children, ...props }) => (\n  <StyledError {...props}>\n    <Icon className=\"error-icon\" icon=\"exclamation-circle\" />\n    <div>{children}</div>\n  </StyledError>\n);\n\nexport default Error;\n","export default function embedAllowed(whitelist, _referrer = document.referrer) {\n  const parentDomain = _referrer\n    .replace(/http(s)?:\\/\\//, \"\")\n    .split(\"/\")[0]\n    .split(\":\")[0];\n  const embedWhiteList = [\"localhost\", ...whitelist].map(entry => entry.trim());\n  return embedWhiteList.includes(parentDomain);\n}\n","/**\n * A mockable method for getting the dimeions of the application.\n */\nexport default function getAppDimensions() {\n  return {\n    height: document.documentElement.clientHeight,\n    width: document.documentElement.clientWidth\n  };\n}\n","export const isBeta = window.location.hostname === \"beta.kitepaint.com\";\nexport const isProduction = window.location.hostname === \"timothymcmackin.github.io\";\n","import { isBeta, isProduction } from \"../constants/environment\";\n\n/**\n * Builds the correct asset url depending on the current environment.\n * @param {String} path An absolute asset path e.g. \"/my-image.png\"\n */\nexport default function getAssetUrl(path) {\n  return `//timothymcmackin.github.io/static.kitepaint${path}`;\n  // if (isBeta) {\n  //   return `//static.beta.kitepaint.com${path}`;\n  // }\n  // if (isProduction) {\n  //   return `//static.kitepaint.com${path}`;\n  // }\n  return path;\n}\n","/**\n * Retrieves the query params from the URL.\n * Duplicate params will be collected as an array of the values.\n * @return {Object}\n */\nexport default function getQueryParams() {\n  // Get the params separated into an array where each item looks like \"foo=bar\"\n  const paramStrings = window.location.search\n    .substr(1)\n    .split(\"&\")\n    .filter(paramString => !!paramString);\n\n  // Reduce the paramStrings into a POJO\n  return paramStrings.reduce((accumulated, paramString) => {\n    const parts = paramString.split(\"=\");\n    const paramName = parts[0];\n    const paramValue = decodeURIComponent(parts[1]);\n\n    // If we haven't handled this param yet, add it to the accumulated object\n    if (!accumulated[paramName]) {\n      accumulated[paramName] = paramValue;\n      return accumulated;\n    }\n\n    // If we have handled this param, and it is an array, add this value to the array\n    if (Array.isArray(accumulated[paramName])) {\n      accumulated[paramName].push(paramValue);\n      return accumulated;\n    }\n\n    // If we have handled this param, and it is not an array, make an array with both values\n    accumulated[paramName] = [accumulated[paramName], paramValue];\n    return accumulated;\n  }, {});\n}\n","/**\n * Makes a promise cancelable\n */\nconst makeCancelable = promise => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      val => (hasCanceled_ ? reject({ isCanceled: true }) : resolve(val)),\n      error => (hasCanceled_ ? reject({ isCanceled: true }) : reject(error))\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    }\n  };\n};\n\nexport default makeCancelable;\n","export default function redirect(url) {\n  window.location.href = url;\n}\n","/**\n * Compares strings discounting leading/trailing white space and case sensitivity\n * @param  {String} ...strings\n * @return {Boolean} is true if all strings provided match\n */\nfunction softCompareStrings(...strings) {\n  let match = true;\n  strings.find((string, index) => {\n    if (!index) {\n      return false;\n    }\n    const prevString = strings[index - 1];\n    if (prevString.trim().toLowerCase() !== string.trim().toLowerCase()) {\n      match = false;\n      return true;\n    }\n    return false;\n  });\n  return match;\n}\n\nexport default softCompareStrings;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { getAppDimensions } from \"../utils\";\n\n/**\n * A style wrapper that just uses the provided height.\n */\nexport const StyleWrapper = styled.div`\n  overflow: auto;\n  ${props =>\n    props.height || props.height === 0\n      ? css`\n          height: ${props.height}px;\n        `\n      : null};\n`;\n\n/**\n * A div whose position and size is evaluated, and the div's height is increased to fill to the\n * bottom of the screen.\n *\n * The sizing is only reevaluated on window resize. Do not use this for elements that are expected\n * to move vertically (below accordion menus, delayed loading content, etc).\n */\nclass FillToBottom extends React.Component {\n  static propTypes = {\n    /**\n     * An offset to adjust the height of the fill-to-bottom. This can be used to take into account\n     * content that is below the fill-to-bottom that we want to make room for. A value of 5 will\n     * make the FillToBottom extend down until it is 5px away from the edge of the screen.\n     */\n    offset: PropTypes.number.isRequired,\n    /**\n     * If set to true, fill-to-bottom will make itself smaller if necessary, to stay at the bottom\n     * of the screen.\n     * If false, fill-to-bottom will only make the element larger, not smaller.\n     * @type {[type]}\n     */\n    strict: PropTypes.bool.isRequired,\n    /**\n     * The minimum height (px) that the element can be.\n     */\n    minHeight: PropTypes.number.isRequired,\n    children: PropTypes.node\n  };\n  static defaultProps = {\n    offset: 0,\n    strict: false,\n    minHeight: 0\n  };\n  state = {\n    height: null\n  };\n\n  /**\n   * The original height of the wrapper is stored after mounting so that we can reevaluate the\n   * height after window resizes while maintaining consistent resizing logic.\n   */\n  originalHeight = 0;\n\n  componentDidMount() {\n    this.originalHeight = this.wrapper.offsetHeight;\n    this.fillToBottom();\n    window.addEventListener(\"resize\", this.fillToBottom);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.fillToBottom);\n  }\n\n  /**\n   * Evaluates the wrapper and sets the state with the desired height.\n   */\n  fillToBottom = () => {\n    const wrapperRect = this.wrapper.getBoundingClientRect();\n    const distanceFromBottom =\n      getAppDimensions().height -\n      wrapperRect.y -\n      this.originalHeight -\n      this.props.offset;\n\n    // If we are not being strict, we want to return early if distanceFromBottom is negative because\n    // that would make the element smaller.\n    if (distanceFromBottom < 0 && !this.props.strict) {\n      return;\n    }\n\n    // Get the desired height\n    const height = this.originalHeight + distanceFromBottom;\n\n    // If the element's height is lower than the provided minHeight, use the minHeight instead.\n    if (height < this.props.minHeight) {\n      this.setState({ height: this.props.minHeight });\n      return;\n    }\n\n    // Apply the desired height\n    this.setState({ height });\n  };\n\n  render() {\n    return (\n      <StyleWrapper\n        height={this.state.height}\n        ref={wrapper => (this.wrapper = wrapper)}\n      >\n        {this.props.children}\n      </StyleWrapper>\n    );\n  }\n}\n\nexport default FillToBottom;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"./Text\";\n\n/**\n * A styled <h1> element.\n * This uses <Text> and passes arguments there.\n * @param {Node} children The items to render inside the <h1>\n */\nconst H1 = ({ children, ...props }) => (\n  <Text as=\"h1\" {...props}>\n    {children}\n  </Text>\n);\nconst StyledH1 = styled(H1)`\n  font-size: 32px;\n  line-height: 32px;\n`;\nexport default StyledH1;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"./Text\";\n\n/**\n * A styled <h2> element.\n * This uses <Text> and passes arguments there.\n * @param {Node} children The items to render inside the <h2>\n */\nconst H2 = ({ children, ...props }) => (\n  <Text as=\"h2\" {...props}>\n    {children}\n  </Text>\n);\nconst StyledH2 = styled(H2)`\n  font-size: 24px;\n  line-height: 24px;\n`;\nexport default StyledH2;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"./Text\";\n\n/**\n * A styled <h3> element.\n * This uses <Text> and passes arguments there.\n * @param {Node} children The items to render inside the <h3>\n */\nconst H3 = ({ children, ...props }) => (\n  <Text as=\"h3\" {...props}>\n    {children}\n  </Text>\n);\nconst StyledH3 = styled(H3)`\n  font-size: 18px;\n  line-height: 24px;\n`;\nexport default StyledH3;\n","import styled from \"styled-components\";\nimport { TypographyStyles } from \"./Text\";\n\nconst Input = styled.input`\n  ${TypographyStyles} display: block;\n  width: 100%;\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  box-sizing: border-box;\n  outline: none;\n\n  &[readOnly] {\n    background: ${props => props.theme.colors.silver};\n  }\n  &:focus {\n    box-shadow: 0 0 3px ${props => props.theme.colors.blue};\n  }\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Text from \"./Text\";\n\n/**\n * A styled <label> element.\n * This uses <Text> and passes arguments there.\n * @param {Node} children The items to render inside the <label>\n */\nconst Label = ({ children, ...props }) => (\n  <Text as=\"label\" {...props}>\n    {children}\n  </Text>\n);\nconst StyledLabel = styled(Label)`\n  margin: 8px 0 4px;\n  display: block;\n  font-weight: 600;\n`;\nexport default StyledLabel;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Icon from \"./Icon\";\nimport Text from \"./Text\";\n\nconst animation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst StyleWrapper = styled.div`\n  text-align: center;\n\n  .spinner {\n    display: inline-block;\n    animation: ${animation} 1s infinite linear;\n  }\n`;\nconst Loading = () => (\n  <StyleWrapper>\n    <Icon icon=\"spinner\" className=\"spinner\" />{\" \"}\n    <Text as=\"span\">Loading...</Text>\n  </StyleWrapper>\n);\n\nexport default Loading;\n","import ReactDOM from \"react-dom\";\n\n/**\n * Body portal creates a ReactDOM portal to send the provided content to the end of the <body>\n * element.\n */\nconst BodyPortal = ({ children }) => {\n  return ReactDOM.createPortal(children, document.querySelector(\"body\"));\n};\n\nexport default BodyPortal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\nimport BodyPortal from \"./utilities/BodyPortal\";\n\nconst backdropAnimation = keyframes`\n  0% {\n    background-position: 0% 0%;\n  },\n  100% {\n    background-position: 100% 100%;\n  }\n`;\n\n/**\n * Styling for the modal's backdrop\n */\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: linear-gradient(-45deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0));\n  background-size: 400% 400%;\n  background-position: 100% 100%;\n  z-index: 100;\n  animation: ${backdropAnimation} 0.6s;\n`;\n\nconst modalAnimation = keyframes`\n  0% {\n    opacity: 0\n  }\n\n  15% {\n    opacity: 0\n  }\n\n  100% {\n    opacity: 1\n  }\n`;\n\n/**\n * Styling for the modal window itself\n */\nexport const StyledModal = styled.div`\n  position: fixed;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  max-width: 300px;\n  background: ${props => props.theme.colors.white};\n  z-index: 100;\n  padding: 16px;\n  border: 1px solid ${props => props.theme.colors.gray};\n  border-radius: 4px;\n  animation: ${modalAnimation} 0.8s;\n`;\n\nconst Modal = ({ children, isOpen, modalContent, onBackdropClick }) => (\n  <React.Fragment>\n    {children}\n    {isOpen && (\n      <BodyPortal>\n        <ModalBackdrop onClick={onBackdropClick} className=\"testing_backdrop\" />\n        <StyledModal className=\"testing_modal\">{modalContent}</StyledModal>\n      </BodyPortal>\n    )}\n  </React.Fragment>\n);\n\nModal.defaultProps = {\n  onBackdropClick() {}\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  isOpen: PropTypes.bool,\n  modalContent: PropTypes.node,\n  onBackdropClick: PropTypes.func\n};\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"./Icon\";\n\n/**\n * A component used as a close button in the upper right corner of a modal.\n */\nconst ModalCloseStyle = styled(Icon)`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  cursor: pointer;\n`;\n\nconst ModalClose = props => <ModalCloseStyle icon=\"times\" {...props} />;\nexport default ModalClose;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport P from \"./P\";\n\n/**\n * Styling for the modal window itself\n */\nexport const StyleWrapper = styled.div`\n  .buttons {\n    display: flex;\n\n    button {\n      flex-grow: 1;\n      margin: 8px 8px 0;\n    }\n  }\n`;\n\n/**\n * Modal prompt prompts the user for a single string value and has submit and cancel buttons.\n */\nclass ModalPrompt extends React.Component {\n  static propTypes = {\n    /**\n     * Triggered when the user confirms.\n     */\n    onConfirm: PropTypes.func.isRequired,\n    /**\n     * Triggered when the cancel button is pressed, or when the backdrop is clicked on.\n     */\n    onCancel: PropTypes.func,\n    /**\n     * A message to pose to the user.\n     */\n    message: PropTypes.string.isRequired,\n    /**\n     * The text to display on the confirm button.\n     */\n    confirmText: PropTypes.string,\n    /**\n     * The text to display on the cancel button.\n     */\n    cancelText: PropTypes.string,\n    /**\n     * A function that renders content that can trigger the modal.\n     */\n    children: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    confirmText: \"Confirm\",\n    cancelText: \"Cancel\",\n    onCancel: () => {}\n  };\n\n  state = {\n    /**\n     * Is the modal currently open?\n     */\n    isOpen: false\n  };\n\n  /**\n   * Handles when the confirm button is pressed.\n   */\n  handleConfirm = () => {\n    this.setState({ isOpen: false });\n    this.props.onConfirm();\n  };\n\n  /**\n   * Handles the cancelation by closing/resetting the modal and triggering onCancel.\n   */\n  handleCancel = () => {\n    this.setState({ isOpen: false });\n    this.props.onCancel();\n  };\n\n  render() {\n    const data = {\n      actions: {\n        open: () => this.setState({ isOpen: true })\n      },\n      props: {\n        isOpen: this.state.isOpen\n      }\n    };\n    return (\n      <Modal\n        isOpen={this.state.isOpen}\n        onBackdropClick={this.handleCancel}\n        modalContent={\n          <StyleWrapper>\n            <P>{this.props.message}</P>\n            <div className=\"buttons\">\n              <Button\n                isPrimary\n                className=\"testing_confirm\"\n                onClick={this.handleConfirm}\n              >\n                {this.props.confirmText}\n              </Button>{\" \"}\n              <Button\n                className=\"testing_cancel\"\n                type=\"button\"\n                onClick={this.handleCancel}\n              >\n                {this.props.cancelText}\n              </Button>\n            </div>\n          </StyleWrapper>\n        }\n      >\n        {this.props.children(data)}\n      </Modal>\n    );\n  }\n}\n\nexport default ModalPrompt;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Label from \"./Label\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\n\n/**\n * Styling for the modal window itself\n */\nexport const StyleWrapper = styled.div`\n  .buttons {\n    display: flex;\n\n    button {\n      flex-grow: 1;\n      margin: 8px 8px 0;\n    }\n  }\n`;\n\n/**\n * Modal prompt prompts the user for a single string value and has submit and cancel buttons.\n */\nclass ModalPrompt extends React.Component {\n  static propTypes = {\n    /**\n     * Triggered when the prompt has been submitted. Is provided the user-provided string value as\n     * the first parameter.\n     */\n    onSubmit: PropTypes.func.isRequired,\n    /**\n     * Triggerd when the cancel button is pressed, or when the backdrop is clicked on.\n     */\n    onCancel: PropTypes.func,\n    /**\n     * A message to pose to the user to guide them on what value should be entered.\n     */\n    message: PropTypes.string.isRequired,\n    /**\n     * The text to display on the submit button.\n     */\n    submitText: PropTypes.string,\n    /**\n     * The text to display on the cancel button.\n     */\n    cancelText: PropTypes.string,\n    /**\n     * A function that renders content that can trigger the modal.\n     */\n    children: PropTypes.func.isRequired,\n    /**\n     * The value for the type attribute on the input.\n     */\n    inputType: PropTypes.oneOf([\"text\", \"number\", \"password\", \"email\"])\n  };\n\n  static defaultProps = {\n    submitText: \"Submit\",\n    cancelText: \"Cancel\",\n    inputType: \"text\",\n    onCancel: () => {}\n  };\n\n  state = {\n    /**\n     * Is the modal currently open?\n     */\n    isOpen: false,\n    /**\n     * What is the user provided value?\n     */\n    value: \"\"\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // Auto focus the input when the modal opens\n    if (!prevState.isOpen && this.state.isOpen && this.promptInput) {\n      this.promptInput.focus();\n    }\n  }\n\n  /**\n   * Handles the submission event by calling onSubmit with the value and closing/resetting the\n   * modal. This does not call onSubmit if the value is empty.\n   * @param  {Object} event A DOM submit event\n   */\n  handleSubmit = event => {\n    event.preventDefault();\n    if (!this.state.value) {\n      return;\n    }\n    this.props.onSubmit(this.state.value);\n    this.setState({ isOpen: false, value: \"\" });\n  };\n\n  /**\n   * Handles the cancelation by closing/resetting the modal and triggering onCancel.\n   */\n  handleCancel = () => {\n    this.setState({ isOpen: false, value: \"\" });\n    this.props.onCancel();\n  };\n\n  /**\n   * Handles a change in the provided value by updating state.\n   * @param  {Object} event A DOM change event\n   */\n  handleValueChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  render() {\n    const data = {\n      actions: {\n        open: () => this.setState({ isOpen: true })\n      },\n      props: {\n        isOpen: this.state.isOpen\n      }\n    };\n    return (\n      <Modal\n        isOpen={this.state.isOpen}\n        onBackdropClick={this.handleCancel}\n        modalContent={\n          <StyleWrapper className=\"testing_modal\">\n            <form onSubmit={this.handleSubmit} className=\"testing_submit\">\n              <Label>{this.props.message}</Label>\n              <Input\n                type={this.props.inputType}\n                ref={input => (this.promptInput = input)}\n                className=\"testing_prompt-value\"\n                value={this.state.value}\n                onChange={this.handleValueChange}\n              />\n              <div className=\"buttons\">\n                <Button type=\"submit\" isPrimary>\n                  {this.props.submitText}\n                </Button>{\" \"}\n                <Button\n                  type=\"button\"\n                  className=\"testing_cancel\"\n                  onClick={this.handleCancel}\n                >\n                  {this.props.cancelText}\n                </Button>\n              </div>\n            </form>\n          </StyleWrapper>\n        }\n      >\n        {this.props.children(data)}\n      </Modal>\n    );\n  }\n}\n\nexport default ModalPrompt;\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Layer_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 909.6 340.42\",\n    style: {\n      \"enableBackground\": \"new 0 0 909.6 340.42\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.96,336.19c-0.78,0.69-2.96,1.68-1.41,3.43c1.55,1.74,4.26-0.22,4.26-0.22s172.42-113.07,290.41-107.24 c117.99,5.83,144.29,99.69,144.29,99.69c0.76,2.17,2.25,2.35,2.25,2.35l6.46,0.12c2.32-0.22,2.63-2.5,2.63-2.5 s36.68-91.49,132.9-94.44c113.67-3.49,321.78,101.26,321.78,101.26c2.26,1.79,2.77,2.11,4.08,0.83c1.32-1.28-1.17-4.2-1.17-4.2 L460.32,6.54c-16.43-15.5-36.21,1.39-36.21,1.39C361.64,52.04,2.73,335.5,1.96,336.19z\"\n  })));\n};\n\nexport default __webpack_public_path__ + \"static/media/dual-line.ba70883a.svg\";\nexport { SvgComponent as ReactComponent };","var _polygon;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Layer_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 1929.27 631.64\",\n    style: {\n      \"enableBackground\": \"new 0 0 1929.27 631.64\"\n    },\n    xmlSpace: \"preserve\"\n  }, props), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"251.3,621.31 963.98,196.48 1676.91,621.31 1929.27,24.37 1587.84,13.43 1532.03,12.18 964.64,6.31 397.26,12.44 341.45,13.59 42.66,22.63 0,23.92 \"\n  })));\n};\n\nexport default __webpack_public_path__ + \"static/media/quad-line.e47a29cb.svg\";\nexport { SvgComponent as ReactComponent };","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { ReactComponent as DualLine } from \"./dual-line.svg\";\nimport { ReactComponent as QuadLine } from \"./quad-line.svg\";\n\nconst k1Animation = keyframes`\n  0% {\n    transform: translate3d(0, 0, 0) rotate(180deg);\n  }\n  48% {\n    transform: translate3d(0, 145px, 0) rotate(180deg);\n  }\n  52% {\n    transform: translate3d(0, 145px, 0) rotate(90deg);\n  }\n  96% {\n    transform: translate3d(145px, 145px, 0) rotate(90deg);\n  }\n  100% {\n    transform: translate3d(145px, 145px, 0) rotate(0deg);\n  }\n`;\nconst k2Animation = keyframes`\n  0% {\n    transform: translate3d(0, 0, 0) rotate(270deg);\n  }\n  48% {\n    transform: translate3d(-145px, 0, 0) rotate(270deg);\n  }\n  52% {\n    transform: translate3d(-145px, 0, 0) rotate(180deg);\n  }\n  96% {\n    transform: translate3d(-145px, 145px, 0) rotate(180deg);\n  }\n  100% {\n    transform: translate3d(-145px, 145px, 0) rotate(90deg);\n  }\n`;\nconst k3Animation = keyframes`\n  0% {\n    transform: translate3d(0, 0, 0) rotate(0deg);\n  }\n  48% {\n    transform: translate3d(0, -145px, 0) rotate(0deg);\n  }\n  52% {\n    transform: translate3d(0, -145px, 0) rotate(-90deg);\n  }\n  96% {\n    transform: translate3d(-145px, -145px, 0) rotate(-90deg);\n  }\n  100% {\n    transform: translate3d(-145px, -145px, 0) rotate(-180deg);\n  }\n`;\nconst k4Animation = keyframes`\n  0% {\n    transform: translate3d(0, 0, 0) rotate(90deg);\n  }\n  48% {\n    transform: translate3d(145px, 0, 0) rotate(90deg);\n  }\n  52% {\n    transform: translate3d(145px, 0, 0) rotate(0deg);\n  }\n  96% {\n    transform: translate3d(145px, -145px, 0) rotate(0deg);\n  }\n  100% {\n    transform: translate3d(145px, -145px, 0) rotate(-90deg);\n  }\n`;\n\nconst StyleWrapper = styled.div`\n  width: 200px;\n  height: 200px;\n  position: relative;\n  margin: 32px auto;\n\n  svg {\n    width: 20%;\n    height: 20%;\n  }\n\n  .k1 {\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    transform: rotate(180deg);\n    animation: ${k1Animation} 3s infinite linear;\n  }\n  .k2 {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    transform: rotate(270deg);\n    animation: ${k2Animation} 3s infinite linear;\n  }\n  .k3 {\n    position: absolute;\n    bottom: 8px;\n    right: 8px;\n    animation: ${k3Animation} 3s infinite linear;\n  }\n  .k4 {\n    position: absolute;\n    bottom: 8px;\n    left: 8px;\n    transform: rotate(90deg);\n    animation: ${k4Animation} 3s infinite linear;\n  }\n`;\n\nconst PageLoader = () => (\n  <StyleWrapper>\n    <DualLine className=\"k1\" />\n    <QuadLine className=\"k2\" />\n    <DualLine className=\"k3\" />\n    <QuadLine className=\"k4\" />\n  </StyleWrapper>\n);\n\nexport default PageLoader;\n","import PageLoader from \"./PageLoader\";\nexport default PageLoader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { TypographyStyles } from \"./Text\";\n\nexport const SelectWrapper = styled.div`\n  ${TypographyStyles};\n  position: relative;\n\n  select {\n    appearance: none;\n    display: block;\n    background: transparent;\n    width: 100%;\n    padding: 4px;\n    border-radius: 4px;\n    border: 1px solid ${({ theme }) => theme.colors.gray};\n    box-sizing: border-box;\n    outline: none;\n  }\n  &:after {\n    content: \"\";\n    display: block;\n    border-right: 1px solid ${props => props.theme.colors.black};\n    border-bottom: 1px solid ${props => props.theme.colors.black};\n    transform: rotate(45deg);\n    width: 8px;\n    height: 8px;\n    position: absolute;\n    top: 8px;\n    right: 8px;\n  }\n`;\n\nconst Select = ({ children, ...props }) => (\n  <SelectWrapper>\n    <select {...props}>{children}</select>\n  </SelectWrapper>\n);\n\nSelect.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Select;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport BlockListItem from \"./BlockListItem\";\n\n/**\n * An overall wrapper for the sidebar\n */\nexport const StyleWrapper = styled.div`\n  width: 175px;\n  display: block;\n  flex-shrink: 0;\n  background: ${props => props.theme.colors.grayDarker};\n  box-shadow: 0 0 2px 2px ${props => props.theme.colors.black};\n  position: relative;\n`;\n\n/**\n * An individual, possibly selectable, item that appreas in the sidebar.\n *\n * @param {Boolean} hasAction indicates that the item is actionable. Adds a hover state\n * @param {Boolean} isActive indicates that the item is active.\n */\nexport const Item = styled(BlockListItem)`\n  display: flex;\n  align-items: center;\n  cursor: ${props => (props.hasAction ? \"pointer\" : \"default\")};\n  transition: 0.3s background;\n  position: relative;\n\n  &:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    height: 100%;\n    width: ${props => (props.isActive ? 8 : 0)}px;\n    background: ${props => props.theme.colors.silver};\n    top: 0;\n    right: 0;\n    transition: 0.3s width;\n  }\n  ${props =>\n    props.hasAction\n      ? css`\n          &:hover {\n            background: ${props.theme.colors.black};\n          }\n        `\n      : null};\n\n  > * {\n    margin: 0 4px;\n  }\n`;\n\n/**\n * A heading that can appear above a group of ListItems.\n */\nconst Heading = styled(BlockListItem)`\n  padding: 16px 8px 4px;\n  font-weight: bold;\n  font-size: 12px;\n  white-space: initial;\n`;\n\n/**\n * The sidebar displayed when editing/creating a new design\n */\nconst Sidebar = ({ children, ...props }) => (\n  <StyleWrapper {...props}>\n    {children({\n      components: {\n        Item,\n        Heading\n      }\n    })}\n  </StyleWrapper>\n);\n\nSidebar.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst sizes = {\n  xs: 4,\n  sm: 8,\n  md: 16,\n  lg: 32,\n  xl: 64\n};\n\nexport const StyledSpacer = styled.div`\n  margin-top: ${props => (props.top ? sizes[props.top] : 0)}px;\n  margin-bottom: ${props => (props.bottom ? sizes[props.bottom] : 0)}px;\n  margin-left: ${props => (props.left ? sizes[props.left] : 0)}px;\n  margin-right: ${props => (props.right ? sizes[props.right] : 0)}px;\n`;\n\nconst Spacer = props => <StyledSpacer {...props} />;\n\nSpacer.propTypes = {\n  bottom: PropTypes.oneOf(Object.keys(sizes)),\n  left: PropTypes.oneOf(Object.keys(sizes)),\n  right: PropTypes.oneOf(Object.keys(sizes)),\n  top: PropTypes.oneOf(Object.keys(sizes))\n};\n\nexport default Spacer;\n","import styled from \"styled-components\";\n\nconst Tile = styled.div`\n  background: ${props => props.theme.colors.white};\n  border: 1px solid ${props => props.theme.colors.gray};\n  border-radius: 4px;\n`;\n\nexport default Tile;\n","import styled from \"styled-components\";\nimport { TypographyStyles } from \"./Text\";\n\n/**\n * A button that behaves like regular text but provides the user with indication\n * that it is clickable.\n */\nconst TextButton = styled.button`\n  ${TypographyStyles};\n  border: 0;\n  outline: 0;\n  background: transparent;\n  box-shadow: none;\n  cursor: pointer;\n  color: ${props => props.theme.colors.blue};\n  padding: 0;\n  margin: 0;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &[disabled] {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nexport default TextButton;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport BodyPortal from \"./utilities/BodyPortal\";\nimport Text from \"./Text\";\nimport Icon from \"./Icon\";\n\nexport const fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n`;\n\n/**\n * A style wrapper that creates the tooltip UI.\n * @param {Boolean} removing If true, the tooltip will begin to fade out\n * @param {Number} top The top position of the target element for this to be positioned near\n * @param {Number} left The left position of the target element for this to be positioned near\n * @param {Number} fadeSpeed The speed at which the tooltip should fade in or out (seconds)\n */\nexport const StyleWrapper = styled.div`\n  position: absolute;\n  background: ${props => props.theme.colors.white};\n  padding: 4px;\n  border: 1px solid ${props => props.theme.colors.silver};\n  border-radius: 2px;\n  box-shadow: 0px 2px 2px -1px ${props => props.theme.colors.gray};\n  top: ${props => props.top}px;\n  left: ${props => props.left}px;\n  transform: translateY(calc(-100% - 10px)) translateX(-6px);\n  opacity: ${props => (props.removing ? 0 : 1)};\n  animation: ${props => (props.removing ? fadeOut : fadeIn)}\n    ${props => props.fadeSpeed}s;\n  z-index: 200;\n\n  &:before {\n    content: \"\";\n    display: block;\n    width: 12px;\n    height: 12px;\n    background: ${props => props.theme.colors.white};\n    border: 1px solid ${props => props.theme.colors.silver};\n    border-left: 0px;\n    border-top: 0px;\n    position: absolute;\n    top: calc(100% - 6px);\n    left: 5px;\n    transform: rotate(45deg);\n    border-bottom-right-radius: 2px;\n  }\n`;\n\nexport const TooltipIcon = styled(Icon)`\n  border: 1px solid ${props => props.theme.colors.gray};\n  color: gray;\n  border-radius: 50%;\n  width: 12px !important;\n  height: 12px;\n  display: inline-block;\n  padding: 1px;\n  box-sizing: border-box;\n  transform: translateY(-3px);\n  cursor: help;\n`;\n\nconst TooltipText = styled(Text)`\n  position: relative;\n`;\n\n/**\n * A component that displays a small info icon. When hovering over the icon, a tooltip will appear\n * floating above that icon, containing the provided content.\n */\nclass Tooltip extends React.Component {\n  static defaultProps = {\n    fadeSpeedMs: 250\n  };\n  static propTypes = {\n    /**\n     * The speed of the fade animation in milliseconds.\n     */\n    fadeSpeedMs: PropTypes.number.isRequired,\n\n    /**\n     * The content to be displayed in the tooltip\n     */\n    children: PropTypes.node.isRequired\n  };\n  state = {\n    /**\n     * Indicates if the tooltip should be rendered to the dom.\n     * @type {Boolean}\n     */\n    renderTooltip: false,\n    /**\n     * Indicates that we are about to remove the tooltip from the dom. Allows for the tooltip to\n     * fade out before being removed.\n     * @type {Boolean}\n     */\n    removingTooltip: false,\n    /**\n     * The top position of the info icon, used for targeting the tooltip.\n     */\n    top: null,\n    /**\n     * The left position of the info icon, used for targeting the tooltip.\n     */\n    left: null\n  };\n\n  /**\n   * Clean up any pending timeouts when unmounting.\n   */\n  componentWillUnmount() {\n    window.clearTimeout(this.fadeTimer);\n  }\n\n  /**\n   * The stored fade out timer. Allows for cancellation.\n   */\n  fadeTimer = null;\n\n  /**\n   * Displays the tooltip when the info icon is hovered over.\n   * @param  {Object} event The mouseenter event from the DOM\n   */\n  handleMouseEnter = event => {\n    window.clearTimeout(this.fadeTimer);\n    const targetBounds = event.target.getBoundingClientRect();\n    this.setState({\n      renderTooltip: true,\n      removingTooltip: false,\n      top: targetBounds.y,\n      left: targetBounds.x\n    });\n  };\n\n  /**\n   * Removes the tooltip when the info icon is no longer hovered over.\n   */\n  handleMouseLeave = () => {\n    this.setState({\n      removingTooltip: true\n    });\n    this.fadeTimer = window.setTimeout(() => {\n      this.setState({\n        removingTooltip: false,\n        renderTooltip: false\n      });\n    }, this.props.fadeSpeedMs);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <TooltipIcon\n          icon=\"info\"\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n        />\n        {this.state.renderTooltip && (\n          <BodyPortal>\n            <StyleWrapper\n              className=\"testing_tooltip\"\n              top={this.state.top}\n              left={this.state.left}\n              isVisible={this.state.displayTooltip}\n              fadeSpeed={this.props.fadeSpeedMs / 1000}\n              removing={this.state.removingTooltip}\n            >\n              <TooltipText>{this.props.children}</TooltipText>\n            </StyleWrapper>\n          </BodyPortal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tooltip;\n","import * as colors from \"./colors\";\nimport * as media from \"./media\";\nimport * as patterns from \"./patterns\";\nimport A from \"./A\";\nimport Alert from \"./Alert\";\nimport BlockListItem from \"./BlockListItem\";\nimport Button from \"./Button\";\nimport Dropdown from \"./Dropdown\";\nimport Error from \"./Error\";\nimport FillToBottom from \"./FillToBottom\";\nimport H1 from \"./H1\";\nimport H2 from \"./H2\";\nimport H3 from \"./H3\";\nimport Icon from \"./Icon\";\nimport Input from \"./Input\";\nimport Label from \"./Label\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nimport ModalClose from \"./ModalClose\";\nimport ModalConfirm from \"./ModalConfirm\";\nimport ModalPrompt from \"./ModalPrompt\";\nimport P from \"./P\";\nimport PageLoader from \"./PageLoader\";\nimport Select from \"./Select\";\nimport Sidebar from \"./Sidebar\";\nimport Spacer from \"./Spacer\";\nimport Text from \"./Text\";\nimport TextButton from \"./TextButton\";\nimport Tile from \"./Tile\";\nimport Tooltip from \"./Tooltip\";\n\nconst Theme = { colors, media, patterns };\nexport default Theme;\n\nexport {\n  A,\n  Alert,\n  BlockListItem,\n  Button,\n  Dropdown,\n  Error,\n  FillToBottom,\n  H1,\n  H2,\n  H3,\n  Icon,\n  Input,\n  Label,\n  Loading,\n  Modal,\n  ModalClose,\n  ModalConfirm,\n  ModalPrompt,\n  P,\n  PageLoader,\n  Select,\n  Sidebar,\n  Spacer,\n  Text,\n  TextButton,\n  Tile,\n  Tooltip\n};\n","/**\n * Activates a new account. When registering a new account, an email\n * is sent to the user with a link to confirm their email address,\n * activating their account.\n * @param  {String} userId The ID of the user\n * @param  {String} activationCode The activation code included in\n * the email confirmation email\n * @return {Promise}\n */\nexport default async function activateAccount(userId, activationCode) {\n  const bodyFormData = new FormData();\n  bodyFormData.append(\"uid\", userId);\n  bodyFormData.append(\"actcode\", activationCode);\n\n  // Make the request\n  const response = await this.axiosInstance.post(\"/activate.php\", bodyFormData);\n\n  if (!response.data || !response.data.activated) {\n    let message;\n    if (response.data && response.data.message) {\n      message = response.data.message;\n    } else {\n      message = \"Could not activate the account\";\n    }\n    return Promise.reject(message);\n  }\n\n  return response;\n}\n","import { error, success } from \"../../theme/Alert\";\n\n/**\n * Changes the email address for the user's account\n * @param  {String}  userId The user's id\n * @param  {String}  newEmail The user's new email address\n * @return {Promise}\n */\nexport default async function changeEmail(userId, newEmail) {\n  // Build the form data\n  const bodyFormData = new FormData();\n  bodyFormData.append(\"id\", userId);\n  bodyFormData.append(\"email\", newEmail);\n\n  // Make the request\n  const response = await this.axiosInstance.post(\n    \"/change_email.php\",\n    bodyFormData\n  );\n\n  if (!response.data || !response.data.changed) {\n    const message = response.data\n      ? response.data.message\n      : \"Could not change the email address.\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  response.data.email = newEmail;\n  success(\"Your email address has been saved.\");\n  return response;\n}\n","import { error, success } from \"../../theme/Alert\";\n\n/**\n * Changes the user's password\n * @param  {Onbject}  data Must contain string values: username, currentPassword,\n * newPassword, and confirmNewPassword\n * @return {Promise}\n */\nexport default async function changePassword(data) {\n  const { username, currentPassword, newPassword, confirmNewPassword } = data;\n  // Build the form data\n  const bodyFormData = new FormData();\n  bodyFormData.append(\"username\", username);\n  bodyFormData.append(\"oldpassword\", currentPassword);\n  bodyFormData.append(\"password2\", confirmNewPassword);\n  bodyFormData.append(\"password\", newPassword);\n\n  // Make the request\n  const response = await this.axiosInstance.post(\n    \"/changepassword.php\",\n    bodyFormData\n  );\n\n  if (!response.data || !response.data.changed) {\n    const message = response.data\n      ? response.data.message\n      : \"Could not change the password.\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  success(\"Your password has been changed.\");\n  return response;\n}\n","/**\n * Check if the user is already logged in based on session data.\n * @return {Promise}\n */\nexport default async function checkLoginStatus() {\n  // Get the user data from session storage\n  const sessionData = localStorage.getItem(\"user\");\n  let parsedSessionData;\n  try {\n    parsedSessionData = JSON.parse(sessionData);\n  } catch {\n    parsedSessionData = false;\n  }\n\n  // If we had no user data, reject.\n  if (!parsedSessionData) {\n    return new Promise((resolve, reject) =>\n      reject({\n        data: \"No session data was found. The user is not logged in.\"\n      })\n    );\n  }\n\n  // Build the form data\n  const bodyFormData = new FormData();\n  Object.keys(parsedSessionData).forEach(key =>\n    bodyFormData.append(key, parsedSessionData[key])\n  );\n  bodyFormData.append(\"update_login\", true);\n\n  // Make the request\n  const response = await this.axiosInstance.post(\"/index.php\", bodyFormData);\n\n  // If the response has no data or indicates that the user is not logged in, reject.\n  if (!response.data || !response.data.logged_in) {\n    return new Promise((resolve, reject) => reject(response));\n  }\n\n  // Store the user data in session storage\n  localStorage.setItem(\"user\", JSON.stringify(response.data));\n\n  // Return the response\n  return response;\n}\n","import { error } from \"../../theme/Alert\";\n\n/**\n * Sends a request to register a new KitePaint account.\n * @param  {Object}  data Must contain `{username, email, password, password2}`\n * @return {Promise}\n */\nexport default async function createAccount(data) {\n  // Build the form data\n  const bodyFormData = new FormData();\n  Object.keys(data).forEach(key => bodyFormData.append(key, data[key]));\n\n  // Make the request\n  const response = await this.axiosInstance.post(\"/register.php\", bodyFormData);\n\n  // If there's no data, or if the data returns with registered as false, reject.\n  if (!response.data || !response.data.registered) {\n    const message = response.data\n      ? response.data.message\n      : \"The registration request was unsuccessful\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n  return response;\n}\n","import { error, success } from \"../../theme/Alert\";\n\n/**\n * Creates a new design based on the provided data.\n * @param  {Design}  design An unsaved design model\n * @return {Promise} Resolves with an object that contains an id property of the new design.\n */\nexport default async function createDesign(design) {\n  const defaults = {\n    status: 0,\n    new: 1\n  };\n  const data = Object.assign(\n    defaults,\n    design.getProperties(\"name\", \"product\", \"user\", \"variations\", \"status\")\n  );\n\n  // Stringify the variations since that's what the API handles for now.\n  data.variations = JSON.stringify(data.variations);\n  const bodyFormData = new FormData();\n  Object.keys(data).forEach(key => bodyFormData.append(key, data[key]));\n\n  const response = await this.axiosInstance.post(\"/designs.php\", bodyFormData);\n\n  // The server should respond with valid: true and with the id of the newly created design.\n  if (!response.data || !response.data.id || !response.data.valid) {\n    const message = response.data\n      ? response.data.message\n      : \"The design could not be saved\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  success(\"The design has been saved\");\n  return response;\n}\n","import { error, success } from \"../../theme/Alert\";\n\n/**\n * Triggers deletion of the specified account\n * @param  {String}  id       The account's ID\n * @param  {String}  password The account's password\n * @return {Promise}\n */\nexport default async function deleteAccount(id, password) {\n  // Build the form data\n  const bodyFormData = new FormData();\n  bodyFormData.append(\"id\", id);\n  bodyFormData.append(\"password\", password);\n\n  // Make the request\n  const response = await this.axiosInstance.post(\n    \"/delete_account.php\",\n    bodyFormData\n  );\n\n  if (!response.data || !response.data.changed) {\n    const message = response.data\n      ? response.data.message\n      : \"Could not delete account.\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  success(\"Your account has been deleted.\");\n  return response;\n}\n","import { error, success } from \"../../theme/Alert\";\n\n/**\n * Deletes the design with the specified ID.\n * @param  {String}  designId\n * @return {Promise}\n */\nexport default async function deleteDesign(designId) {\n  const data = {\n    delete: true,\n    id: designId\n  };\n  const bodyFormData = new FormData();\n  Object.keys(data).forEach(key => bodyFormData.append(key, data[key]));\n\n  const response = await this.axiosInstance.post(\"/designs.php\", bodyFormData);\n\n  // The server should respond with valid: true and with the id of the newly created design.\n  if (!response.data || !response.data.valid) {\n    const message = response.data\n      ? response.data.message\n      : \"The design could not be deleted\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  success(\"The design has been deleted.\");\n  return response;\n}\n","import PropTypes from \"prop-types\";\nimport { createModel, computed } from \"manikin-model\";\n\n/**\n * A manufacturer is a company that manufactures kites and owns one or more products.\n */\nconst Manufacturer = createModel(\"Manufacturer\", {\n  id: null,\n  name: null,\n  logo: null,\n  website: null,\n\n  // Raw manufacturer JSON\n  json: computed(function() {\n    return this.getProperties(\"id\", \"name\", \"logo\", \"website\");\n  })\n});\n\nManufacturer.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  logo: PropTypes.string.isRequired,\n  website: PropTypes.string,\n  json: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    logo: PropTypes.string,\n    website: PropTypes.string\n  })\n};\n\nexport default Manufacturer;\n\n/**\n * A mock manufacturer used for testing\n * @type {Object}\n */\nconst getMockManufacturer = (overrides = {}) =>\n  new Manufacturer(\n    Object.assign(\n      {\n        id: \"manufacturer-1\",\n        name: \"Krazy Kites\",\n        logo: \"abc.jpg\",\n        website: \"http://krazykites.com\"\n      },\n      overrides\n    )\n  );\nexport { getMockManufacturer };\n","import PropTypes from \"prop-types\";\n\n/**\n * Status can be applied to any model to indicate it's public visibility.\n */\nexport const statusProp = PropTypes.oneOf([\"0\", \"1\", \"2\"]);\nconst Status = {\n  \"0\": \"Private\",\n  \"1\": \"Unlisted\",\n  \"2\": \"Public\",\n  PRIVATE: \"0\",\n  UNLISTED: \"1\",\n  PUBLIC: \"2\"\n};\nexport default Status;\n","import PropTypes from \"prop-types\";\nimport { createModel, computed } from \"manikin-model\";\nimport { getMockManufacturer } from \"./Manufacturer\";\nimport Status, { statusProp } from \"./Status\";\n\n/**\n * A product is a kite that can be customized to create a design.\n */\nconst Product = createModel(\"Product\", {\n  id: null,\n  embed: null,\n  name: null,\n  notes: null,\n  manufacturer: null,\n  status: null,\n  url: null,\n  colors: null,\n  variations: null,\n\n  // Raw manufacturer JSON\n  json: computed(function() {\n    return this.getProperties(\n      \"id\",\n      \"embed\",\n      \"name\",\n      \"notes\",\n      \"manufacturer\",\n      \"status\",\n      \"url\",\n      \"colors\",\n      \"variations\"\n    );\n  })\n});\nProduct.propTypes = {\n  id: PropTypes.string.isRequired,\n  embed: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  notes: PropTypes.arrayOf(PropTypes.string),\n  manufacturer: PropTypes.string.isRequired,\n  status: statusProp.isRequired,\n  url: PropTypes.string,\n  colors: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired\n    })\n  ),\n  variations: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      svg: PropTypes.string.isRequired\n    })\n  ),\n\n  json: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    embed: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    notes: PropTypes.arrayOf(PropTypes.string),\n    manufacturer: PropTypes.string.isRequired,\n    status: statusProp.isRequired,\n    url: PropTypes.string,\n    colors: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        color: PropTypes.string.isRequired\n      })\n    ),\n    variations: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        svg: PropTypes.string.isRequired\n      })\n    )\n  })\n};\n\nexport default Product;\n\n/**\n * A mock product used for testing\n * @type {Object}\n */\nconst getMockProduct = (overrides = {}) =>\n  new Product(\n    Object.assign(\n      {\n        id: \"product-1\",\n        embed: \"krazykites.com\",\n        name: \"Krazy Kite\",\n        manufacturer: getMockManufacturer().get(\"id\"),\n        url: \"http://krazykites.com/krazy-kite\",\n        colors: [\n          {\n            name: \"red\",\n            color: \"#ff0000\"\n          },\n          {\n            name: \"black\",\n            color: \"#000000\"\n          }\n        ],\n        variations: [\n          {\n            id: \"1\",\n            name: \"Standard\",\n            svg: \"<div>Kool Kite</div>\"\n          }\n        ],\n        status: Status.PUBLIC\n      },\n      overrides\n    )\n  );\n\nexport { getMockProduct };\n","import PropTypes from \"prop-types\";\nimport { createModel, computed } from \"manikin-model\";\nimport moment from \"moment\";\nimport { getMockProduct } from \"./Product\";\nimport Status, { statusProp } from \"./Status\";\n\nconst Design = createModel(\"Design\", {\n  active: null,\n  id: null,\n  images: null,\n  created: null,\n  updated: null,\n  name: null,\n  product: null,\n  user: null,\n  variations: null,\n  productStatus: null,\n  status: null,\n\n  // The last updated date as a DateTime object\n  updatedDate: computed(function() {\n    const updated = this.get(\"updated\");\n    return moment(updated, \"MM/DD/YYYY\").valueOf();\n  }),\n\n  // Is this design available publicly?\n  isPublic: computed(function() {\n    return (\n      this.get(\"status\") === Status.PUBLIC &&\n      this.get(\"productStatus\") === Status.PUBLIC\n    );\n  }),\n\n  // Is this design private, meaning only the owner can view it?\n  isPrivate: computed(function() {\n    return (\n      this.get(\"status\") === Status.PRIVATE ||\n      this.get(\"productStatus\") === Status.PRIVATE\n    );\n  }),\n\n  // Is this design based on a private product?\n  isPrivateProduct: computed(function() {\n    return this.get(\"productStatus\") === Status.PRIVATE;\n  }),\n\n  // Either the design status or the product status; whichever is more restrictive.\n  currentStatus: computed(function() {\n    return this.get(\"status\") > this.get(\"productStatus\")\n      ? this.get(\"productStatus\")\n      : this.get(\"status\");\n  }),\n\n  // Serialized JSON\n  json: computed(function() {\n    return this.getProperties(\n      \"id\",\n      \"created\",\n      \"updated\",\n      \"name\",\n      \"product\",\n      \"user\",\n      \"variations\",\n      \"productStatus\",\n      \"status\"\n    );\n  })\n});\n\nDesign.propTypes = {\n  active: PropTypes.string,\n  id: PropTypes.string,\n  images: PropTypes.string,\n  // A string representing the created date\n  created: PropTypes.string,\n  // A string representing the updated date\n  updated: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  // The ID of the cooresponding product\n  product: PropTypes.string.isRequired,\n  // The ID of the user that created the design\n  user: PropTypes.string,\n  variations: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      svg: PropTypes.string.isRequired,\n      primary: PropTypes.bool.isRequired\n    })\n  ),\n  // The status of the cooresponding product\n  productStatus: statusProp,\n  // The status of the design\n  status: statusProp.isRequired,\n  updatedDate: PropTypes.instanceOf(Date),\n  isPublic: PropTypes.bool.isRequired,\n  json: PropTypes.object.isRequired\n};\n\nexport default Design;\n\n/**\n * A mock design used for testing\n * @type {Object}\n */\nconst getMockDesign = (overrides = {}) =>\n  new Design(\n    Object.assign(\n      {\n        id: \"design-1\",\n        created: \"01/01/2018\",\n        updated: \"01/02/2018\",\n        name: \"picasso\",\n        product: getMockProduct().id,\n        variations: [\n          {\n            id: \"1\",\n            name: \"Standard\",\n            svg: \"<div>picasso standard</div>\",\n            primary: true\n          }\n        ],\n        status: Status.PRIVATE,\n        productStatus: Status.PUBLIC\n      },\n      overrides\n    )\n  );\nexport { getMockDesign };\n","import Design from \"../../models/Design\";\nimport { error } from \"../../theme/Alert\";\n\n/**\n * Retrieves the design with the specified id\n * @param  {String}  id\n * @param {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n * requests will not be made within 10 minutes.\n * @return {Promise} resolves with the retrieved design\n */\nexport default async function getDesign(id, useCache = true) {\n  if (useCache) {\n    const cache = await this._cacheable(\"getDesign\", id, {});\n    if (!cache.continue) {\n      return cache;\n    }\n  }\n  const response = await this.axiosInstance.get(\"/designs.php\", {\n    params: {\n      id\n    }\n  });\n\n  // Handle invalid responses\n  if (!response.data || !response.data.length) {\n    const message = response.data\n      ? response.data.message\n      : `The request for design ${id} was unsuccessful`;\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  response.data = response.data[0];\n\n  if (response.data.active === \"0\") {\n    const message = `Design ${id} has been deleted.`;\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  response.data.variations = JSON.parse(response.data.variations);\n  response.data = new Design(response.data);\n  return response;\n}\n","import Qs from \"qs\";\nimport Design from \"../../models/Design\";\nimport { error } from \"../../theme/Alert\";\n\n/**\n * Get saved designs.\n * @param  {Object}  [filter={}] A list of filters. See filterDefaults as an example.\n * @param {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n * requests will not be made within 10 minutes.\n * @return {Promise}\n */\nexport default async function getDesigns(filter = {}, useCache = true) {\n  // Define the default filters and merge them with the user provided filters\n  const filterDefaults = {\n    userId: null,\n    publicOnly: true,\n    limit: 50\n  };\n  const filterWithDefaults = Object.assign({}, filterDefaults, filter);\n\n  // Build the request data to be sent to the server as query params\n  const requestData = {\n    filter: {\n      active: 1\n    },\n    order: [\"id\", \"DESC\"]\n  };\n  if (filterWithDefaults.limit) {\n    requestData.limit = filterWithDefaults.limit;\n  }\n  if (filterWithDefaults.publicOnly) {\n    requestData.filter.status = 2;\n  }\n  if (filterWithDefaults.userId) {\n    requestData.filter.user = filterWithDefaults.userId;\n  }\n\n  // Convert the request data to query params using Qs. This is done because providing nested\n  // parms to Axios's params config prop doesn't work correctly.\n  const requestString = Qs.stringify(requestData);\n\n  // Look for cached values if useCache is true\n  if (useCache) {\n    const cache = await this._cacheable(\"getDesign\", requestString);\n    if (!cache.continue) {\n      return cache;\n    }\n  }\n\n  // Make the request\n  const response = await this.axiosInstance.get(\n    `/designs.php?${requestString}`\n  );\n\n  // Handle invalid responses\n  if (!response.data) {\n    const message = response.data\n      ? response.data.message\n      : \"The request for designs was unsuccessful\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  response.data = response.data.map(design => {\n    design.variations = JSON.parse(design.variations);\n    return new Design(design);\n  });\n\n  return response;\n}\n","import Manufacturer from \"../../models/Manufacturer\";\n// import { error } from \"../../theme/Alert\";\n\n/**\n * Get all manufacturers.\n * @param  {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n * requests will not be made within 10 minutes.\n * @return {Promise} { data: Manufacturer[] }\n */\nexport default async function getManufacturers(useCache = true) {\n  // Look for cached values if useCache is true\n  if (useCache) {\n    const cache = await this._cacheable(\"getManufacturers\");\n    if (!cache.continue) {\n      return cache;\n    }\n  }\n\n  // // Make the request\n  // const response = await this.axiosInstance.get(`/manufacturers.php`, {\n  //   params: {\n  //     activated: 1\n  //   }\n  // });\n\n  // // Handle invalid responses\n  // if (!response.data) {\n  //   const message = response.data\n  //     ? response.data.message\n  //     : \"The request for manufacturers was unsuccessful\";\n  //   error(message);\n  //   return new Promise((resolve, reject) => reject(message));\n  // }\n\n  const response = {\n    data: [\n      // {\n      //   id: \"1\",\n      //   name: \"Revolution\",\n      //   logo: \"revolution.png\",\n      //   website: \"http://revkites.com\"\n      // },\n      // {\n      //   id: \"3\",\n      //   name: \"WattyWorks\",\n      //   logo: \"wattyworks.jpg\",\n      //   website: \"http://watty.us\"\n      // },\n      // {\n      //   id: \"4\",\n      //   name: \"3 Wind\",\n      //   logo: \"3wind.jpg\",\n      //   website: \"\"\n      // },\n      // {\n      //   id: \"5\",\n      //   name: \"Kite Forge\",\n      //   logo: \"kiteforge-onblack.png\",\n      //   website: \"http://kiteforge.com\"\n      // },\n      {\n        id: \"6\",\n        name: \"Flying Smiles Kites\",\n        logo: \"compassRoseRough.png\",\n        website: \"http://flyingsmileskites.com\"\n      }\n    ]\n  };\n\n  response.data = response.data.map(\n    manufacturer => new Manufacturer(manufacturer)\n  );\n\n  return response;\n}\n","import Product from \"../../models/Product\";\n// import { error } from \"../../theme/Alert\";\n\n/**\n * Get all products.\n * @param  {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n * requests will not be made within 10 minutes.\n * @return {Promise}\n */\nexport default async function getProducts(useCache = true) {\n  // Look for cached values if useCache is true\n  if (useCache) {\n    const cache = await this._cacheable(\"getProducts\");\n    if (!cache.continue) {\n      return cache;\n    }\n  }\n\n  // Make the request\n  // const response = await this.axiosInstance.get(`/products.php`);\n\n  // // Handle invalid responses\n  // if (!response.data) {\n  //   const message = response.data\n  //     ? response.data.message\n  //     : \"The request for products was unsuccessful\";\n  //   error(message);\n  //   return new Promise((resolve, reject) => reject(message));\n  // }\n\n  const cr100pct = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\\r\\n<!-- Generator: Adobe Illustrator 21.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\\r\\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\\r\\n\\t viewBox=\"0 0 1741.8 587.4\" style=\"enable-background:new 0 0 1741.8 587.4;\" xml:space=\"preserve\">\n    <polygon\n    class=\"leading-edge\"\n    points=\"798,39.2 1203.9,42.1 1549,41 1604.8,42.2 1903.6,51.4 1946.2,52.8 1963.2,12.5 1572.9,2.1 1205.6,0 702.1,0.1 372.2,5 0,13.9 17,54.1 358.4,43.5 414.2,42.3 \"\n    id=\"polygon25\"\n    transform=\"matrix(0.9,0,0,0.9,0.48832246,0.52052154)\" />\n    <path\n    id=\"vert1\" class=\"panel vert1\" data-id=\"vert1\" data-autofill=\"vert1\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 51.978516,48.113281 c -12.20471,0.358779 -24.297254,0.723634 -36.189454,1.097657 l 226.607418,537.451172 0.19922,-0.084 28.85742,-17.30468 z\" />\n <path\n    id=\"vert5\" class=\"panel vert5\" data-id=\"vert5\" data-autofill=\"vert5\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 363.18359,41.287109 c -11.93714,0.184311 -23.73188,0.37628 -35.42968,0.572266 L 521.20117,419.50391 548.5293,403.11523 Z\" />\n <path\n    id=\"vert4\" class=\"panel vert4\" data-id=\"vert4\" data-autofill=\"vert4\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 284.64844,42.613281 c -12.55283,0.231372 -24.95482,0.471809 -37.22852,0.716797 l 200.30469,420.236332 29.21875,-17.52149 z\" />\n <path\n    id=\"vert3\" class=\"panel vert3\" data-id=\"vert3\" data-autofill=\"vert3\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 206.76562,44.179688 c -12.39727,0.269265 -24.63844,0.546779 -36.74804,0.830078 l 205.38867,461.925784 29.30273,-17.57227 z\" />\n <path\n    id=\"vert6\" class=\"panel vert6\" data-id=\"vert6\" data-autofill=\"vert6\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 440.18945,40.203125 c -13.05153,0.166749 -25.95653,0.34148 -38.73633,0.521484 L 592.79102,376.57227 621.88477,359.125 Z\" />\n <path\n    id=\"vert2\" class=\"panel vert2\" data-id=\"vert2\" data-autofill=\"vert2\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 130.75391,45.964844 c -12.2834,0.31054 -24.41549,0.629977 -36.400394,0.955078 L 305.7793,548.6875 335.1582,531.07031 Z\" />\n <path\n    id=\"vert7\" class=\"panel vert7\" data-id=\"vert7\" data-autofill=\"vert7\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 519.26367,39.292969 c -13.41131,0.137924 -26.69741,0.28041 -39.83594,0.43164 l 185.40039,293.648441 29.09376,-17.44727 z\" />\n <path\n    id=\"vert8\" class=\"panel vert8\" data-id=\"vert8\" data-autofill=\"vert8\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 605.2168,38.515625 c -13.86689,0.108417 -27.59136,0.223794 -41.18164,0.345703 l 175.24414,249.865232 25.55273,-15.32422 3.0957,-2.17187 -59.07031,-84.94141 z\" />\n <path\n    id=\"horiz1\" class=\"panel horiz1\" data-id=\"horiz1\" data-autofill=\"horiz1\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 748.0214,243.2832 -72.498,43.69532 18.1094,28.68359 73.7929,-44.47461 z m -101.5527,61.20508 -113.4394,68.36914 15.5,30.25781 116.0507,-69.94335 z m -140.7363,84.82031 -114.7051,69.13086 13.8867,31.23047 116.3184,-70.10351 z m -143.97659,86.77344 -103.25,62.22656 13.30078,31.58399 103.83594,-62.58008 z m -132.27929,79.7207 -0.26758,0.16211 13.30273,31.55274 0.26953,-0.16211 z\" />\n <path\n    id=\"horiz2\" class=\"panel horiz2\" data-id=\"horiz2\" data-autofill=\"horiz2\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 678.22845,201.83203 -108.75,65.54297 16.7929,29.4746 111.4786,-67.18554 z m -137.8067,83.05468 -109.1035,65.75586 14.6621,30.76172 111.2344,-67.04101 z m -138.291,83.34571 -108.2578,65.24609 13.3067,31.57813 109.6132,-66.0625 z m -137.6054,82.93359 -63.5977,38.33008 13.3125,31.57422 63.5898,-38.32422 z\" />\n <path\n    id=\"horiz3\" class=\"panel horiz3\" data-id=\"horiz3\" data-autofill=\"horiz3\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 667.05066,126.73439 -67.1484,40.47069 18.1094,28.6836 68.4433,-41.25 z m -96.20109,57.98046 -102.2071,61.59961 15.4981,30.25586 104.81829,-63.17188 z m -129.504,78.05078 -108.4785,65.37891 13.8848,31.22851 110.0937,-66.35156 z m -137.75,83.02149 -100.83003,60.76953 13.29883,31.58007 101.416,-61.12109 z m -129.91206,78.29492 -0.26758,0.16211 13.3125,31.57422 0.26758,-0.16211 z\" />\n <path\n    id=\"horiz4\" class=\"panel horiz4\" data-id=\"horiz4\" data-autofill=\"horiz4\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 626.95106,69.072279 -0.2891,0.17383 19.5215,27.83203 0.1719,-0.10352 z m -29.4043,17.72266 -97.4766,58.748031 16.793,29.47657 100.2031,-60.39257 z m -126.5332,76.259751 -100.2969,60.44727 14.6621,30.76172 102.4278,-61.73243 z m -129.4824,78.03711 -102.6543,61.86719 13.3066,31.58008 104.0098,-62.68555 z m -132.002,79.55469 -63.62498,38.3457 13.3125,31.57617 63.61718,-38.34179 z\" />\n <path\n    id=\"horiz5\" class=\"panel horiz5\" data-id=\"horiz5\" data-autofill=\"horiz5\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 605.42176,38.113289 c -21.6471,0.16873 -42.842,0.36106 -63.8183,0.5625 l -16.5528,9.97657 18.1094,28.68164 63.0937,-38.02539 z m -109.4238,28.04883 -91.8594,55.361331 15.5,30.25585 94.4688,-56.935541 z m -119.1543,71.812501 -101.3691,61.09374 13.8867,31.22852 102.9804,-62.06641 z m -130.64063,78.73437 -98.41016,59.31054 13.29883,31.58204 98.99609,-59.66407 z m -127.54297,76.86914 -0.26953,0.16211 13.3125,31.57422 0.26953,-0.16211 z\" />\n <path\n    id=\"horiz6\" class=\"panel horiz6\" data-id=\"horiz6\" data-autofill=\"horiz6\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 468.6777,39.455099 c -22.7745,0.26832 -45.1667,0.55757 -67.1348,0.86523 l -0.3379,0.20312 c 12.2646,-0.17218 24.6294,-0.34011 37.1446,-0.5 l 7.5117,13.1836 z m -68.666,1.78906 -91.48834,55.13867 14.6621,30.759771 93.61914,-56.423831 z m -120.6739,72.728511 -97.04688,58.48827 13.30469,31.57813 98.40235,-59.30664 z m -126.39649,76.17577 -63.654287,38.36329 13.312497,31.57421 63.64648,-38.35937 z\" />\n <path\n    id=\"horiz7\" class=\"panel horiz7\" data-id=\"horiz7\" data-autofill=\"horiz7\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 331.23046,41.398449 c -23.0336,0.38232 -45.5883,0.78846 -67.7188,1.21484 l -45.4277,27.37891 13.8847,31.228511 z m -142.42,46.23633 -95.988237,57.851551 13.298827,31.58203 96.57621,-58.20507 z m -125.175737,75.441391 -0.26758,0.16211 13.3125,31.57422 0.26758,-0.16211 z\" />\n <path\n    id=\"horiz8\" class=\"panel horiz8\" data-id=\"horiz8\" data-autofill=\"horiz8\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 190.93156,44.123059 c -23.32031,0.52242 -46.12537,1.06845 -68.42578,1.64062 l -0.36328,0.21875 c 2.80628,-0.07225 5.54108,-0.1474 8.36328,-0.21875 l 11.68555,27.73438 z M 99.537033,59.607429 35.855392,97.988289 49.167893,129.56056 112.84172,91.185559 Z\" />\n <path\n    id=\"centerPanel\" class=\"panel centerPanel\" data-id=\"centerPanel\" data-autofill=\"centerPanel\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 870.71278,37.387128 c -28.3433,0 -104.9838,0.17807 -264.62461,1.59082 l 161.99471,232.945312 114.4108,-68.76914 4.4806,0.0475 115.37762,69.35098 161.9948,-232.947072 c -144.0583,-1.27486 -219.49222,-1.5383 -253.87572,-1.57852 l -26.2266,-0.14941 v -0.46934 c 0,0 -4.0821,-0.0211 -13.5298,-0.0211 z\" />\n <path\n    id=\"vert1-9\" class=\"panel vert1-9\" data-id=\"vert1-9\" data-autofill=\"vert1-9\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"M 51.97856,48.11328 C 39.77385,48.47206 27.6813,48.83691 15.7891,49.21093 l 226.60742,537.45118 0.19922,-0.084 28.85742,-17.30468 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"vert5-2\" class=\"panel vert5-2\" data-id=\"vert5-2\" data-autofill=\"vert5-2\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 363.18366,41.2871 c -11.93717,0.18432 -23.73191,0.37628 -35.42971,0.57227 l 193.44721,377.64454 27.3282,-16.38868 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"vert4-2\" class=\"panel vert4-2\" data-id=\"vert4-2\" data-autofill=\"vert4-2\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 284.64848,42.61328 c -12.55283,0.23137 -24.95482,0.47181 -37.22852,0.71679 l 200.3047,420.23634 29.2187,-17.52149 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"vert3-3\" class=\"panel vert3-3\" data-id=\"vert3-3\" data-autofill=\"vert3-3\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 206.76566,44.17968 c -12.39727,0.26927 -24.63844,0.54678 -36.74804,0.83008 l 205.38864,461.92579 29.3028,-17.57227 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"vert6-9\" class=\"panel vert6-9\" data-id=\"vert6-9\" data-autofill=\"vert6-9\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 440.18946,40.20312 c -13.0515,0.16675 -25.9565,0.34148 -38.7363,0.52148 l 191.3379,335.84767 29.0937,-17.44727 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"vert2-8\" class=\"panel vert2-8\" data-id=\"vert2-8\" data-autofill=\"vert2-8\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 130.75395,45.96484 c -12.2834,0.31054 -24.41549,0.62998 -36.40039,0.95508 l 211.42578,501.76758 29.3789,-17.61719 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"vert7-9\" class=\"panel vert7-9\" data-id=\"vert7-9\" data-autofill=\"vert7-9\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 519.26366,39.29296 c -13.4113,0.13793 -26.6974,0.28041 -39.8359,0.43164 l 185.4004,293.64845 29.0938,-17.44727 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"vert8-3\" class=\"panel vert8-3\" data-id=\"vert8-3\" data-autofill=\"vert8-3\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 605.21686,38.51562 c -13.8669,0.10842 -27.5914,0.22379 -41.1817,0.3457 l 175.2442,249.86524 25.5527,-15.32422 3.0957,-2.17187 -59.0703,-84.94141 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz1-1\" class=\"panel horiz1-1\" data-id=\"horiz1-1\" data-autofill=\"horiz1-1\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 748.02146,243.2832 -72.498,43.69532 18.1094,28.68359 73.7929,-44.47461 z m -101.5527,61.20508 -113.4394,68.36914 15.5,30.25781 116.0507,-69.94335 z m -140.7363,84.82031 -114.7051,69.13086 13.8867,31.23047 116.3184,-70.10351 z m -143.97661,86.77344 -103.25,62.22656 13.30078,31.58399 103.83593,-62.58008 z m -132.27929,79.7207 -0.26758,0.16211 13.30273,31.55274 0.26953,-0.16211 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz2-9\" class=\"panel horiz2-9\" data-id=\"horiz2-9\" data-autofill=\"horiz2-9\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 678.22846,201.83203 -108.75,65.54297 16.7929,29.4746 111.4786,-67.18554 z m -137.8067,83.05468 -109.1035,65.75586 14.6621,30.76172 111.2344,-67.04101 z m -138.291,83.34571 -108.25777,65.24609 13.3067,31.57813 109.61317,-66.0625 z m -137.60537,82.93359 -63.5977,38.33008 13.3125,31.57422 63.5898,-38.32422 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz3-1\" class=\"panel horiz3-1\" data-id=\"horiz3-1\" data-autofill=\"horiz3-1\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 667.05066,126.73439 -67.1484,40.47069 18.1094,28.6836 68.4433,-41.25 z m -96.2011,57.98046 -102.2071,61.59961 15.4981,30.25586 104.8183,-63.17188 z m -129.504,78.05078 -108.47845,65.37891 13.8848,31.22851 110.09365,-66.35156 z m -137.74995,83.02149 -100.83003,60.76953 13.29883,31.58007 101.416,-61.12109 z m -129.91206,78.29492 -0.26758,0.16211 13.3125,31.57422 0.26758,-0.16211 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz4-3\" class=\"panel horiz4-3\" data-id=\"horiz4-3\" data-autofill=\"horiz4-3\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 626.95106,69.07227 -0.2891,0.17383 19.5215,27.83203 0.1719,-0.10352 z m -29.4043,17.72266 -97.4766,58.74804 16.793,29.47657 100.2031,-60.39257 z m -126.5332,76.25976 -100.2969,60.44727 14.6621,30.76172 102.4278,-61.73243 z m -129.48236,78.03711 -102.6543,61.86719 13.3066,31.58008 104.0098,-62.68555 z m -132.002,79.55469 -63.62498,38.3457 13.3125,31.57617 63.61718,-38.34179 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz5-7\" class=\"panel horiz5-7\" data-id=\"horiz5-7\" data-autofill=\"horiz5-7\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 605.42176,38.11328 c -21.6471,0.16873 -42.842,0.36106 -63.8183,0.5625 l -16.5528,9.97657 18.1094,28.68164 63.0937,-38.02539 z m -109.4238,28.04883 -91.8594,55.36134 15.5,30.25585 94.4688,-56.93555 z m -119.1543,71.81251 -101.36906,61.09374 13.8867,31.22852 102.98036,-62.06641 z m -130.64059,78.73437 -98.41016,59.31054 13.29883,31.58204 98.99609,-59.66407 z m -127.54297,76.86914 -0.26953,0.16211 13.3125,31.57422 0.26953,-0.16211 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz6-5\" class=\"panel horiz6-5\" data-id=\"horiz6-5\" data-autofill=\"horiz6-5\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 468.67776,39.45509 c -22.7745,0.26832 -45.1667,0.55757 -67.1348,0.86523 l -0.3379,0.20312 c 12.2646,-0.17218 24.6294,-0.34011 37.1446,-0.5 l 7.5117,13.1836 z m -68.666,1.78906 -91.48836,55.13867 14.6621,30.75978 93.61916,-56.42384 z m -120.67392,72.72852 -97.04688,58.48827 13.30469,31.57813 98.40235,-59.30664 z m -126.39649,76.17577 -63.65429,38.36329 13.3125,31.57421 63.64648,-38.35937 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz7-5\" class=\"panel horiz7-5\" data-id=\"horiz7-5\" data-autofill=\"horiz7-5\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 331.2305,41.39844 c -23.0336,0.38232 -45.5883,0.78846 -67.7188,1.21484 l -45.4277,27.37891 13.8847,31.22852 z m -142.42,46.23633 -95.98824,57.85156 13.29883,31.58203 96.57621,-58.20507 z m -125.17574,75.4414 -0.26758,0.16211 13.3125,31.57422 0.26758,-0.16211 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n <path\n    id=\"horiz8-9\" class=\"panel horiz8-9\" data-id=\"horiz8-9\" data-autofill=\"horiz8-9\" ng-click=\"color_panel('all', $event)\" fill=\"#FFFFFF\" stroke=\"#000000\"\n    \n    d=\"m 190.9316,44.12305 c -23.32031,0.52242 -46.12537,1.06845 -68.42578,1.64062 l -0.36328,0.21875 c 2.80628,-0.0722 5.54108,-0.1474 8.36328,-0.21875 l 11.68555,27.73438 z m -91.39453,15.48437 -63.68164,38.38086 13.3125,31.57228 63.67383,-38.37501 z\"\n    transform=\"matrix(-1,0,0,1,1768.5841,0.11311)\" />\n    </svg>`;\n\n  const response = {\n    data: [\n      {\n        id: \"27\",\n        name: \"Compass Rose\",\n        manufacturer: \"6\",\n        url: \"\",\n        colors:\n          '[{\"name\":\"White\",\"color\":\"#ffffff\",\"$$hashKey\":\"018\"},{\"name\":\"Light Gray\",\"color\":\"#cdcdcd\",\"$$hashKey\":\"01E\"},{\"name\":\"Dark Gray\",\"color\":\"#818181\",\"$$hashKey\":\"01G\"},{\"name\":\"Black\",\"color\":\"#000000\",\"$$hashKey\":\"01I\"},{\"name\":\"Yellow\",\"color\":\"#FFFF00\",\"$$hashKey\":\"01K\"},{\"name\":\"Lime\",\"color\":\"#C9FF00\",\"$$hashKey\":\"01M\"},{\"name\":\"Mint\",\"color\":\"#65CF8B\",\"$$hashKey\":\"01O\"},{\"name\":\"Green\",\"color\":\"#00933D\",\"$$hashKey\":\"01Q\"},{\"name\":\"Dark Blue\",\"color\":\"#1F3593\",\"$$hashKey\":\"01S\"},{\"name\":\"Mid Blue\",\"color\":\"#0072C0\",\"$$hashKey\":\"01U\"},{\"name\":\"Light Blue\",\"color\":\"#00AFF1\",\"$$hashKey\":\"01W\"},{\"name\":\"Teal\",\"color\":\"#00AFB2\",\"$$hashKey\":\"01Y\"},{\"name\":\"Plum\",\"color\":\"#590368\",\"$$hashKey\":\"020\"},{\"name\":\"Purple\",\"color\":\"#AC2293\",\"$$hashKey\":\"022\"},{\"name\":\"Lavender\",\"color\":\"#A266DF\",\"$$hashKey\":\"024\"},{\"name\":\"Rubine Red\",\"color\":\"#FF0268\",\"$$hashKey\":\"026\"},{\"name\":\"Red\",\"color\":\"#FF0000\",\"$$hashKey\":\"028\"},{\"name\":\"Orange\",\"color\":\"#FF9A00\",\"$$hashKey\":\"02A\"},{\"name\":\"Gold\",\"color\":\"#FFD000\",\"$$hashKey\":\"02C\"}]',\n        variations: [\n          {\n            id: \"27\",\n            name: \"100%\",\n            svg: cr100pct,\n            sortIndex: 0\n          }\n        ],\n        notes: '[\"\"]',\n        status: \"2\",\n        embed: \"watty.us,www.watty.us\"\n      }\n    ]\n  };\n\n  response.data = response.data.map(product => {\n    product.colors = JSON.parse(product.colors);\n    product.notes = JSON.parse(product.notes).filter(note => !!note);\n    return new Product(product);\n  });\n\n  return response;\n}\n","import PropTypes from \"prop-types\";\nimport { createModel, computed } from \"manikin-model\";\n\n/**\n * A user is an individual user account. It contains limited details that are available publically.\n */\nconst User = createModel(\"User\", {\n  username: null,\n  loginid: null,\n\n  json: computed(function() {\n    return this.getProperties(\"username\", \"loginid\");\n  })\n});\n\nUser.propTypes = {\n  username: PropTypes.string.isRequired,\n  loginid: PropTypes.string.isRequired,\n  json: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    loginid: PropTypes.string.isRequired\n  })\n};\n\nexport default User;\n\n/**\n * A mock user used for testing.\n */\nconst getMockUser = (overrides = {}) =>\n  new User(\n    Object.assign(\n      {\n        username: \"FlyFucker\",\n        loginid: \"abc\"\n      },\n      overrides\n    )\n  );\n\nexport { getMockUser };\n","import Qs from \"qs\";\nimport User from \"../../models/User\";\nimport { error } from \"../../theme/Alert\";\n\n/**\n * Retrieves a user by ID\n * @param  {String}  id\n * @return {Promise} Resolves with the retrieved User\n */\nexport default async function getUser(id, useCache = true) {\n  // Build the request data to be sent to the server as query params\n  const requestData = {\n    filter: {\n      loginid: id\n    },\n    return: [\"username\", \"loginid\"]\n  };\n\n  // Convert the request data to query params using Qs. This is done because providing nested\n  // parms to Axios's params config prop doesn't work correctly.\n  const requestString = Qs.stringify(requestData);\n\n  if (useCache) {\n    const cache = await this._cacheable(\"getUser\", requestString, {});\n    if (!cache.continue) {\n      return cache;\n    }\n  }\n\n  // Make the request\n  const response = await this.axiosInstance.get(`/users.php?${requestString}`);\n\n  // Handle invalid responses\n  if (!response.data || !response.data.length) {\n    const message = response.data\n      ? response.data.message\n      : `The request for user ${id} was unsuccessful`;\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  response.data = new User(response.data[0]);\n\n  return response;\n}\n","/**\n * Log in to a KitePaint account.\n * @param  {String}  username\n * @param  {String}  password\n * @return {Promise}\n */\nexport default async function logIn(username, password) {\n  // Build the form data\n  const bodyFormData = new FormData();\n  bodyFormData.append(\"username\", username);\n  bodyFormData.append(\"password\", password);\n\n  // Make the request\n  const response = await this.axiosInstance.post(\"/index.php\", bodyFormData);\n\n  // If the response has no data or indicates that the user is not logged in, reject.\n  if (!response.data || !response.data.logged_in) {\n    return new Promise((resolve, reject) =>\n      reject(\n        response.data\n          ? response.data.message\n          : \"The log in request was unsuccessful\"\n      )\n    );\n  }\n\n  // Store the user data in session storage\n  localStorage.setItem(\"user\", JSON.stringify(response.data));\n\n  // Return the response\n  return response;\n}\n","import { success } from \"../../theme/Alert\";\n\n/**\n * Logs out the user and destroys their session.\n * @return {Promise}\n */\nexport default async function logOut() {\n  await this.axiosInstance.post(\"/logout.php\");\n  success(\"You have been logged out.\");\n  localStorage.removeItem(\"user\");\n}\n","import { error } from \"../../theme/Alert\";\n\n/**\n * Sends a request to reset a user's password.\n * @param  {String} username The username of the user to reset the password for.\n * @param  {String} email The email address that is on the user's account.\n * @return {Promise}\n */\nexport default async function resetPassword(username, email) {\n  // Build the form data\n  const bodyFormData = new FormData();\n  bodyFormData.append(\"username\", username);\n  bodyFormData.append(\"email\", email);\n\n  // Make the request\n  const response = await this.axiosInstance.post(\n    \"/lostpassword.php\",\n    bodyFormData\n  );\n  // If there's no data, or if the data returns with reset as false, reject.\n  if (!response.data || !response.data.reset) {\n    const message = response.data\n      ? response.data.message\n      : \"The reset password request was unsuccessful.\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n  return response;\n}\n","import { error, success } from \"../../theme/Alert\";\n\n/**\n * Update an existing design\n * @param  {Design}  design\n * @return {Promise}\n */\nexport default async function updateDesign(design) {\n  const data = design.get(\"json\");\n  if (data.variations) {\n    // Stringify the variations since that's what the API handles for now.\n    data.variations = JSON.stringify(data.variations);\n  }\n\n  const bodyFormData = new FormData();\n  Object.keys(data).forEach(key => bodyFormData.append(key, data[key]));\n\n  const response = await this.axiosInstance.post(\"/designs.php\", bodyFormData);\n\n  // The server should respond with valid: true.\n  if (!response.data || !response.data.valid) {\n    const message = response.data\n      ? response.data.message\n      : \"The design could not be updated\";\n    error(message);\n    return new Promise((resolve, reject) => reject(message));\n  }\n\n  success(\"The design has been saved\");\n  return {\n    data: design\n  };\n}\n","import axios from \"axios\";\nimport activateAccount from \"./kitePaint/activateAccount\";\nimport changeEmail from \"./kitePaint/changeEmail\";\nimport changePassword from \"./kitePaint/changePassword\";\nimport checkLoginStatus from \"./kitePaint/checkLoginStatus\";\nimport createAccount from \"./kitePaint/createAccount\";\nimport createDesign from \"./kitePaint/createDesign\";\nimport deleteAccount from \"./kitePaint/deleteAccount\";\nimport deleteDesign from \"./kitePaint/deleteDesign\";\nimport getDesign from \"./kitePaint/getDesign\";\nimport getDesigns from \"./kitePaint/getDesigns\";\nimport getManufacturers from \"./kitePaint/getManufacturers\";\nimport getProducts from \"./kitePaint/getProducts\";\nimport getUser from \"./kitePaint/getUser\";\nimport logIn from \"./kitePaint/logIn\";\nimport logOut from \"./kitePaint/logOut\";\nimport resetPassword from \"./kitePaint/resetPassword\";\nimport updateDesign from \"./kitePaint/updateDesign\";\n\n/**\n * Determine the correct domain to communicate with based on the current applicaiton domain.\n * @return {String}\n */\nexport function _getApiDomain(currentDomain = window.location.hostname) {\n  const apiDomains = {\n    \"beta.kitepaint.com\": \"https://api.beta.kitepaint.com/php\",\n    \"kitepaint.com\": \"https://api.kitepaint.com/php\",\n    default: \"https://api.beta.kitepaint.com/php\"\n  };\n  return apiDomains[currentDomain] || apiDomains.default;\n}\n\n/**\n * A class the provides methods for interacting with the KitePaint REST API\n */\nexport class KitePaintApi {\n  constructor() {\n    this.config = {\n      baseURL: this.baseUrl,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n\n    this.axiosInstance = axios.create(this.config);\n  }\n\n  /**\n   * The base url for all API requests\n   * @type {String}\n   */\n  baseUrl = _getApiDomain();\n\n  /**\n   * The axios configuration.\n   * @type {Object}\n   */\n  config = {};\n\n  /**\n   * The axios instance.\n   * @type {Axios}\n   */\n  axiosInstance = null;\n\n  /**\n   * A cache of request details. Each cacheable API should have a section in _cache that contains\n   * an array of cache entries. Each cache entry should have a cacheTime and a value.\n   */\n  _cache = {};\n\n  /**\n   * Make a request cacheable by calling _cacheable before making the request.\n   * _cacheable caches requests, not responses. It is expected that the cached data already exists\n   * in the Redux store. _cacheable just prevents making excessive API calls for data that we\n   * already have.\n   *\n   * @param  {String} name The name of the request being made\n   * @param  {String} [identifier=\"cache\"] Some identifier to compare to future requests.\n   * @param  {*}  [defaultData=[]] The data to return with if the request is cached.\n   * @return {Promise} Resolves with the defaultData if cached, or { continue: true } if not cached.\n   */\n  _cacheable(name, identifier = \"cache\", defaultData = []) {\n    // Retrieve the relevant cache entry\n    if (!this._cache[name]) {\n      this._cache[name] = [];\n    }\n    const relevantCacheGroup = this._cache[name];\n    let relevantIndex;\n    const relevantCache = relevantCacheGroup.find((cache, index) => {\n      if (cache.value === identifier) {\n        relevantIndex = index;\n        return true;\n      }\n      return false;\n    });\n\n    // Evaluat the cache\n    if (relevantCache) {\n      const cacheDuration = 10 * 60 * 1000; // 10 minutes\n      const currentTime = new Date().getTime();\n\n      if (relevantCache.cacheTime + cacheDuration >= currentTime) {\n        // Cache is not expired, so resolve.\n        return Promise.resolve({\n          data: defaultData\n        });\n      } else {\n        // Remove expired cache\n        relevantCacheGroup.splice(relevantIndex, 1);\n      }\n    }\n\n    // Allow the requst to be made, but store a record in cache.\n    relevantCacheGroup.push({\n      cacheTime: new Date().getTime(),\n      value: identifier\n    });\n\n    return Promise.resolve({ continue: true });\n  }\n\n  /**\n   * Activates a new account. When registering a new account, an email\n   * is sent to the user with a link to confirm their email address,\n   * activating their account.\n   * @param  {String} userId The ID of the user\n   * @param  {String} activationCode The activation code included in\n   * the email confirmation email\n   * @return {Promise}\n   */\n  activateAccount(userId, activationCode) {\n    return activateAccount.call(this, userId, activationCode);\n  }\n\n  /**\n   * Check if the user is already logged in based on session data.\n   * @return {Promise}\n   */\n  checkLoginStatus() {\n    return checkLoginStatus.call(this);\n  }\n\n  /**\n   * Log in to a KitePaint account.\n   * @param  {String}  username\n   * @param  {String}  password\n   * @return {Promise}\n   */\n  logIn(username, password) {\n    return logIn.call(this, username, password);\n  }\n\n  /**\n   * Logs out the user and destroys their session.\n   * @return {Promise}\n   */\n  logOut() {\n    return logOut.call(this);\n  }\n\n  /**\n   * Sends a request to register a new KitePaint account.\n   * @param  {Object}  data Must contain `{username, email, password, password2}`\n   * @return {Promise}\n   */\n  createAccount(data) {\n    return createAccount.call(this, data);\n  }\n\n  /**\n   * Sends a request to reset a user's password.\n   * @param  {String} username The username of the user to reset the password for.\n   * @param  {String} email The email address that is on the user's account.\n   * @return {Promise}\n   */\n  resetPassword(username, email) {\n    return resetPassword.call(this, username, email);\n  }\n\n  /**\n   * Changes the email address for the user's account\n   * @param  {String}  userId The user's id\n   * @param  {String}  newEmail The user's new email address\n   * @return {Promise}\n   */\n  changeEmail(userId, newEmail) {\n    return changeEmail.call(this, userId, newEmail);\n  }\n\n  /**\n   * Changes the user's password\n   * @param  {Onbject}  data Must contain string values: username, currentPassword,\n   * newPassword, and confirmNewPassword\n   * @return {Promise}\n   */\n  changePassword(data) {\n    return changePassword.call(this, data);\n  }\n\n  /**\n   * Triggers deletion of the specified account\n   * @param  {String}  id       The account's ID\n   * @param  {String}  password The account's password\n   * @return {Promise}\n   */\n  deleteAccount(id, password) {\n    return deleteAccount.call(this, id, password);\n  }\n\n  /**\n   * A cache for getUser requests to prevent making the same request repeatedlu.\n   * @private\n   */\n  _getUserCache = [];\n\n  /**\n   * Retrieves a user by ID\n   * @param  {String}  id\n   * @return {Promise} Resolves with the retrieved user\n   */\n  getUser(id, useCache = true) {\n    return getUser.call(this, id, useCache);\n  }\n\n  /**\n   * A cache for getDesigns requests to prevent making the same request repeatedly.\n   * @type {Array}\n   * @private\n   */\n  _getDesignsCache = [];\n\n  /**\n   * Get saved designs.\n   * @param  {Object}  [filter={}] A list of filters. See filterDefaults as an example.\n   * @param {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n   * requests will not be made within 10 minutes.\n   * @return {Promise}\n   */\n  getDesigns(filter = {}, useCache = true) {\n    return getDesigns.call(this, filter, useCache);\n  }\n\n  /**\n   * Retrieves the design with the specified id\n   * @param  {String}  id\n   * @param {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n   * requests will not be made within 10 minutes.\n   * @return {Promise} resolves with the retrieved design\n   */\n  getDesign(id, useCache = true) {\n    return getDesign.call(this, id, useCache);\n  }\n\n  /**\n   * A cache for getProducts to prevent making the same request repeatedly.\n   * @type {Array}\n   * @private\n   */\n  _getProductsCache = [];\n\n  /**\n   * Get all products.\n   * @param  {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n   * requests will not be made within 10 minutes.\n   * @return {Promise}\n   */\n  getProducts(useCache = true) {\n    return getProducts.call(this, useCache);\n  }\n\n  /**\n   * A cache for getManufacturers to prevent making the same request repeatedly.\n   * @type {Array}\n   * @private\n   */\n  _getManufacturersCache = [];\n\n  /**\n   * Get all manufacturers.\n   * @param  {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n   * requests will not be made within 10 minutes.\n   * @return {Promise}\n   */\n  getManufacturers(useCache = true) {\n    return getManufacturers.call(this, useCache);\n  }\n\n  /**\n   * Creates a new design based on the provided data.\n   * @param  {Object}  designData Should contain name, user, product, and variations\n   * @return {Promise} Resolves with an object that contains an id property of the new design.\n   */\n  createDesign(designData) {\n    return createDesign.call(this, designData);\n  }\n\n  /**\n   * Update an existing design\n   * @param  {Object}  designData\n   * @return {Promise}\n   */\n  updateDesign(designData) {\n    return updateDesign.call(this, designData);\n  }\n\n  /**\n   * Deletes the design with the specified ID.\n   * @param  {String}  designId\n   * @return {Promise}\n   */\n  deleteDesign(designId) {\n    return deleteDesign.call(this, designId);\n  }\n}\n\nexport default new KitePaintApi();\n","import { createAction } from \"redux-actions\";\n\n/**\n * Create a dispatchable action that runs an async process.\n * Reducers can be tied to the REQUESTED, RECEIVED, or FAILED actions on the returned asyncAction.\n * @param  {String} actionType The name of the action\n * @param  {Function} request The async process to run\n * @return {Function} A dispatchable action\n */\nexport default function createAsyncAction(actionType, request) {\n  const ACTION_REQUESTED = createAction(`${actionType}.REQUESTED`);\n  const ACTION_RECEIVED = createAction(`${actionType}.RECEIVED`);\n  const ACTION_FAILED = createAction(`${actionType}.FAILED`);\n\n  function asyncAction(...args) {\n    return dispatch => {\n      dispatch(asyncAction.REQUESTED());\n\n      const promise = request(...args);\n      promise.then(payload => {\n        dispatch(asyncAction.RECEIVED(payload));\n      });\n      promise.catch(payload => {\n        dispatch(asyncAction.FAILED(payload));\n      });\n      return promise;\n    };\n  }\n\n  asyncAction.REQUESTED = ACTION_REQUESTED;\n  asyncAction.RECEIVED = ACTION_RECEIVED;\n  asyncAction.FAILED = ACTION_FAILED;\n\n  return asyncAction;\n}\n","import { createAction } from \"redux-actions\";\nimport KitePaintApi from \"../api/KitePaintApi\";\nimport createAsyncAction from \"./createAsyncAction\";\n\n/**\n * Check if the user is already logged in.\n */\nexport const CHECK_LOGIN = createAsyncAction(\"CHECK_LOGIN\", () => {\n  return KitePaintApi.checkLoginStatus();\n});\n\n/**\n * Log in to a KitePaint account.\n * @param {String} username\n * @param {String} password\n */\nexport const LOG_IN = createAsyncAction(\"LOG_IN\", (username, password) => {\n  return KitePaintApi.logIn(username, password);\n});\n\n/**\n * Log out the current user.\n */\nexport const LOG_OUT = createAsyncAction(\"LOG_OUT\", () => {\n  return KitePaintApi.logOut();\n});\n\n/**\n * Register for a new KitePaint account.\n * @param {Object} data Must contain {username, email, password, password2}\n */\nexport const CREATE_ACCOUNT = createAsyncAction(\"CREATE_ACCOUNT\", data => {\n  return KitePaintApi.createAccount(data);\n});\n\n/**\n * Reset a user's password.\n * @param {String} username\n * @param {String} email\n */\nexport const RESET_PASSWORD = createAsyncAction(\n  \"RESET_PASSWORD\",\n  (username, email) => {\n    return KitePaintApi.resetPassword(username, email);\n  }\n);\n\n/**\n * Changes the email address for the user's account\n * @param  {String}  userId The user's id\n * @param  {String}  email The user's new email address\n * @return {Promise}\n */\nexport const CHANGE_EMAIL = createAsyncAction(\n  \"CHANGE_EMAIL\",\n  (userId, email) => {\n    return KitePaintApi.changeEmail(userId, email);\n  }\n);\n\n/**\n * Changes the user's password\n * @param  {Onbject}  data Must contain string values: username, currentPassword,\n * newPassword, and confirmNewPassword\n * @return {Promise}\n */\nexport const CHANGE_PASSWORD = createAsyncAction(\"CHANGE_PASSWORD\", data => {\n  return KitePaintApi.changePassword(data);\n});\n\n/**\n * Triggers deletion of the specified account\n * @param  {String}  id       The account's ID\n * @param  {String}  password The account's password\n * @return {Promise}\n */\nexport const DELETE_ACCOUNT = createAsyncAction(\n  \"DELETE_ACCOUNT\",\n  (id, password) => {\n    return KitePaintApi.deleteAccount(id, password);\n  }\n);\n\n/**\n * Set the isRecognizedUser local storage variable.\n * This indicates if the user is recognized as someone who has a registered account.\n * @param {Boolean} newValue\n */\nexport const SET_RECOGNIZED_USER = createAction(\n  \"SET_RECOGNIZED_USER\",\n  newValue => {\n    localStorage.setItem(\"isRecognizedUser\", newValue);\n    return newValue;\n  }\n);\n\n/**\n * Retrieves designs from the KitePaintApi\n * @param {Object} [filters={}]\n * @param {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n * requests will not be made within 10 minutes.\n */\nexport const GET_DESIGNS = createAsyncAction(\n  \"GET_DESIGNS\",\n  (filters, useCache) => {\n    return KitePaintApi.getDesigns(filters, useCache);\n  }\n);\n\n/**\n * Retrieves a design with the given ID.\n * @param {String} id\n */\nexport const GET_DESIGN = createAsyncAction(\"GET_DESIGN\", id => {\n  return KitePaintApi.getDesign(id);\n});\n\n/**\n * Retrieves designs from the KitePaintApi\n * @param {Object} [filters={}]\n * @param {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n * requests will not be made within 10 minutes.\n */\nexport const GET_PRODUCTS = createAsyncAction(\"GET_PRODUCTS\", useCache => {\n  return KitePaintApi.getProducts(useCache);\n});\n\n/**\n * Retrieves designs from the KitePaintApi\n * @param {Object} [filters={}]\n * @param {Boolean} [useCache=true] If true, the request will be cached, and subsequent duplicate\n * requests will not be made within 10 minutes.\n */\nexport const GET_MANUFACTURERS = createAsyncAction(\n  \"GET_MANUFACTURERS\",\n  useCache => {\n    return KitePaintApi.getManufacturers(useCache);\n  }\n);\n\n/**\n * Retrieves a user by ID\n * @param {String} userId\n */\nexport const GET_USER = createAsyncAction(\"GET_USER\", userId => {\n  return KitePaintApi.getUser(userId);\n});\n\n/**\n * Triggers the creation of a new design based on the provided data.\n * @param {Object} designData\n */\nexport const CREATE_DESIGN = createAsyncAction(\"CREATE_DESIGN\", designData => {\n  return KitePaintApi.createDesign(designData);\n});\n\n/**\n * Triggers the update of an existing design using the provided data.\n * @param {Object} designData\n */\nexport const UPDATE_DESIGN = createAsyncAction(\"UPDATE_DESIGN\", designData => {\n  return KitePaintApi.updateDesign(designData);\n});\n\n/**\n * Triggers the deletion of a design. Resolves with the ID of the deleted design.\n * @param {String} designId\n */\nexport const DELETE_DESIGN = createAsyncAction(\"DELETE_DESIGN\", designId => {\n  return KitePaintApi.deleteDesign(designId).then(() => ({\n    data: {\n      id: designId\n    }\n  }));\n});\n","import { handleActions } from \"redux-actions\";\nimport { fromJS } from \"immutable\";\nimport {\n  SET_RECOGNIZED_USER,\n  LOG_IN,\n  CHECK_LOGIN,\n  LOG_OUT,\n  CHANGE_EMAIL,\n  DELETE_ACCOUNT\n} from \"../actions\";\n\nexport const defaultState = fromJS({\n  actcode: null,\n  firstName: null,\n  id: null,\n  isCheckingLogin: true,\n  isLoggedIn: false,\n  isLoggingIn: false,\n  isRecognizedUser: localStorage.getItem(\"isRecognizedUser\") === \"true\",\n  lastName: null,\n  username: null\n});\n\n/**\n * The reducer managing data about the user.\n */\nexport default handleActions(\n  {\n    [SET_RECOGNIZED_USER]: (state, action) => {\n      const isRecognizedUser = action.payload;\n      return state.set(\"isRecognizedUser\", isRecognizedUser);\n    },\n    [CHECK_LOGIN.REQUESTED]: state => {\n      return state.set(\"isCheckingLogin\", true);\n    },\n    [CHECK_LOGIN.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      return state.merge({\n        actcode: data.actcode,\n        email: data.email,\n        firstName: data.first_name,\n        id: data.user_id,\n        isLoggedIn: data.logged_in,\n        isCheckingLogin: false,\n        lastName: data.last_name,\n        username: data.username\n      });\n    },\n    [CHECK_LOGIN.FAILED]: state => {\n      return state.set(\"isCheckingLogin\", false);\n    },\n    [LOG_IN.REQUESTED]: state => {\n      return state.set(\"isLoggingIn\", true);\n    },\n    [LOG_IN.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      return state.merge({\n        actcode: data.actcode,\n        email: data.email,\n        firstName: data.first_name,\n        id: data.user_id,\n        isLoggedIn: data.logged_in,\n        isLoggingIn: false,\n        lastName: data.last_name,\n        username: data.username\n      });\n    },\n    [LOG_IN.FAILED]: state => {\n      return state.set(\"isLoggingIn\", false);\n    },\n    [LOG_OUT.RECEIVED]: state => {\n      return state.merge({\n        actcode: null,\n        email: null,\n        firstName: null,\n        id: null,\n        isLoggedIn: false,\n        lastName: null,\n        username: null\n      });\n    },\n    [CHANGE_EMAIL.RECEIVED]: (state, action) => {\n      return state.set(\"email\", action.payload.data.email);\n    },\n    [DELETE_ACCOUNT.RECEIVED]: state => {\n      return state.merge({\n        actcode: null,\n        email: null,\n        firstName: null,\n        id: null,\n        isLoggedIn: false,\n        lastName: null,\n        username: null\n      });\n    }\n  },\n  defaultState\n);\n\n/**\n * Get all the user data.\n * @param  {Map} state\n * @return {Object} The user data\n */\nexport const getUser = state => {\n  const user = state.get(\"user\");\n  return {\n    email: user.get(\"email\"),\n    id: user.get(\"id\"),\n    isLoggedIn: user.get(\"isLoggedIn\"),\n    isLoggingIn: user.get(\"isLoggingIn\"),\n    username: user.get(\"username\")\n  };\n};\n\n/**\n * Retrieves the isRecognizedUser variable. This indicates if the user is recognized as someone\n * who has a registered account.\n * @param  {Map} state\n * @return {Boolean}\n */\nexport const getUserRecognition = state =>\n  state.getIn([\"user\", \"isRecognizedUser\"]);\n\n/**\n * Indicates if we are currently checking the user's login.\n * @param  {Map} state\n * @return {Boolean}\n */\nexport const getCheckingLogin = state =>\n  state.getIn([\"user\", \"isCheckingLogin\"]);\n","import { getQueryParams } from \"../utils\";\n\n// Determines if the application is currently embedded\nfunction inIframe() {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n}\n\nconst queryParams = getQueryParams();\n\nexport const isEmbedded = inIframe();\nexport const externalCss = isEmbedded ? queryParams[\"css-url\"] : null;\nexport const defaultBackground = isEmbedded ? queryParams.background : null;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getUser, getUserRecognition } from \"../redux/modules/user\";\nimport { SET_RECOGNIZED_USER, LOG_OUT } from \"../redux/actions\";\n\n/**\n * Provides information and actions about/for the current user.\n */\nexport class UserContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A function that renders content\n     */\n    children: PropTypes.func.isRequired,\n    /**\n     * Is the current user recognized as one with an account? Provided by redux.\n     */\n    isRecognizedUser: PropTypes.bool,\n    /**\n     * Details about the current user. Provided by redux.\n     */\n    user: PropTypes.shape({\n      email: PropTypes.string,\n      id: PropTypes.string,\n      isLoggedIn: PropTypes.bool,\n      isLoggingIn: PropTypes.bool,\n      username: PropTypes.string\n    }),\n    /**\n     * A function called to log out the current user. Provided by Redux.\n     */\n    onLogOut: PropTypes.func.isRequired,\n    /**\n     * A function called to indicate if the user is recognized or not. Provided by Redux.\n     */\n    onSetRecognition: PropTypes.func.isRequired,\n    /** Called when this component triggers a redirect. Mostly used for testing */\n    onRedirect: PropTypes.func\n  };\n\n  static defaultProps = {\n    onRedirect: () => {}\n  };\n\n  state = {\n    // When true, a <Redirect> element should be rendered to redirect to the home page.\n    redirect: false\n  };\n\n  /**\n   * Toggles the variable in state and in local storage\n   */\n  toggleRecognition = () => {\n    const { isRecognizedUser } = this.props;\n    this.props.onSetRecognition(!isRecognizedUser);\n  };\n\n  /** Sets isRecognizedUser to the given value */\n  setRecognition = value => this.props.onSetRecognition(value);\n\n  // Handle when the user requests to log out\n  handleLogOut = () => {\n    return this.props.onLogOut().then(() => {\n      // Turn on the redirect\n      this.setState(\n        {\n          redirect: true\n        },\n\n        // Turn the redirect back off\n        () =>\n          this.setState({\n            redirect: false\n          })\n      );\n    });\n  };\n\n  buildRedirect = () => {\n    this.props.onRedirect();\n    return <Redirect to=\"/\" />;\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return this.buildRedirect();\n    }\n    const { email, id, isLoggedIn, isLoggingIn, username } = this.props.user;\n    return this.props.children({\n      actions: {\n        logOut: this.handleLogOut,\n        toggleRecognition: this.toggleRecognition,\n        setRecognition: this.setRecognition\n      },\n      props: {\n        email,\n        id,\n        isLoggedIn,\n        isLoggingIn,\n        isRecognizedUser: this.props.isRecognizedUser,\n        username\n      }\n    });\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: getUser(state),\n  isRecognizedUser: getUserRecognition(state)\n});\n\nconst mapDispatchToProps = {\n  onLogOut: LOG_OUT,\n  onSetRecognition: SET_RECOGNIZED_USER\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserContainer);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { isEmbedded } from \"../../constants/embed\";\nimport { A, P } from \"../../theme\";\n\nexport const StyleWrapper = styled.footer`\n  text-align: center;\n  border-top: 1px solid ${props => props.theme.colors.grayDark}\n  padding: 8px;\n  background: ${props => props.theme.colors.grayDarker}\n  position: relative;\n`;\n\n/**\n * The footer displayed at the bottom of every page.\n */\nconst Footer = props => (\n  <StyleWrapper {...props}>\n    <P isLight>\n      {isEmbedded ? (\n        <React.Fragment>\n          Powered by{\" \"}\n          <A href=\"https://kitepaint.com\" target=\"_blank\">\n            KitePaint\n          </A>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          &copy; {new Date().getFullYear()}{\" \"}\n          <A href=\"http://wattydev.com\" target=\"_blank\">\n            Spencer Watson\n          </A>\n        </React.Fragment>\n      )}\n    </P>\n  </StyleWrapper>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport UserContainer from \"../../containers/UserContainer\";\nimport { A, H2, Icon, Dropdown } from \"../../theme\";\nimport { TypographyStyles } from \"../../theme/Text\";\n\nexport const StyleWrapper = styled.header`\n  background: ${({ theme }) => theme.colors.silver};\n  height: 48px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  box-shadow: 0 0 1px ${({ theme }) => theme.colors.black};\n  position: relative;\n  box-sizing: border-box;\n  z-index: 3;\n\n  .left,\n  .right {\n    display: flex;\n    algin-items: center;\n    flex-grow: 1;\n  }\n  .right {\n    align-items: stretch;\n    justify-content: flex-end;\n    height: 100%;\n  }\n`;\n\nconst NavLink = styled.div`\n  ${TypographyStyles};\n  display: block;\n  color: ${props => props.theme.colors.black};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 40px;\n  text-align: center;\n  padding: 8px;\n  text-decoration: none;\n  background-image: linear-gradient(\n    180deg,\n    ${props => props.theme.colors.silver},\n    ${props => props.theme.colors.silver},\n    ${props => props.theme.colors.gray},\n    ${props => props.theme.colors.gray}\n  );\n  background-size: 400% 400%;\n  background-position: 50% 0%;\n  transition: 0.5s background-position;\n  cursor: pointer;\n  height: 100%;\n  box-sizing: border-box;\n\n  &:hover {\n    background-position: 50% 35%;\n  }\n  .dropdown-arrow {\n    margin-left: 4px;\n  }\n`;\n\n/**\n * The header at the top of the application.\n */\nconst Header = () => (\n  <StyleWrapper>\n    <div className=\"left\">\n      <H2>\n        <A as={Link} to=\"/\">\n          KitePaint\n        </A>\n      </H2>\n    </div>\n    <div className=\"right\">\n      <NavLink as={Link} to=\"/\">\n        <Icon icon=\"home\" />\n      </NavLink>\n      <NavLink as={Link} to=\"/about\">\n        About\n      </NavLink>\n      <NavLink as={Link} to=\"/create\">\n        Create\n      </NavLink>\n      <UserContainer>\n        {userData =>\n          userData.props.isLoggedIn ? (\n            <Dropdown\n              className=\"testing_account-dropdown\"\n              dropdownContent={accountDropdown => (\n                <React.Fragment>\n                  <accountDropdown.components.Item\n                    as={Link}\n                    to=\"/my-designs\"\n                    onClick={accountDropdown.actions.close}\n                  >\n                    My Designs\n                  </accountDropdown.components.Item>\n                  <accountDropdown.components.Item\n                    as={Link}\n                    to=\"/account\"\n                    onClick={accountDropdown.actions.close}\n                  >\n                    Manage Account\n                  </accountDropdown.components.Item>\n                  <accountDropdown.components.Spacer />\n                  <accountDropdown.components.Item\n                    onClick={userData.actions.logOut}\n                  >\n                    Sign Out\n                  </accountDropdown.components.Item>\n                </React.Fragment>\n              )}\n            >\n              {accountDropdown => (\n                <NavLink\n                  onClick={\n                    accountDropdown.props.isOpen\n                      ? accountDropdown.actions.close\n                      : accountDropdown.actions.open\n                  }\n                >\n                  {userData.props.username}\n                  <Icon className=\"dropdown-arrow\" icon=\"angle-down\" />\n                </NavLink>\n              )}\n            </Dropdown>\n          ) : (\n            <NavLink\n              onClick={() => userData.actions.setRecognition(true)}\n              as={Link}\n              to={{\n                pathname: \"/login\",\n                search: `?url=${encodeURIComponent(window.location.href)}`\n              }}\n            >\n              Log In\n            </NavLink>\n          )\n        }\n      </UserContainer>\n    </div>\n  </StyleWrapper>\n);\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { isEmbedded, externalCss } from \"../constants/embed\";\n\nconst EmbeddedCss = ({ _isEmbedded, _externalCss }) => {\n  if (!_isEmbedded || !_externalCss) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <link rel=\"stylesheet\" type=\"text/css\" href={externalCss} />,\n    document.querySelector(\"head\")\n  );\n};\n\nEmbeddedCss.defaultProps = {\n  _isEmbedded: isEmbedded,\n  _externalCss: externalCss\n};\n\nEmbeddedCss.propTypes = {\n  _isEmbedded: PropTypes.bool,\n  _externalCss: PropTypes.string\n};\n\nexport default EmbeddedCss;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { getAssetUrl } from \"../utils\";\nimport { H1, P } from \"../theme\";\n\nexport const StyleWrapper = styled.div`\n  text-align: center;\n  min-height: calc(100vh - 50px);\n  background: url(${getAssetUrl(\"/errorBackground.jpg\")});\n  background-size: cover;\n  background-repeat: none;\n  position: relative;\n  padding-top: 10%;\n  box-sizing: border-box;\n  &:before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${props => props.theme.colors.white};\n    opacity: 0.6;\n  }\n\n  h1 {\n    display: block;\n    margin: 0 auto;\n    width: 100px;\n    height: 100px;\n    background: ${props => props.theme.colors.black};\n    color: ${props => props.theme.colors.silver};\n    border-radius: 50%;\n    line-height: 100px;\n    position: relative;\n    margin-bottom: 16px;\n  }\n\n  p {\n    position: relative;\n  }\n`;\n\nconst ErrorPage = ({ errorCode, errorMessage }) => (\n  <StyleWrapper>\n    <H1>{errorCode}</H1>\n    <P>{errorMessage}</P>\n  </StyleWrapper>\n);\n\nErrorPage.defaultProps = {\n  errorCode: 404,\n  errorMessage: \"Page not found\"\n};\n\nErrorPage.propTypes = {\n  errorCode: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { isEmbedded } from \"../constants/embed\";\nimport ErrorPage from \"./ErrorPage\";\n\n/**\n * A route that cannot be accessed when embedding.\n */\nconst RestrictedRoute = ({ _isEmbedded, ...props }) => {\n  if (_isEmbedded) {\n    return (\n      <ErrorPage\n        errorCode={401}\n        errorMessage=\"Embedding of this page is not permitted.\"\n      />\n    );\n  }\n  return <Route {...props} />;\n};\n\nRestrictedRoute.defaultProps = {\n  _isEmbedded: isEmbedded\n};\n\nRestrictedRoute.propTypes = {\n  _isEmbedded: PropTypes.bool\n};\n\nexport default RestrictedRoute;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\n/**\n * Generates an object from a query parameter string\n * @param  {String} queryParams Something like foo=bar&bar=foo\n * @return {Object}\n */\nconst generateObjectFromQueryParams = queryParams => {\n  return queryParams.split(\"&\").reduce((accumulated, param) => {\n    const [key, value] = param.split(\"=\");\n    accumulated[key] = value;\n    return accumulated;\n  }, {});\n};\n\n/**\n * Provides redirection from old Angular URLs to new urls.\n */\nexport class LegacyRedirect extends React.Component {\n  static propTypes = {\n    /** The history object provided by react-router-dom */\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      location: PropTypes.shape({\n        hash: PropTypes.string\n      })\n    }).isRequired\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    // Check for a path intended for the old Angular application\n    const legacyPath = props.history.location.hash.replace(\"#!/\", \"\");\n\n    // If no legacy path exists, we're done here.\n    if (!legacyPath) {\n      return;\n    }\n\n    // Define how the legacy paths map to the new paths\n    const redirectRules = [\n      {\n        from: \"about\",\n        to: \"/about\"\n      },\n      {\n        from: \"account\",\n        to: \"/my-designs\"\n      },\n      {\n        from: \"create\",\n        to: \"/create\"\n      },\n      {\n        from: \"activate?uid=:userId&actcode=:activationCode\",\n        to: \"/activate/:userId/:activationCode\"\n      },\n      {\n        from: \"edit/new?id=:productId\",\n        to: \"/create/:productId\"\n      },\n      {\n        from: \"designs\",\n        to: \"/designs\"\n      },\n      {\n        from: \"edit/saved?id=:designId\",\n        to: \"/edit/:designId\"\n      },\n      {\n        from: \"view?id=:designId\",\n        to: \"/view/:designId\"\n      }\n    ];\n\n    // redirectData will house the variables used in the path\n    let redirectData = {};\n\n    // Find the correct redirect rule\n    const relevantRedirectRule = redirectRules.find(rule => {\n      // If we have an exact match, use this rule\n      if (legacyPath === rule.from) {\n        return true;\n      }\n\n      // Separate the search (query parameters) from the rest of the path\n      const [path, search] = legacyPath.split(\"?\");\n      const [rulePath, ruleSearch] = rule.from.split(\"?\");\n\n      // If the base paths don't match, move on\n      if (path !== rulePath) {\n        return false;\n      }\n\n      // Generate Objects from the query parameters\n      const searchObject = generateObjectFromQueryParams(search);\n      const ruleSearchObject = generateObjectFromQueryParams(ruleSearch);\n\n      // If the query parameter keys don't match our rule, move on\n      if (\n        Object.keys(searchObject).join() !==\n        Object.keys(ruleSearchObject).join()\n      ) {\n        return false;\n      }\n\n      // Map the legacy path's query parameter values to the variables used in the path definition\n      // ?id=123 + ?id=:testId = { testId: 123 }\n      redirectData = Object.keys(ruleSearchObject).reduce(\n        (accumulated, key) => {\n          const variableName = ruleSearchObject[key].replace(\":\", \"\");\n          accumulated[variableName] = searchObject[key];\n          return accumulated;\n        },\n        {}\n      );\n      return true;\n    });\n\n    // If we have no relevant rule, redirect to an error page\n    if (!relevantRedirectRule) {\n      props.history.push(\"/error\");\n      return;\n    }\n\n    // Build the string for rediretion using the relevant rule and the redirectData\n    const redirectTo = Object.keys(redirectData).reduce((accumulated, key) => {\n      return accumulated.replace(`:${key}`, redirectData[key]);\n    }, relevantRedirectRule.to);\n\n    // Redirect\n    props.history.push(redirectTo);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(LegacyRedirect);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { H1, Spacer, P } from \"../../theme\";\n\nconst StyleWrapper = styled.div`\n  max-width: 1280px;\n  padding: 16px;\n  margin: 0 auto;\n`;\n\nconst About = () => (\n  <StyleWrapper>\n    <H1>About</H1>\n    <Spacer bottom=\"md\" />\n    <P>\n      I started creating KitePaint.com in 2014 as a pet project to experiment\n      with full stack development. At the time, I built it using AngularJS, but\n      I started rebuilding the front end in React in 2018. This site is an\n      experiment and a learning experience. While I am experimenting with these\n      technologies, I figured that I might as well make something useful.\n    </P>\n    <Spacer bottom=\"sm\" />\n    <P>\n      I created a colorizer application for{\" \"}\n      <a href=\"http://revkites.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n        Revolution Kites\n      </a>{\" \"}\n      some time ago that serves as the initial inspiration for this site. I\n      wanted to expand on what I had made for Revolution, but make it bigger,\n      more fun, and more accessable for more people. I wanted all kite\n      manufactuers to have the ability to get their own colorizers for a\n      reasonable price. I wanted to make the custom kite ordering process easier\n      for consumers. So, this site is the result. It is built around the concept\n      of saving and sharing custom kite designs.\n    </P>\n    <Spacer bottom=\"sm\" />\n    <P>\n      For more information, view the project on{\" \"}\n      <a\n        href=\"https://github.com/WattyRev/static.kitepaint\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        GitHub\n      </a>\n      .\n    </P>\n    <Spacer bottom=\"sm\" />\n    <P>\n      Thanks for checking out KitePaint.com!\n      <br />- Spencer &quot;Watty&quot; Watson\n    </P>\n  </StyleWrapper>\n);\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeCancelable } from \"../utils\";\nimport { getUser } from \"../redux/modules/user\";\nimport {\n  CHANGE_EMAIL,\n  CHANGE_PASSWORD,\n  DELETE_ACCOUNT\n} from \"../redux/actions\";\n\n/**\n * A container that gets and manages data for the Account page.Z\n */\nexport class AccountContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A function that renders content\n     */\n    children: PropTypes.func.isRequired,\n    /**\n     * Details about the current user. Provided by redux.\n     */\n    user: PropTypes.shape({\n      email: PropTypes.string,\n      id: PropTypes.string,\n      isLoggedIn: PropTypes.bool,\n      isLoggingIn: PropTypes.bool,\n      username: PropTypes.string\n    }).isRequired,\n    /**\n     * Called when a change of password is requested. Provided by redux.\n     */\n    onEmailChange: PropTypes.func.isRequired,\n    /**\n     * Called when a change of email is requested. Provided by redux.\n     */\n    onPasswordChange: PropTypes.func.isRequired,\n    /**\n     * Called when account deletion is requested. Provided by redux.\n     */\n    onDeleteAccount: PropTypes.func.isRequired\n  };\n\n  state = {\n    /**\n     * The value for the confirm new password field.\n     * @type {String}\n     */\n    confirmNewPassword: \"\",\n    /**\n     * The value for the current password field.\n     * @type {String}\n     */\n    currentPassword: \"\",\n    /**\n     * An error message explaining an error that occurred while deleting the acount.\n     * @type {String}\n     */\n    deleteError: null,\n    /**\n     * Is the user currently editing the email?\n     * @type {Boolean}\n     */\n    editingEmail: false,\n    /**\n     * Is the user currently editing the password?\n     * @type {Boolean}\n     */\n    editingPassword: false,\n    /**\n     * The value for the email field.\n     * @type {String}\n     */\n    email: \"\",\n    /**\n     * An error message explaining an error that occurred while updating the email address.\n     * @type {String}\n     */\n    emailError: null,\n    /**\n     * The value of the new password field.\n     * @type {String}\n     */\n    newPassword: \"\",\n    /**\n     * An error message explaining an error that occurred while updating the password.\n     * @type {String}\n     */\n    passwordError: null\n  };\n\n  /**\n   * Toggles the value of editingEmail while resetting some other values.\n   */\n  handleToggleEditEmail = () => {\n    this.setState({\n      emailError: null,\n      editingEmail: !this.state.editingEmail,\n      email: this.props.user.email\n    });\n  };\n\n  /**\n   * Toggles the value of editingPassword while resetting some other values.\n   */\n  handleToggleEditPassword = () => {\n    this.setState({\n      editingPassword: !this.state.editingPassword,\n      confirmNewPassword: \"\",\n      currentPassword: \"\",\n      newPassword: \"\",\n      passwordError: null\n    });\n  };\n\n  /**\n   * Handles a change to the email input\n   * @param  {String} email The newly typed email\n   */\n  handleEmailChange = email => {\n    this.setState({\n      emailError: null,\n      email\n    });\n  };\n\n  /**\n   * Handles a change to the current password input\n   * @param  {String} currentPassword\n   */\n  handleCurrentPasswordChange = currentPassword => {\n    this.setState({\n      currentPassword,\n      passwordError: null\n    });\n  };\n\n  /**\n   * Handles a change to the new password input\n   * @param  {String} newPassword\n   */\n  handleNewPasswordChange = newPassword => {\n    this.setState({\n      newPassword,\n      passwordError: null\n    });\n  };\n\n  /**\n   * Handles a change to the confirm new password input\n   * @param  {String} confirmNewPassword\n   */\n  handleConfirmNewPasswordChange = confirmNewPassword => {\n    this.setState({\n      confirmNewPassword,\n      passwordError: null\n    });\n  };\n\n  /**\n   * Submits the user provided email to change the email on the current account\n   */\n  handleSubmitEmail = () => {\n    let request;\n    // If the email was not changed, don't do anything, but behave as if it was\n    // successful.\n    if (this.state.email === this.props.user.email) {\n      request = makeCancelable(Promise.resolve());\n    } else {\n      request = makeCancelable(\n        this.props.onEmailChange(this.props.user.id, this.state.email)\n      );\n    }\n    this._requests.push(request);\n    return request.promise\n      .then(() => {\n        this.setState({\n          editingEmail: false\n        });\n      })\n      .catch(message => {\n        this.setState({\n          emailError: message\n        });\n      });\n  };\n\n  /**\n   * Submits the new password information to update the password for the current account.\n   */\n  handleSubmitPassword = () => {\n    const request = makeCancelable(\n      this.props.onPasswordChange({\n        username: this.props.user.username,\n        currentPassword: this.state.currentPassword,\n        newPassword: this.state.newPassword,\n        confirmNewPassword: this.state.confirmNewPassword\n      })\n    );\n    this._requests.push(request);\n    return request.promise\n      .then(() => {\n        this.setState({\n          editingPassword: false\n        });\n      })\n      .catch(message => {\n        this.setState({\n          passwordError: message\n        });\n      });\n  };\n\n  /**\n   * Triggers deletion of the current account using the provided password.\n   * @param  {String} password\n   */\n  handleDeleteAccount = password => {\n    const request = makeCancelable(\n      this.props.onDeleteAccount(this.props.user.id, password)\n    );\n    this._requests.push(request);\n    return request.promise.catch(message => {\n      this.setState({\n        deleteError: message\n      });\n    });\n  };\n\n  /**\n   * An array of cancelable promises to be canceled when the component unmounts\n   * @type {Array}\n   */\n  _requests = [];\n\n  componentWillUnmount() {\n    this._requests.forEach(request => request.cancel());\n  }\n\n  render() {\n    return this.props.children({\n      actions: {\n        changeEmail: this.handleEmailChange,\n        changeCurrentPassword: this.handleCurrentPasswordChange,\n        changeNewPassword: this.handleNewPasswordChange,\n        changeConfirmNewPassword: this.handleConfirmNewPasswordChange,\n        toggleEditEmail: this.handleToggleEditEmail,\n        toggleEditPassword: this.handleToggleEditPassword,\n        submitEmail: this.handleSubmitEmail,\n        submitPassword: this.handleSubmitPassword,\n        deleteAccount: this.handleDeleteAccount\n      },\n      props: {\n        confirmNewPassword: this.state.confirmNewPassword,\n        currentPassword: this.state.currentPassword,\n        deleteError: this.state.deleteError,\n        editingEmail: this.state.editingEmail,\n        editingPassword: this.state.editingPassword,\n        email: this.state.editingEmail\n          ? this.state.email\n          : this.props.user.email,\n        emailError: this.state.emailError,\n        newPassword: this.state.newPassword,\n        passwordError: this.state.passwordError,\n        user: this.props.user\n      }\n    });\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: getUser(state)\n});\n\nconst mapDispatchToProps = {\n  onEmailChange: CHANGE_EMAIL,\n  onPasswordChange: CHANGE_PASSWORD,\n  onDeleteAccount: DELETE_ACCOUNT\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountContainer);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { A, Button, Error, Input, Label, P, Spacer } from \"../../theme\";\n\nexport const StyledForm = styled.form`\n  padding: 8px;\n`;\n\n/**\n * A form for changing the current user's email address.\n */\nconst ChangeEmail = ({\n  editing,\n  email,\n  error,\n  onChangeEmail,\n  onSubmit,\n  onToggleEdit\n}) => (\n  <StyledForm\n    onSubmit={e => {\n      e.preventDefault();\n      onSubmit();\n    }}\n  >\n    <Label htmlFor=\"email-input\">\n      Email Address (\n      <A onClick={onToggleEdit}>{editing ? \"Cancel\" : \"Change\"}</A>)\n    </Label>\n    <Input\n      id=\"email-input\"\n      type=\"email\"\n      readOnly={!editing}\n      required={editing}\n      value={email}\n      onChange={e => onChangeEmail(e.target.value)}\n    />\n    {error && (\n      <Spacer top=\"sm\">\n        <Error>\n          <P className=\"testing_error\">{error}</P>\n        </Error>\n      </Spacer>\n    )}\n    {editing && (\n      <Button type=\"submit\" isPrimary>\n        Save Email\n      </Button>\n    )}\n  </StyledForm>\n);\n\nChangeEmail.propTypes = {\n  /** Indicates if the user is in edit mode and can change the email address. */\n  editing: PropTypes.bool,\n  /** The current value for the email address */\n  email: PropTypes.string,\n  /** An error that impacts the form */\n  error: PropTypes.string,\n  /** Called when the user changes the email address. Given the new value as the first param. */\n  onChangeEmail: PropTypes.func.isRequired,\n  /** Called when the form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n  /** Called when the user wishes to toggle the editing state */\n  onToggleEdit: PropTypes.func.isRequired\n};\n\nChangeEmail.defaultProps = {\n  editing: false,\n  email: null,\n  error: null\n};\n\nexport default ChangeEmail;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport {\n  A,\n  Button,\n  Error,\n  Input,\n  Label,\n  P,\n  Spacer,\n  Tooltip\n} from \"../../theme\";\n\nexport const StyledForm = styled.form`\n  padding: 8px;\n`;\n\n/**\n * A form for changing the user's password.\n */\nconst ChangePassword = ({\n  confirmNewPassword,\n  currentPassword,\n  editing,\n  error,\n  newPassword,\n  onChangeConfirmNewPassword,\n  onChangeCurrentPassword,\n  onChangeNewPassword,\n  onSubmit,\n  onToggleEdit\n}) => (\n  <StyledForm\n    className=\"form-group\"\n    onSubmit={e => {\n      e.preventDefault();\n      onSubmit();\n    }}\n  >\n    <Label>\n      Password (<A onClick={onToggleEdit}>{editing ? \"Cancel\" : \"Change\"}</A>)\n    </Label>\n    {editing ? (\n      <React.Fragment>\n        <Label htmlFor=\"current-password\">Current Password</Label>\n        <Input\n          id=\"current-password\"\n          type=\"password\"\n          value={currentPassword}\n          onChange={e => onChangeCurrentPassword(e.target.value)}\n          required\n        />\n        <Label htmlFor=\"new-password\">\n          New Password{\" \"}\n          <Tooltip>\n            Passwords may be between 6-15 characters.\n            <br />\n            They may include these characters: a-z, A-Z, 0-9, #, @, or *.\n          </Tooltip>\n        </Label>\n        <Input\n          id=\"new-password\"\n          type=\"password\"\n          value={newPassword}\n          onChange={e => onChangeNewPassword(e.target.value)}\n          required\n        />\n        <Label htmlFor=\"confirm-password\">Confirm New Password</Label>\n        <Input\n          id=\"confirm-password\"\n          type=\"password\"\n          value={confirmNewPassword}\n          onChange={e => onChangeConfirmNewPassword(e.target.value)}\n          required\n        />\n        {error && (\n          <Spacer top=\"sm\">\n            <Error>\n              <P className=\"testing_error\">{error}</P>\n            </Error>\n          </Spacer>\n        )}\n        <Button type=\"submit\" isPrimary>\n          Save Password\n        </Button>\n      </React.Fragment>\n    ) : (\n      <Input\n        className=\"testing_mask\"\n        type=\"password\"\n        readOnly\n        defaultValue=\"********\"\n      />\n    )}\n  </StyledForm>\n);\n\nChangePassword.propTypes = {\n  /** The confirmed new password */\n  confirmNewPassword: PropTypes.string,\n  /** The user's current password */\n  currentPassword: PropTypes.string,\n  /** Are we currently in edit mode? */\n  editing: PropTypes.bool,\n  /** An error message that impacts this form */\n  error: PropTypes.string,\n  /** The new password */\n  newPassword: PropTypes.string,\n  /** Called when the confirmNewPassword value changes. Is provided\n   the new value as the first param */\n  onChangeConfirmNewPassword: PropTypes.func.isRequired,\n  /** Called when the currentPassword value changes. Is provided the\n   new value as the first param */\n  onChangeCurrentPassword: PropTypes.func.isRequired,\n  /** Called when the newPassword value changes. Is provided the new\n   value as the first param */\n  onChangeNewPassword: PropTypes.func.isRequired,\n  /** Called when the form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n  /** Called when the user wishes to toggle the edit state */\n  onToggleEdit: PropTypes.func.isRequired\n};\n\nexport default ChangePassword;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect } from \"react-router-dom\";\nimport AccountContainer from \"../../containers/AccountContainer\";\nimport {\n  Button,\n  Error,\n  H1,\n  H2,\n  ModalPrompt,\n  P,\n  Spacer,\n  Tile\n} from \"../../theme\";\nimport ChangeEmail from \"./ChangeEmail\";\nimport ChangePassword from \"./ChangePassword\";\n\nconst StyleWrapper = styled.div`\n  max-width: 1280px;\n  padding: 16px;\n  margin: 0 auto;\n\n  .form-group {\n    padding: 8px;\n  }\n`;\n\n/**\n * A coordinating component that builds up the Account page.\n */\nconst Account = () => (\n  <StyleWrapper>\n    <AccountContainer>\n      {accountData => (\n        <React.Fragment>\n          {!accountData.props.user.id && <Redirect to=\"/\" />}\n          <H1>Account Settings - {accountData.props.user.username}</H1>\n          <Spacer top=\"md\" bottom=\"md\">\n            <Tile>\n              <ChangeEmail\n                editing={accountData.props.editingEmail}\n                email={accountData.props.email}\n                error={accountData.props.emailError}\n                onChangeEmail={accountData.actions.changeEmail}\n                onSubmit={accountData.actions.submitEmail}\n                onToggleEdit={accountData.actions.toggleEditEmail}\n              />\n              <ChangePassword\n                confirmNewPassword={accountData.props.confirmNewPassword}\n                currentPassword={accountData.props.currentPassword}\n                editing={accountData.props.editingPassword}\n                error={accountData.props.passwordError}\n                newPassword={accountData.props.newPassword}\n                onChangeConfirmNewPassword={\n                  accountData.actions.changeConfirmNewPassword\n                }\n                onChangeCurrentPassword={\n                  accountData.actions.changeCurrentPassword\n                }\n                onChangeNewPassword={accountData.actions.changeNewPassword}\n                onSubmit={accountData.actions.submitPassword}\n                onToggleEdit={accountData.actions.toggleEditPassword}\n              />\n              <div className=\"form-group\">\n                <H2>Delete Account</H2>\n                <Spacer bottom=\"sm\" />\n                <P>Deleting your account cannot be undone.</P>\n                {accountData.props.deleteError && (\n                  <Spacer top=\"sm\">\n                    <Error>\n                      <P>{accountData.props.deleteError}</P>\n                    </Error>\n                  </Spacer>\n                )}\n                <ModalPrompt\n                  message=\"Please enter your password to confirm deletion of your account.\"\n                  submitText=\"Delete Account\"\n                  cancelText=\"Cancel\"\n                  onSubmit={accountData.actions.deleteAccount}\n                  inputType=\"password\"\n                >\n                  {modal => (\n                    <Button onClick={modal.actions.open}>Delete Account</Button>\n                  )}\n                </ModalPrompt>\n              </div>\n            </Tile>\n          </Spacer>\n        </React.Fragment>\n      )}\n    </AccountContainer>\n  </StyleWrapper>\n);\n\nexport default Account;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeCancelable from \"../utils/makeCancelable\";\nimport KitePaintApi from \"../api/KitePaintApi\";\n\n/**\n * Triggers activation of the user account and surfaces relevant data.\n * @type {Object}\n */\nexport default class ActivateContainer extends React.Component {\n  static propTypes = {\n    /** A function that returns renderable content */\n    children: PropTypes.func.isRequired,\n    /** The ID of the user being activated */\n    userId: PropTypes.string.isRequired,\n    /** The activation code for the user */\n    activationCode: PropTypes.string.isRequired\n  };\n\n  state = {\n    /** Is the activation request still pending */\n    isPending: true,\n    /** An error regarding the activation */\n    error: \"\"\n  };\n\n  componentDidMount() {\n    const cancelable = makeCancelable(\n      KitePaintApi.activateAccount(this.props.userId, this.props.activationCode)\n    );\n    this._cancelablePromises.push(cancelable);\n\n    cancelable.promise\n      .then(() => {\n        this.setState({\n          isPending: false\n        });\n      })\n      .catch(response => {\n        if (response && response.isCanceled) {\n          return;\n        }\n        this.setState({\n          isPending: false,\n          error: response\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this._cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  _cancelablePromises = [];\n\n  render() {\n    return this.props.children({\n      props: {\n        isPending: this.state.isPending,\n        error: this.state.error\n      }\n    });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport ActivateContainer from \"../../containers/ActivateContainer\";\nimport { Spacer, H1, P, Loading, Error } from \"../../theme\";\n\nconst StyleWrapper = styled.div`\n  max-width: 1280px;\n  padding: 16px;\n  margin: 0 auto;\n`;\n\nconst Activate = ({ match }) => (\n  <StyleWrapper>\n    <H1>Account Activation</H1>\n    <Spacer bottom=\"md\" />\n    <ActivateContainer\n      userId={match.params.userId}\n      activationCode={match.params.activationCode}\n    >\n      {activation => {\n        if (activation.props.isPending) {\n          return <Loading />;\n        }\n\n        if (activation.props.error) {\n          return (\n            <React.Fragment>\n              <P>Account activation was unsucccessful.</P>\n              <Spacer bottom=\"sm\" />\n              <Error>\n                <P>{activation.props.error}</P>\n              </Error>\n            </React.Fragment>\n          );\n        }\n\n        return (\n          <P className=\"testing_success\">Your account has been activated!</P>\n        );\n      }}\n    </ActivateContainer>\n  </StyleWrapper>\n);\n\nActivate.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userId: PropTypes.string.isRequired,\n      activationCode: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default Activate;\n","import { handleActions } from \"redux-actions\";\nimport { fromJS } from \"immutable\";\nimport Status from \"../../models/Status\";\nimport { GET_PRODUCTS } from \"../actions\";\n\nexport const defaultState = fromJS({});\n\n/**\n * The reducer managing retrieved products.\n */\nexport default handleActions(\n  {\n    [GET_PRODUCTS.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      const productsById = data.reduce((accumulated, product) => {\n        accumulated[product.get(\"id\")] = product;\n        return accumulated;\n      }, {});\n      return state.merge(productsById);\n    }\n  },\n  defaultState\n);\n\n/**\n * Gets all the public products stored in redux\n * @param  {Map} state\n * @param {String} groupBy A value to group the products by\n * @return {Object} Arrays of products indexed by the grouping value\n */\nexport const getPublicProductsGrouped = (state, groupBy) => {\n  const products = state.get(\"products\");\n  return products\n    .filter(product => product.get(\"status\") === Status.PUBLIC)\n    .toList()\n    .groupBy(product => product.get(groupBy))\n    .toJS();\n};\n\n/**\n * Retrieve a stored product based on the provided id\n * @param  {Map} state\n * @param  {String} id\n * @return {Object} the product\n */\nexport const getProductById = (state, id) => {\n  const products = state.get(\"products\");\n  const product = products.get(id, null);\n  return product;\n};\n\n/**\n * Gets all products indexed by ID\n * @param  {Map} state\n * @return {Object}\n */\nexport const getProductsWithIndex = state => {\n  return state.get(\"products\").toJS();\n};\n","import { handleActions } from \"redux-actions\";\nimport { fromJS } from \"immutable\";\nimport { GET_MANUFACTURERS } from \"../actions\";\n\nexport const defaultState = fromJS({});\n\n/**\n * The reducer managing retrieved manufacturers.\n */\nexport default handleActions(\n  {\n    [GET_MANUFACTURERS.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      const manufacturersById = data.reduce((accumulated, manufacturer) => {\n        accumulated[manufacturer.get(\"id\")] = manufacturer;\n        return accumulated;\n      }, {});\n      return state.merge(manufacturersById);\n    }\n  },\n  defaultState\n);\n\n/**\n * Gets all the manufacturers stored in redux\n * @param  {Map} state\n * @return {Object[]} an array of manufacturers\n */\nexport const getManufacturers = state => {\n  const manufacturers = state.get(\"manufacturers\");\n  return manufacturers\n    .sort((manA, manB) => {\n      const aName = manA.get(\"name\");\n      const bName = manB.get(\"name\");\n      if (aName > bName) {\n        return 1;\n      }\n      if (aName < bName) {\n        return -1;\n      }\n      return 0;\n    })\n    .toList()\n    .toJS();\n};\n\n/**\n * Retreives the stored manufacturer based on the provided product id\n * @param  {Map} state\n * @param  {String} productId\n * @return {Object} The manufacturer\n */\nexport const getManufacturerByProductId = (state, productId) => {\n  const product = state.getIn([\"products\", productId]);\n  if (!product) {\n    return null;\n  }\n\n  const manufacturerId = product.get(\"manufacturer\");\n  const manufacturer = state.getIn([\"manufacturers\", manufacturerId]);\n  return manufacturer || null;\n};\n\n/**\n * Gets the stored manufacturers indexed by idea\n * @param  {Map} state\n * @return {Object}\n */\nexport const getManufacturersWithIndex = state => {\n  return state.get(\"manufacturers\").toJS();\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getPublicProductsGrouped } from \"../redux/modules/products\";\nimport { getManufacturers } from \"../redux/modules/manufacturers\";\nimport { GET_PRODUCTS, GET_MANUFACTURERS } from \"../redux/actions\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport { makeCancelable } from \"../utils\";\n\n/**\n * Provides information and actions about/for Designs.\n */\nexport class ProductsContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A function returning content to be rendered\n     */\n    children: PropTypes.func.isRequired,\n    /**\n     * The products indexed by manufacturer id.\n     */\n    products: PropTypes.objectOf(\n      PropTypes.arrayOf(PropTypes.instanceOf(Product)).isRequired\n    ).isRequired,\n    /**\n     * A list of manufacturers\n     */\n    manufacturers: PropTypes.arrayOf(PropTypes.instanceOf(Manufacturer))\n      .isRequired,\n    /**\n     * A function to trigger the retreival of the products. This should update the redux state,\n     * causing products to be provided through redux.\n     */\n    getProducts: PropTypes.func.isRequired,\n    /**\n     * A function to trigger the retreival of the manufacturers. This should update the redux state,\n     * causing manufacturers to be provided through redux.\n     */\n    getManufacturers: PropTypes.func.isRequired\n  };\n\n  state = {\n    isLoading: true\n  };\n\n  componentDidMount() {\n    const productRequest = makeCancelable(this.props.getProducts());\n    const manufacturerRequest = makeCancelable(this.props.getManufacturers());\n    this.cancelablePromises.push(productRequest);\n    this.cancelablePromises.push(manufacturerRequest);\n    Promise.all([productRequest.promise, manufacturerRequest.promise])\n      .then(() => {\n        this.setState({\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  cancelablePromises = [];\n\n  render() {\n    return this.props.children({\n      props: {\n        isLoading: this.state.isLoading,\n        products: this.props.products || {},\n        manufacturers: this.props.manufacturers || []\n      }\n    });\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: getPublicProductsGrouped(state, \"manufacturer\"),\n  manufacturers: getManufacturers(state)\n});\n\nconst mapDispatchToProps = {\n  getProducts: GET_PRODUCTS,\n  getManufacturers: GET_MANUFACTURERS\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductsContainer);\n","import styled from \"styled-components\";\n\n/**\n * An element that displays an image to represent a manufacturer. Use this like an image tag.\n */\nconst ManufacturerLogo = styled.div`\n  background-image: url(${props => props.src});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: block;\n  width: ${props => props.size || 70}px;\n  height: ${props => props.size || 70}px;\n  margin: ${props => (props.noMargin ? 0 : \"8px 8px 0 0\")};\n  border: 1px solid ${props => props.theme.colors.gray};\n  border-radius: 4px;\n  box-sizing: border-box;\n  background-color: ${props => props.theme.colors.white};\n`;\n\nexport default ManufacturerLogo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Manufacturer from \"../../models/Manufacturer\";\nimport { H3, A, P, Tile } from \"../../theme\";\nimport { getAssetUrl } from \"../../utils\";\nimport ManufacturerLogo from \"../ManufacturerLogo\";\n\n/**\n * A general wrapper for the showcase. Gives it the border and the light background\n */\nexport const StyleWrapper = styled(Tile)`\n  padding: 8px;\n`;\n\n/**\n * A wrapper for the layout of the heading\n */\nconst HeadingWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\n/**\n * Displays a showcase UI for the specified manufacturer.\n */\nconst ManufacturerShowcase = ({ manufacturer, children }) => (\n  <StyleWrapper>\n    <HeadingWrapper>\n      <ManufacturerLogo\n        src={getAssetUrl(`/logos/${manufacturer.get(\"logo\")}`)}\n      />\n      <div>\n        <H3>{manufacturer.get(\"name\")}</H3>\n        {manufacturer.get(\"website\") && (\n          <P className=\"testing_website\">\n            <A href={manufacturer.get(\"website\")} target=\"_blank\">\n              {manufacturer.get(\"website\")}\n            </A>\n          </P>\n        )}\n      </div>\n    </HeadingWrapper>\n    {children}\n  </StyleWrapper>\n);\n\nManufacturerShowcase.propTypes = {\n  /**\n   * The manufacturer being showcased\n   */\n  manufacturer: PropTypes.instanceOf(Manufacturer).isRequired,\n\n  /**\n   * Content to display within the showcase\n   */\n  children: PropTypes.node\n};\n\nexport default ManufacturerShowcase;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Displays a div containing the provided SVG content\n */\nconst Svg = ({ svg, ...props }) => (\n  <div {...props} dangerouslySetInnerHTML={{ __html: svg }} />\n);\n\nSvg.propTypes = {\n  /**\n   * The SVG to be displayed inside the div\n   */\n  svg: PropTypes.node.isRequired\n};\n\nexport default Svg;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Product from \"../../models/Product\";\nimport { H3 } from \"../../theme\";\nimport Svg from \"../Svg\";\n\n/**\n * Provides styling for the showcase\n */\nexport const StyleWrapper = styled.div`\n  flex-basis: 500px;\n  margin: 8px;\n  flex-shrink: 1;\n  border: 1px solid ${props => props.theme.colors.gray};\n  border-radius: 4px;\n  ${props => props.theme.patterns.transparencyBackground};\n  cursor: pointer;\n  position: relative;\n  display: flex;\n  padding: 36px 8px 8px;\n  flex-wrap: wrap;\n  align-items: middle;\n  justify-content: space-around;\n\n  .product-heading {\n    background: ${props => props.theme.colors.white};\n    border-bottom: 1px solid ${props => props.theme.colors.gray};\n    text-align: center;\n    padding: 4px 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n  }\n  .preview {\n    width: 50%;\n    flex-grow: 1;\n    padding: 8px;\n    box-sizing: border-box;\n    transition: 0.6s transform;\n\n    &.count-2 {\n      width: 100%;\n    }\n    > svg {\n      height: 100%;\n      width: 100%;\n    }\n  }\n  &:hover {\n    .preview {\n      transform: translateY(-15px);\n    }\n  }\n`;\n\n/**\n * A preview of a specific product, which links to the create page for that product.\n */\nconst ProductShowcase = ({ product }) => (\n  <StyleWrapper as={Link} to={`/create/${product.get(\"id\")}`}>\n    <H3 className=\"product-heading\">{product.get(\"name\")}</H3>\n    {product.get(\"variations\").map(variation => (\n      <Svg\n        className={`preview count-${product.get(\"variations\").length}`}\n        key={variation.id}\n        svg={variation.svg}\n      />\n    ))}\n  </StyleWrapper>\n);\n\nProductShowcase.propTypes = {\n  /**\n   * The product being showcased\n   */\n  product: PropTypes.instanceOf(Product).isRequired\n};\n\nexport default ProductShowcase;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { H1, P, Spacer, PageLoader } from \"../../theme\";\nimport ProductsContainer from \"../../containers/ProductsContainer\";\nimport ManufacturerShowcase from \"./ManufacturerShowcase\";\nimport ProductShowcase from \"./ProductShowcase\";\n\n/**\n * General styling for the create page\n */\nconst StyleWrapper = styled.div`\n  margin: 0 auto;\n  max-width: 1280px;\n\n  .products-wrapper {\n    display: flex;\n    margin: 8px 0 24px;\n    justify-content: space-around;\n  }\n  .heading {\n    padding: 8px 16px;\n  }\n`;\n\n/**\n * A coordinating component that builds the /create page.\n */\nconst Create = () => (\n  <StyleWrapper>\n    <div className=\"heading\">\n      <H1>Create</H1>\n      <P>Select a kite that you want to design</P>\n    </div>\n    <ProductsContainer>\n      {productsData => (\n        <React.Fragment>\n          {productsData.props.isLoading ? (\n            <PageLoader />\n          ) : (\n            productsData.props.manufacturers.map(manufacturer => {\n              const products =\n                productsData.props.products[manufacturer.get(\"id\")];\n              if (!products || !products.length) {\n                return null;\n              }\n              return (\n                <Spacer key={manufacturer.get(\"id\")} bottom=\"md\">\n                  <ManufacturerShowcase manufacturer={manufacturer}>\n                    <div className=\"products-wrapper\">\n                      {products.map(product => (\n                        <ProductShowcase\n                          product={product}\n                          key={product.get(\"id\")}\n                        />\n                      ))}\n                    </div>\n                  </ManufacturerShowcase>\n                </Spacer>\n              );\n            })\n          )}\n        </React.Fragment>\n      )}\n    </ProductsContainer>\n  </StyleWrapper>\n);\n\nexport default Create;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProductById } from \"../redux/modules/products\";\nimport { getManufacturerByProductId } from \"../redux/modules/manufacturers\";\nimport { GET_PRODUCTS, GET_MANUFACTURERS } from \"../redux/actions\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport { makeCancelable } from \"../utils\";\n\n/**\n * Provides information about a specific product.\n */\nexport class CreateNewContainer extends React.Component {\n  static propTypes = {\n    /**\n     * The ID of the product to get information about.\n     */\n    productId: PropTypes.string.isRequired,\n    /**\n     * The product. Provided by redux.\n     */\n    product: PropTypes.instanceOf(Product),\n    /**\n     * The manufactuer of the product. Provided by redux.\n     */\n    manufacturer: PropTypes.instanceOf(Manufacturer),\n    /**\n     * A function to request the product be fetched. Provided by redux.\n     */\n    onRequestProduct: PropTypes.func.isRequired,\n    /**\n     * A function to request the manufacturer of the product be fetched. Provided by redux.\n     */\n    onRequestManufacturer: PropTypes.func.isRequired,\n    /**\n     * A function that returns the content to be rendered.\n     */\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    isLoading: true\n  };\n\n  componentDidMount() {\n    const productRequest = makeCancelable(this.props.onRequestProduct());\n    const manufacturerRequest = makeCancelable(\n      this.props.onRequestManufacturer()\n    );\n    this.cancelablePromises.push(productRequest);\n    this.cancelablePromises.push(manufacturerRequest);\n    Promise.all([productRequest.promise, manufacturerRequest.promise])\n      .then(() => {\n        this.setState({\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  cancelablePromises = [];\n\n  render() {\n    return this.props.children({\n      props: {\n        isLoading: this.state.isLoading,\n        product: this.props.product,\n        manufacturer: this.props.manufacturer\n      }\n    });\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  product: getProductById(state, props.productId),\n  manufacturer: getManufacturerByProductId(state, props.productId)\n});\n\nconst mapDispatchToProps = {\n  onRequestProduct: GET_PRODUCTS,\n  onRequestManufacturer: GET_MANUFACTURERS\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateNewContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fromJS, Iterable } from \"immutable\";\nimport { connect } from \"react-redux\";\nimport { CREATE_DESIGN, UPDATE_DESIGN } from \"../redux/actions\";\nimport Design from \"../models/Design\";\nimport Product from \"../models/Product\";\nimport Status from \"../models/Status\";\nimport { isEmbedded, defaultBackground } from \"../constants/embed\";\nimport ErrorPage from \"../components/ErrorPage\";\nimport { softCompareStrings, makeCancelable, embedAllowed } from \"../utils\";\n\nconst appliedColorsShape = PropTypes.objectOf(\n  PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n  })\n);\n\nconst productAppliedColorsShape = PropTypes.objectOf(appliedColorsShape);\n\nexport { appliedColorsShape, productAppliedColorsShape };\n\n/**\n * Parses the variations from the provided design in order to determine what colors have been\n * applied.\n * @param {Design} design A design to parse the colors from\n * @param {Product} product The product that the design belongs to\n * @return {Object}\n */\nexport function generateAppliedColors(design, product) {\n  if (!design || !product) {\n    return {};\n  }\n  const colors = product.get(\"colors\");\n\n  // Loop through each variation to grab the colors per panel\n  return design.get(\"variations\").reduce((accumulated, variation) => {\n    const { svg, id } = variation;\n\n    // Render the variation's SVG\n    const render = new window.DOMParser().parseFromString(svg, \"text/xml\");\n\n    // Find all of the colorable elements\n    const panels = render.querySelectorAll(\"[data-id]\");\n\n    // Build an object mapping each panel to its color\n    const appliedColors = {};\n    for (let i = 0; i < panels.length; i++) {\n      const panel = panels[i];\n      const color = panel.getAttribute(\"fill\");\n      if (color) {\n        const colorMatch = colors.find(storedColor =>\n          softCompareStrings(storedColor.color, color)\n        );\n        const colorName = colorMatch ? colorMatch.name : color;\n        appliedColors[panel.getAttribute(\"data-id\")] = {\n          color,\n          name: colorName\n        };\n      }\n    }\n\n    accumulated[id] = appliedColors;\n    return accumulated;\n  }, {});\n}\n\n/**\n * Manages the overall state of the editor. And provides a means to save changes.\n */\nexport class EditorContainer extends React.Component {\n  static propTypes = {\n    /**\n     * The product being edited\n     */\n    product: PropTypes.instanceOf(Product).isRequired,\n    /**\n     * The default color (name) to be selected. Will default to the first color on the product\n     * otherwise.\n     */\n    defaultColor: PropTypes.string,\n    /**\n     * An existing design being edited.\n     */\n    design: PropTypes.instanceOf(Design),\n    /**\n     * The default variation (id) to be selected. Will default to the first variation on the\n     * product otherwise.\n     */\n    defaultVariation: PropTypes.string,\n    /**\n     * A function that renders content\n     */\n    children: PropTypes.func.isRequired,\n    /**\n     * A function called when we want to save the design. Provided by Redux.\n     */\n    onSave: PropTypes.func.isRequired,\n    /**\n     * A function called when we want to update a design. Provided by Redux.\n     */\n    onUpdate: PropTypes.func.isRequired\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n\n    // Use the first color, or the one specified\n    let currentColor = props.product.get(\"colors\")[0];\n    if (props.defaultColor) {\n      currentColor = props.product\n        .get(\"colors\")\n        .find(color => softCompareStrings(color.name, props.defaultColor));\n    }\n\n    // Use the primary variation or the one specified\n    let currentVariation = props.product.get(\"variations\")[0];\n\n    if (props.design) {\n      currentVariation = props.design\n        .get(\"variations\")\n        .find(variation => variation.primary);\n    }\n    if (props.defaultVariation) {\n      currentVariation = props.product\n        .get(\"variations\")\n        .find(variation => variation.id === props.defaultVariation);\n    }\n\n    const appliedColors = generateAppliedColors(\n      this.props.design,\n      this.props.product\n    );\n\n    this.state = {\n      background: defaultBackground || null,\n      hideOutlines: false,\n      /**\n       * The currently selected color.\n       * @type {Object}\n       */\n      currentColor,\n      /**\n       * The currently selected variation.\n       * @type {Object}\n       */\n      currentVariation,\n      /**\n       * The currently applied colors.\n       * Example\n       * {\n       *   \"variation-id\": {\n       *     p1: {\n       *       name: \"black\",\n       *       color: \"#000\"\n       *     }\n       *   }\n       * }\n       * @type {Object}\n       */\n      appliedColors,\n      appliedColorsHistory: [],\n      undoDepth: 0\n    };\n  }\n\n  /**\n   * Apply colors to the state and keep a record of the change in history.\n   * @param  {String[]} keys The series of keys that point to the value to\n   * change. Is provided to Immutable's setIn. If the array is empty, the value\n   * will be used to overwrite the entire appliedColors value.\n   * @param  {*} value The new value to set\n   * @private\n   */\n  _applyColors(keys, value) {\n    const MAX_HISTORY_LENGTH = 20;\n\n    // Determine the new value for appliedColors, and the current specific\n    // value that is being changed\n    let appliedColors;\n    let previousValue;\n    if (!keys.length) {\n      // If we have no keys, we are replacing the entire appliedColors object\n      appliedColors = value;\n      previousValue = this.state.appliedColors;\n    } else {\n      const currentAppliedColors = fromJS(this.state.appliedColors);\n      appliedColors = currentAppliedColors.setIn(keys, value).toJS();\n      if (currentAppliedColors.hasIn(keys)) {\n        previousValue = currentAppliedColors.getIn(keys, value);\n      }\n\n      // If the previousValue is immutable, convert it to JS.\n      if (Iterable.isIterable(previousValue)) {\n        previousValue = previousValue.toJS();\n      }\n    }\n\n    // Update the history\n\n    // If we have some undo depth, cut the undone steps out of the history since\n    // we are now branching forward with new changes.\n    const appliedColorsHistory = this.state.appliedColorsHistory.slice(\n      this.state.undoDepth\n    );\n    const historyEntry = {\n      keys,\n      value,\n      previousValue\n    };\n    // Add the new history entry to the beginning of the array\n    appliedColorsHistory.unshift(historyEntry);\n    // If we have too many items in the array, delete the oldest one\n    if (appliedColorsHistory.length > MAX_HISTORY_LENGTH) {\n      appliedColorsHistory.pop();\n    }\n\n    // Set state\n    this.setState({\n      appliedColors,\n      appliedColorsHistory,\n      undoDepth: 0\n    });\n  }\n\n  /**\n   * Undo the previous change based on undoDepth and appliedColorsHistory\n   */\n  handleUndo = () => {\n    let appliedColors;\n    const currentUndoDepth = this.state.undoDepth;\n\n    // Cannot undo if there are no more steps to undo\n    if (currentUndoDepth === this.state.appliedColorsHistory.length) {\n      return;\n    }\n    const stepToUndo = this.state.appliedColorsHistory[currentUndoDepth];\n    if (!stepToUndo.keys.length) {\n      appliedColors = stepToUndo.previousValue;\n    } else {\n      const currentAppliedColors = fromJS(this.state.appliedColors);\n      appliedColors = currentAppliedColors\n        .setIn(stepToUndo.keys, stepToUndo.previousValue)\n        .toJS();\n    }\n    this.setState({\n      appliedColors,\n      undoDepth: currentUndoDepth + 1\n    });\n  };\n\n  /**\n   * Redo the last undone change based on undoDepth and appliedColorsHistory\n   */\n  handleRedo = () => {\n    let appliedColors;\n    const currentUndoDepth = this.state.undoDepth;\n\n    // Cannot redo if there is nothing to redo\n    if (currentUndoDepth === 0) {\n      return;\n    }\n    const stepToRedo = this.state.appliedColorsHistory[currentUndoDepth - 1];\n    if (!stepToRedo.keys.length) {\n      appliedColors = stepToRedo.value;\n    } else {\n      const currentAppliedColors = fromJS(this.state.appliedColors);\n      appliedColors = currentAppliedColors\n        .setIn(stepToRedo.keys, stepToRedo.value)\n        .toJS();\n    }\n    this.setState({\n      appliedColors,\n      undoDepth: currentUndoDepth - 1\n    });\n  };\n\n  /*\n   * Cancels any pending promises before being unmounted.\n   */\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(promise => promise.cancel());\n  }\n\n  /**\n   * An array of promises that may need to be cancelled when the component is unmounted\n   */\n  cancelablePromises = [];\n\n  /**\n   * Handles when a different color is selected by updating state.\n   * @param  {String} colorName The name of the newly selected color\n   */\n  handleColorSelection = colorName => {\n    const currentColor = this.props.product\n      .get(\"colors\")\n      .find(color => softCompareStrings(color.name, colorName));\n    this.setState({\n      currentColor\n    });\n  };\n\n  /**\n   * Handles when a different variation is selected by updating state.\n   * @param  {String} variationId The id of the newly selected variation\n   */\n  handleVariationSelection = variationId => {\n    const currentVariation = this.props.product\n      .get(\"variations\")\n      .find(variation => variation.id === variationId);\n    this.setState({\n      currentVariation\n    });\n  };\n\n  /**\n   * Set the color for the specified id on the current variation to the current color.\n   * @param  {String} id The ID of the panel, taken from data-id on the element.\n   */\n  handleColorApplied = id =>\n    this._applyColors(\n      [this.state.currentVariation.id, id],\n      this.state.currentColor\n    );\n\n  /**\n   * Generates the design variations based on the product variations and the applied colors.\n   * @return {Object[]} Each object contains name, primary, and svg.\n   */\n  generateDesignVariations = () => {\n    const appliedColors = this.state.appliedColors;\n    const productVariations = this.props.product.get(\"variations\");\n\n    // Build each variation\n    return productVariations.map((variation, index) => {\n      // Render the blank variation from the product in memory\n      const render = new window.DOMParser().parseFromString(\n        variation.svg,\n        \"text/xml\"\n      );\n      const colorMap = appliedColors[variation.id] || {};\n\n      // Apply each color to the rendered variation\n      Object.keys(colorMap).forEach(id => {\n        const color = colorMap[id].color;\n        const panel = render.querySelector(`[data-id=\"${id}\"]`);\n        if (!panel) {\n          return;\n        }\n        panel.setAttribute(\"fill\", color);\n      });\n\n      // Get the new SVG string from the render.\n      const svg = render.querySelector(\"svg\").outerHTML;\n\n      // Return the variation\n      return {\n        id: variation.id,\n        name: variation.name,\n        primary: !index,\n        svg\n      };\n    });\n  };\n\n  /** Clears all colors from the current variation */\n  handleReset = () => this._applyColors([this.state.currentVariation.id], {});\n\n  /**\n   * Handles save by parsing data and submitting a request to create a new design. Redirects to that\n   * design's edit page when successful.\n   * @param  {Object} data must contain name and user(id)\n   */\n  handleSave = data => {\n    const { name, user } = data;\n    const design = new Design({\n      name,\n      user,\n      product: this.props.product.get(\"id\"),\n      variations: this.generateDesignVariations(),\n      status: user === \"0\" ? Status.PUBLIC : Status.UNLISTED\n    });\n    const promise = makeCancelable(this.props.onSave(design));\n    promise.promise.then(response => {\n      const designId = response.data.id;\n      if (data.user === \"0\") {\n        // If the design was created anonymously, go to the view page\n        window.location.replace(`/view/${designId}`);\n      } else {\n        window.location.replace(`/edit/${designId}`);\n      }\n    });\n    this.cancelablePromises.push(promise);\n  };\n\n  /**\n   * Handles update by parsing data and submitting a request to update the design.\n   */\n  handleUpdate = () => {\n    const design = this.props.design.set(\n      \"variations\",\n      this.generateDesignVariations()\n    );\n    this.props.onUpdate(design);\n  };\n\n  /**\n   * Gets the applied colors for the current variation\n   */\n  getCurrentVariationColors = () => {\n    const currentVariationId = this.state.currentVariation.id;\n    return this.state.appliedColors[currentVariationId] || {};\n  };\n\n  /**\n   * Handles auto fill by merging the colors applied to the current variation on top of the colors\n   * applied to every other variation.\n   */\n  handleAutofill = () => {\n    const currentColors = this.getCurrentVariationColors();\n    const variations = this.props.product.get(\"variations\");\n    const appliedColors = variations.reduce((accumulated, variation) => {\n      accumulated[variation.id] = {\n        ...currentColors\n      };\n      return accumulated;\n    }, {});\n    this._applyColors([], appliedColors);\n  };\n\n  handleChangeBackground = value => this.setState({ background: value });\n\n  handleToggleHideOutlines = () =>\n    this.setState({ hideOutlines: !this.state.hideOutlines });\n\n  render() {\n    if (\n      isEmbedded &&\n      this.props.product &&\n      !embedAllowed(this.props.product.get(\"embed\").split(\",\"))\n    ) {\n      return (\n        <ErrorPage\n          errorCode={401}\n          errorMessage=\"Embedding of this page is not permitted.\"\n        />\n      );\n    }\n    const data = {\n      actions: {\n        applyColor: this.handleColorApplied,\n        autofill: this.handleAutofill,\n        changeBackground: this.handleChangeBackground,\n        redo: this.handleRedo,\n        reset: this.handleReset,\n        save: this.handleSave,\n        selectColor: this.handleColorSelection,\n        selectVariation: this.handleVariationSelection,\n        toggleHideOutlines: this.handleToggleHideOutlines,\n        undo: this.handleUndo,\n        update: this.handleUpdate\n      },\n      props: {\n        appliedColors: this.state.appliedColors,\n        background: this.state.background,\n        canRedo: this.state.undoDepth !== 0,\n        canUndo:\n          this.state.undoDepth !== this.state.appliedColorsHistory.length,\n        currentColor: this.state.currentColor,\n        currentVariation: this.state.currentVariation,\n        currentVariationColors: this.getCurrentVariationColors(),\n        hideOutlines: this.state.hideOutlines\n      }\n    };\n    return this.props.children(data);\n  }\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  onSave: CREATE_DESIGN,\n  onUpdate: UPDATE_DESIGN\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditorContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport canvg from \"canvg\";\nimport Design from \"../models/Design\";\nimport {\n  Dropdown,\n  Modal,\n  Label,\n  Input,\n  P,\n  Icon,\n  Button,\n  ModalClose,\n  Spacer\n} from \"../theme\";\n\nconst StyleWrapper = styled.div`\n  max-width: 100%;\n  width: 500px;\n`;\n\n/**\n * The contents of the share modal\n */\nexport const Content = ({ design, onClose, onDownloadSvg, onDownloadPng }) => {\n  return (\n    <StyleWrapper>\n      <ModalClose onClick={onClose} />\n      {design && (\n        <React.Fragment>\n          <Label className=\"testing_share-content\">Public URL</Label>\n          {design.get(\"isPrivate\") ? (\n            <P>\n              This design is set to Private. It must be Unlisted or Public in\n              order to share the URL.\n            </P>\n          ) : (\n            <Input\n              className=\"testing_public-url\"\n              readOnly\n              value={`${window.location.origin}/view/${design.get(\"id\")}`}\n            />\n          )}\n          <Spacer top=\"md\" />\n          <Label>Download image files</Label>\n          <Dropdown\n            dropdownContent={dropdownData => (\n              <React.Fragment>\n                <dropdownData.components.Item\n                  onClick={() => {\n                    onDownloadSvg();\n                    dropdownData.actions.close();\n                  }}\n                >\n                  SVG files\n                </dropdownData.components.Item>\n                <dropdownData.components.Item\n                  onClick={() => {\n                    onDownloadPng();\n                    dropdownData.actions.close();\n                  }}\n                >\n                  PNG files\n                </dropdownData.components.Item>\n              </React.Fragment>\n            )}\n          >\n            {dropdownData => (\n              <Button isPrimary onClick={dropdownData.actions.open}>\n                Download <Icon icon=\"angle-down\" />\n              </Button>\n            )}\n          </Dropdown>\n        </React.Fragment>\n      )}\n      {!design && <P>You must save this design before it can be shared.</P>}\n    </StyleWrapper>\n  );\n};\n\nContent.propTypes = {\n  /** The design being shared, if any */\n  design: PropTypes.instanceOf(Design),\n  /** Called when the user clicks the close button */\n  onClose: PropTypes.func.isRequired,\n  /** Called when the user clicks the download button */\n  onDownloadSvg: PropTypes.func.isRequired,\n  onDownloadPng: PropTypes.func.isRequired\n};\n\n/**\n * A modal for sharing a design.\n *\n * Example:\n * ```\n * <ShareModal design={someDesign}>\n *   {modal => (<Button onClick={modal.acitons.open}>Share</Button>)}\n * </ShareModal>\n * ```\n */\nclass ShareModal extends React.Component {\n  static propTypes = {\n    /** A function that returns renderable content */\n    children: PropTypes.func.isRequired,\n    /** A design to be shared. */\n    design: PropTypes.instanceOf(Design)\n  };\n\n  state = {\n    // Indicates if the modal is currently open\n    isOpen: false\n  };\n\n  handleOpen = () => this.setState({ isOpen: true });\n\n  handleClose = () => this.setState({ isOpen: false });\n\n  /** Downloads the design variations as SVG files */\n  handleDownloadSvg = () => {\n    this.props.design.get(\"variations\").forEach(variation => {\n      const element = document.createElement(\"a\");\n      element.setAttribute(\n        \"href\",\n        \"data:text/plain;charset=utf-8,\" + encodeURIComponent(variation.svg)\n      );\n      element.setAttribute(\n        \"download\",\n        `${this.props.design.get(\"name\")} - ${variation.name}.svg`\n      );\n\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n    });\n  };\n\n  /** Downloads the design variations as PNG files */\n  handleDownloadPng = () => {\n    this.props.design.get(\"variations\").forEach(variation => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.setAttribute(\"id\", \"image-download-canvas\");\n      canvas.setAttribute(\"width\", \"1000px\");\n      canvas.setAttribute(\"height\", \"600px\");\n      document.body.appendChild(canvas);\n      canvg(canvas, variation.svg);\n      const dataUrl = canvas.toDataURL(\"image/png\");\n      const element = document.createElement(\"a\");\n      element.setAttribute(\"href\", dataUrl);\n      element.setAttribute(\n        \"download\",\n        `${this.props.design.get(\"name\")} - ${variation.name}.png`\n      );\n\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n      document.body.removeChild(canvas);\n    });\n  };\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.state.isOpen}\n        modalContent={\n          <Content\n            design={this.props.design}\n            onClose={this.handleClose}\n            onDownloadSvg={this.handleDownloadSvg}\n            onDownloadPng={this.handleDownloadPng}\n          />\n        }\n        onBackdropClick={this.handleClose}\n      >\n        {this.props.children({\n          actions: {\n            open: this.handleOpen\n          }\n        })}\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Design from \"../models/Design\";\nimport Status from \"../models/Status\";\nimport {\n  Modal,\n  ModalClose,\n  Label,\n  Input,\n  Button,\n  Select,\n  Tooltip\n} from \"../theme\";\n\nconst StyleWrapper = styled.form`\n  max-width: 100%;\n  width: 300px;\n  .submit-button {\n    float: right;\n  }\n`;\n\n/** The content of the Design Settings Modal */\nconst Content = ({\n  design,\n  onSubmit,\n  onCancel,\n  onChangeName,\n  onChangeStatus,\n  onChangePrimary,\n  isPending\n}) => {\n  if (!design) {\n    return null;\n  }\n\n  // The list of status options\n  const statusOptions = [\n    {\n      value: Status.PUBLIC,\n      label: Status[Status.PUBLIC],\n      disabled: design.get(\"productStatus\") < Status.PUBLIC\n    },\n    {\n      value: Status.UNLISTED,\n      label: Status[Status.UNLISTED],\n      disabled: design.get(\"productStatus\") < Status.UNLISTED\n    },\n    {\n      value: Status.PRIVATE,\n      label: Status[Status.PRIVATE],\n      disabled: false\n    }\n  ];\n  return (\n    <StyleWrapper\n      onSubmit={e => {\n        e.preventDefault();\n        onSubmit();\n      }}\n    >\n      <ModalClose onClick={onCancel} />\n      <Label>Design Name</Label>\n      <Input\n        className=\"input-name\"\n        value={design.get(\"name\")}\n        onChange={e => onChangeName(e.target.value)}\n        required\n      />\n      <Label>\n        Status{\" \"}\n        <Tooltip>\n          Private designs are only visible by you.\n          <br />\n          Unlisted designs are visible to anyone, but are not organically\n          discoverable.\n          <br />\n          Public designs are visible to anyone and are featured throughout\n          KitePaint.\n        </Tooltip>\n      </Label>\n      <Select\n        className=\"select-status\"\n        value={design.get(\"currentStatus\")}\n        onChange={e => onChangeStatus(e.target.value)}\n      >\n        {statusOptions.map(option => (\n          <option\n            key={option.value}\n            disabled={option.disabled}\n            value={option.value}\n          >\n            {option.label}\n          </option>\n        ))}\n      </Select>\n      <Label>\n        Primary Variation{\" \"}\n        <Tooltip>\n          The primary variation is the one that will be displayed in thumbnails\n          and will be selected by default in the editor or view pages for this\n          design.\n        </Tooltip>\n      </Label>\n      <Select\n        className=\"select-primary\"\n        value={design.get(\"variations\").find(variation => variation.primary).id}\n        onChange={e => onChangePrimary(e.target.value)}\n      >\n        {design.get(\"variations\").map(variation => (\n          <option key={variation.id} value={variation.id}>\n            {variation.name}\n          </option>\n        ))}\n      </Select>\n      <Button\n        className=\"submit-button\"\n        type=\"submit\"\n        isPrimary\n        disabled={isPending}\n      >\n        Save\n      </Button>\n    </StyleWrapper>\n  );\n};\n\nContent.propTypes = {\n  /** The design being modified */\n  design: PropTypes.instanceOf(Design),\n  /** Called when the form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n  /** Called when the cancel button is pressed */\n  onCancel: PropTypes.func.isRequired,\n  /** Called when the name changes. Is provided with the new name as the first parameter */\n  onChangeName: PropTypes.func.isRequired,\n  /** Called when the status changes. Is provided with the new status as the first parameter */\n  onChangeStatus: PropTypes.func.isRequired,\n  /** Called when the primary variation changes. Is provided with the name of\n   the new primary variation */\n  onChangePrimary: PropTypes.func.isRequired,\n  /** Disables the button if true */\n  isPending: PropTypes.bool.isRequired\n};\n\nexport { Content };\n\n/** A stateful modal that allows for changing settings of a design like Status\n and name */\nclass DesignSettingsModal extends React.Component {\n  static propTypes = {\n    /** The design being modified */\n    design: PropTypes.instanceOf(Design),\n    /** Called when the form is submitted. Is provided an object with the id,\n     name, and status of the design */\n    onSubmit: PropTypes.func.isRequired,\n    /** A function that returns renderable content. This is usually used to\n     render a button that triggers the modal to open. */\n    children: PropTypes.func.isRequired\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    this.state = {\n      /** Is the modal open? */\n      isOpen: false,\n      /** Are we processing the submission? */\n      isPending: false,\n      design: props.design\n    };\n  }\n\n  handleOpen = () => this.setState({ isOpen: true });\n  handleClose = () => this.setState({ isOpen: false });\n  handleChangeName = value =>\n    this.setState({\n      design: this.state.design.set(\"name\", value)\n    });\n  handleChangeStatus = value =>\n    this.setState({\n      design: this.state.design.set(\"status\", value)\n    });\n  handleChangePrimary = value => {\n    const variations = this.state.design.get(\"variations\").map(variation => {\n      if (variation.id === value) {\n        variation.primary = true;\n        return variation;\n      }\n      variation.primary = false;\n      return variation;\n    });\n    this.setState({\n      design: this.state.design.set(\"variations\", variations)\n    });\n  };\n\n  /** Handles submission by calling onSubmit with the relevant data and handling\n   the promise that it may return. */\n  handleSubmit = () => {\n    const request = this.props.onSubmit(this.state.design);\n    if (request && request.then) {\n      this.setState({ isPending: true });\n      request.then(() => {\n        this.setState({ isPending: false });\n        this.handleClose();\n      });\n      request.catch(() => {\n        this.setState({ isPending: false });\n        this.handleClose();\n      });\n    }\n    return request;\n  };\n\n  render() {\n    if (!this.props.design) {\n      return this.props.children({});\n    }\n    return (\n      <Modal\n        isOpen={this.state.isOpen}\n        onBackdropClick={this.handleClose}\n        modalContent={\n          <Content\n            design={this.state.design}\n            onCancel={this.handleClose}\n            onSubmit={this.handleSubmit}\n            onChangeName={this.handleChangeName}\n            onChangeStatus={this.handleChangeStatus}\n            onChangePrimary={this.handleChangePrimary}\n            isPending={this.state.isPending}\n          />\n        }\n      >\n        {this.props.children({\n          actions: {\n            open: this.handleOpen\n          }\n        })}\n      </Modal>\n    );\n  }\n}\n\nexport default DesignSettingsModal;\n","import { connect } from \"react-redux\";\nimport { UPDATE_DESIGN } from \"../redux/actions\";\nimport DesignSettingsModal from \"../components/DesignSettingsModal\";\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  onSubmit: UPDATE_DESIGN\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DesignSettingsModal);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Design from \"../../models/Design\";\nimport { Item as DropdownItem } from \"../../theme/Dropdown\";\nimport { P, Icon, ModalPrompt, Dropdown } from \"../../theme\";\nimport { getAppDimensions, getAssetUrl } from \"../../utils\";\nimport ShareModal from \"../ShareModal\";\nimport DesignSettingsModalContainer from \"../../containers/DesignSettingsModalContainer\";\n\nconst backgroundOptions = [\n  {\n    label: \"Default\",\n    value: null\n  },\n  {\n    label: \"Beach\",\n    value: getAssetUrl(\"/backgrounds/beach.jpg\")\n  },\n  {\n    label: \"Blue Sky\",\n    value: getAssetUrl(\"/backgrounds/blue-sky.jpg\")\n  },\n  {\n    label: \"Dark Sky\",\n    value: getAssetUrl(\"/backgrounds/dark-sky.jpg\")\n  },\n  {\n    label: \"Orange Sky\",\n    value: getAssetUrl(\"/backgrounds/orange-sky.jpg\")\n  },\n  {\n    label: \"Grass\",\n    value: getAssetUrl(\"/backgrounds/grass.jpg\")\n  },\n  {\n    label: \"Water\",\n    value: getAssetUrl(\"/backgrounds/water.jpg\")\n  }\n];\n\n/**\n * Overall styling for the toolbar\n */\nexport const StyleWrapper = styled.div`\n  background: ${props => props.theme.colors.grayDarker};\n  display: flex;\n  padding: 0 8px;\n  box-shadow: 0 0 2px 2px ${props => props.theme.colors.black};\n  position: relative;\n  z-index: 2;\n\n  .toolbar-item {\n    padding: 8px;\n    cursor: pointer;\n    transition: 0.4s background;\n    border-right: 1px solid ${props => props.theme.colors.grayDark};\n    white-space: nowrap;\n\n    &:first-of-type {\n      border-left: 1px solid ${props => props.theme.colors.grayDark};\n    }\n\n    &:hover {\n      background: ${props => props.theme.colors.black};\n    }\n    &[disabled] {\n      opacity: 0.5;\n      cursor: default;\n      background: none;\n    }\n  }\n`;\n\n/**\n * Provides the modals that can be accessed from the toolbar.\n * These need to be wrapped around the toolbar because if they are in a dropdown,\n * the modal will disappear when the dropdown auto closes.\n */\nexport const ModalWrapper = ({ children, design, onSave }) => (\n  <ModalPrompt\n    onSubmit={onSave}\n    message=\"To save your design, you must give it a name. What would you like to name your design?\"\n  >\n    {saveModal => (\n      <ShareModal design={design}>\n        {shareModal => (\n          <DesignSettingsModalContainer design={design}>\n            {designSettingsModal =>\n              children({\n                designSettingsModal,\n                saveModal,\n                shareModal\n              })\n            }\n          </DesignSettingsModalContainer>\n        )}\n      </ShareModal>\n    )}\n  </ModalPrompt>\n);\n\nModalWrapper.defaultProps = {\n  onSave: () => {}\n};\n\nModalWrapper.propTypes = {\n  children: PropTypes.func.isRequired,\n  design: PropTypes.instanceOf(Design),\n  onSave: PropTypes.func\n};\n\n/**\n * The toolbar displayed at the top of the editor to provide various actions.\n */\nclass Toolbar extends React.Component {\n  static propTypes = {\n    /** Should the undo button be disabled? */\n    undoDisabled: PropTypes.bool,\n    /** Should the redo button be disabled? */\n    redoDisabled: PropTypes.bool,\n    /** The design being edited */\n    design: PropTypes.instanceOf(Design),\n    /** Are outlines hidden? */\n    hideOutlines: PropTypes.bool,\n    /** Triggered when the save button is clicked */\n    onUpdate: PropTypes.func,\n    /** Triggered when the save as button is clicked */\n    onSave: PropTypes.func,\n    /** Triggered when the autofill button is clicked */\n    onAutofill: PropTypes.func,\n    /** Triggered when the reset button is clicked */\n    onReset: PropTypes.func,\n    /** Triggered when the hide outlines button is clicked */\n    onHideOutlines: PropTypes.func.isRequired,\n    /** Triggered when a background is selected. The background url is provided\n     as the first parameter */\n    onBackgroundChange: PropTypes.func.isRequired,\n    /** Triggered when the undo button is clicked. */\n    onUndo: PropTypes.func,\n    /** Triggered when the redo button is clicked. */\n    onRedo: PropTypes.func,\n    /** Should the settings button be visible? */\n    showSettings: PropTypes.bool\n  };\n\n  state = {\n    /** The number of items that are truncated due to the screen size */\n    truncationCount: 0\n  };\n\n  /** When the component mounts, take count of the items in the toolbar and\n   the position of their right edge so that we can evaluate for truncation, and\n   trigger truncation */\n  componentDidMount() {\n    if (!this.node) {\n      return;\n    }\n    this._indexActions();\n\n    // Determine the truncation count absed on the stored actionIndex\n    this._determineTruncationCount();\n\n    // Revise truncation when the window resizes.\n    window.addEventListener(\"resize\", this._determineTruncationCount);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this._determineTruncationCount);\n  }\n\n  /** A reference to the StyleWrapper element */\n  node = null;\n\n  /**\n   * An array of numbers where each number represents the right edge of a\n   * toolbar item.\n   */\n  actionIndex = [];\n\n  /** take count of the items in the toolbar and the position of their right\n   edge so that we can evaluate for truncation */\n  _indexActions = () => {\n    const actionIndex = [];\n\n    // Find all toolbar-items and push them into an array along with the x\n    // dimension of their right edge.\n    const items = this.node.querySelectorAll(\".toolbar-item\");\n    items.forEach(item => {\n      actionIndex.push(item.getBoundingClientRect().right);\n    });\n    this.actionIndex = actionIndex;\n  };\n\n  /** Sets truncationCount based on the window width and the stored right edge\n   position of each item in the toolbar */\n  _determineTruncationCount = () => {\n    const windowWidth = getAppDimensions().width;\n\n    // get the index of the first toolbar item that overflows the window\n    let truncationIndex;\n    this.actionIndex.find((actionEdge, index) => {\n      // Giving a 20px buffer\n      if (actionEdge > windowWidth - 20) {\n        truncationIndex = index;\n        return true;\n      }\n      return false;\n    });\n\n    if (!truncationIndex) {\n      // If there is no truncationIndex and no items are currently truncated\n      // just return\n      if (this.state.truncationCount === 0) {\n        return;\n      }\n\n      // If there is no truncation index, reset the truncationCount to 0\n      this.setState({\n        truncationCount: 0\n      });\n      return;\n    }\n\n    // Determine how many items should be truncated\n    const truncationCount = this.actionIndex.length - truncationIndex + 1;\n\n    // If we already have the right number of items truncated, return early\n    if (truncationCount === this.state.truncationCount) {\n      return;\n    }\n\n    // Update the truncationCount\n    this.setState({\n      truncationCount\n    });\n  };\n\n  render() {\n    return (\n      <ModalWrapper design={this.props.design} onSave={this.props.onSave}>\n        {dataWrapper => {\n          const actions = [];\n\n          // Save\n          if (this.props.onUpdate) {\n            actions.push({\n              name: \"save\",\n              content: (\n                <P\n                  className=\"testing_update toolbar-item\"\n                  isLight\n                  onClick={this.props.onUpdate}\n                >\n                  <Icon icon=\"save\" />\n                  <span className=\"label\"> Save</span>\n                </P>\n              ),\n              truncatedContent: (\n                <DropdownItem onClick={this.props.onUpdate}>\n                  <Icon icon=\"share\" />\n                  <span className=\"label\"> Share</span>\n                </DropdownItem>\n              )\n            });\n          }\n\n          // Save As\n          if (this.props.onSave) {\n            actions.push({\n              name: \"save-as\",\n              content: (\n                <P\n                  className=\"testing_save toolbar-item\"\n                  isLight\n                  // onClick={dataWrapper.saveModal.actions.open}\n                >\n                  <Icon icon=\"save\" />\n                  <span className=\"label\">\n                    {\" \"}\n                    {this.props.onUpdate ? \"Save As\" : \"Save\"}\n                  </span>\n                </P>\n              )\n            });\n          }\n\n          // Share\n          actions.push({\n            name: \"share\",\n            content: (\n              <P\n                className=\"toolbar-item\"\n                isLight\n                onClick={dataWrapper.shareModal.actions.open}\n              >\n                <Icon icon=\"share\" />\n                <span className=\"label\"> Share</span>\n              </P>\n            ),\n            truncatedContent: (\n              <DropdownItem onClick={dataWrapper.shareModal.actions.open}>\n                <Icon icon=\"share\" />\n                <span className=\"label\"> Share</span>\n              </DropdownItem>\n            )\n          });\n\n          // Undo\n          if (this.props.onUndo) {\n            actions.push({\n              name: \"undo\",\n              content: (\n                <P\n                  className=\"toolbar-item\"\n                  disabled={this.props.undoDisabled}\n                  isLight\n                  onClick={this.props.onUndo}\n                >\n                  <Icon icon=\"undo\" />\n                  <span className=\"label\"> Undo</span>\n                </P>\n              ),\n              truncatedContent: (\n                <DropdownItem\n                  disabled={this.props.undoDisabled}\n                  onClick={this.props.onUndo}\n                >\n                  <Icon icon=\"undo\" />\n                  <span className=\"label\"> Undo</span>\n                </DropdownItem>\n              )\n            });\n          }\n\n          // Redo\n          if (this.props.onRedo) {\n            actions.push({\n              name: \"redo\",\n              content: (\n                <P\n                  className=\"toolbar-item\"\n                  disabled={this.props.redoDisabled}\n                  isLight\n                  onClick={this.props.onRedo}\n                >\n                  <Icon icon=\"redo\" />\n                  <span className=\"label\"> Redo</span>\n                </P>\n              ),\n              truncatedContent: (\n                <DropdownItem\n                  disabled={this.props.redoDisabled}\n                  onClick={this.props.onRedo}\n                >\n                  <Icon icon=\"redo\" />\n                  <span className=\"label\"> Redo</span>\n                </DropdownItem>\n              )\n            });\n          }\n\n          // Background\n          actions.push({\n            name: \"background\",\n            content: (\n              <Dropdown\n                dropdownContent={dropdown => (\n                  <React.Fragment>\n                    {backgroundOptions.map(option => (\n                      <dropdown.components.Item\n                        key={option.value}\n                        onClick={() =>\n                          this.props.onBackgroundChange(option.value)\n                        }\n                      >\n                        {option.label}\n                      </dropdown.components.Item>\n                    ))}\n                  </React.Fragment>\n                )}\n              >\n                {dropdown => (\n                  <P\n                    className=\"toolbar-item\"\n                    isLight\n                    onClick={\n                      dropdown.props.isOpen\n                        ? dropdown.actions.close\n                        : dropdown.actions.open\n                    }\n                  >\n                    <Icon icon=\"image\" />\n                    <span className=\"label\"> Background</span>\n                  </P>\n                )}\n              </Dropdown>\n            ),\n            truncatedContent: (\n              <Dropdown\n                dropdownContent={dropdown => (\n                  <React.Fragment>\n                    {backgroundOptions.map(option => (\n                      <dropdown.components.Item\n                        key={option.value}\n                        onClick={() =>\n                          this.props.onBackgroundChange(option.value)\n                        }\n                      >\n                        {option.label}\n                      </dropdown.components.Item>\n                    ))}\n                  </React.Fragment>\n                )}\n              >\n                {dropdown => (\n                  <DropdownItem\n                    onClick={\n                      dropdown.props.isOpen\n                        ? dropdown.actions.close\n                        : dropdown.actions.open\n                    }\n                  >\n                    <Icon icon=\"image\" />\n                    <span className=\"label\"> Background</span>\n                  </DropdownItem>\n                )}\n              </Dropdown>\n            )\n          });\n\n          // Hide Outlines\n          actions.push({\n            name: \"hide-outlines\",\n            content: (\n              <P\n                className=\"toolbar-item\"\n                isLight\n                onClick={this.props.onHideOutlines}\n              >\n                <Icon icon={this.props.hideOutlines ? \"eye\" : \"eye-slash\"} />\n                <span className=\"label\">\n                  {\" \"}\n                  {this.props.hideOutlines ? \"Show\" : \"Hide\"} Outlines\n                </span>\n              </P>\n            ),\n            truncatedContent: (\n              <DropdownItem onClick={this.props.onHideOutlines}>\n                <Icon icon={this.props.hideOutlines ? \"eye\" : \"eye-slash\"} />\n                <span className=\"label\">\n                  {\" \"}\n                  {this.props.hideOutlines ? \"Show\" : \"Hide\"} Outlines\n                </span>\n              </DropdownItem>\n            )\n          });\n\n          // Autofill\n          if (this.props.onAutofill) {\n            actions.push({\n              name: \"autofill\",\n              content: (\n                <P\n                  className=\"testing_autofill toolbar-item\"\n                  isLight\n                  onClick={this.props.onAutofill}\n                >\n                  <Icon icon=\"magic\" />\n                  <span className=\"label\"> Autofill</span>\n                </P>\n              ),\n              truncatedContent: (\n                <DropdownItem onClick={this.props.onAutofill}>\n                  <Icon icon=\"magic\" />\n                  <span className=\"label\"> Autofill</span>\n                </DropdownItem>\n              )\n            });\n          }\n\n          // Reset\n          if (this.props.onReset) {\n            actions.push({\n              name: \"reset\",\n              content: (\n                <P\n                  className=\"testing_reset toolbar-item\"\n                  isLight\n                  onClick={this.props.onReset}\n                >\n                  <Icon icon=\"eraser\" />\n                  <span className=\"label\"> Reset</span>\n                </P>\n              ),\n              truncatedContent: (\n                <DropdownItem onClick={this.props.onReset}>\n                  <Icon icon=\"eraser\" />\n                  <span className=\"label\"> Reset</span>\n                </DropdownItem>\n              )\n            });\n          }\n\n          // Design Settings\n          if (this.props.design && this.props.showSettings) {\n            actions.push({\n              name: \"settings\",\n              content: (\n                <P\n                  className=\"toolbar-item\"\n                  isLight\n                  onClick={dataWrapper.designSettingsModal.actions.open}\n                >\n                  <Icon icon=\"cog\" />\n                  <span className=\"label\"> Settings</span>\n                </P>\n              ),\n              truncatedContent: (\n                <DropdownItem\n                  onClick={dataWrapper.designSettingsModal.actions.open}\n                >\n                  <Icon icon=\"cog\" />\n                  <span className=\"label\"> Settings</span>\n                </DropdownItem>\n              )\n            });\n          }\n\n          const nonTruncatedActions = actions.slice(\n            0,\n            actions.length - this.state.truncationCount\n          );\n          const truncatedActions = actions.slice(\n            actions.length - this.state.truncationCount\n          );\n          return (\n            <StyleWrapper ref={node => (this.node = node)}>\n              {nonTruncatedActions.map(action => (\n                <React.Fragment key={action.name}>\n                  {action.content}\n                </React.Fragment>\n              ))}\n              {!!truncatedActions.length && (\n                <Dropdown\n                  className=\"testing_truncation-dropdown\"\n                  dropdownContent={() =>\n                    truncatedActions.map(action => (\n                      <React.Fragment key={action.name}>\n                        {action.truncatedContent}\n                      </React.Fragment>\n                    ))\n                  }\n                >\n                  {dropdown => (\n                    <P\n                      className=\"toolbar-item\"\n                      isLight\n                      onClick={\n                        dropdown.props.isOpen\n                          ? dropdown.actions.close\n                          : dropdown.actions.open\n                      }\n                    >\n                      <Icon icon=\"ellipsis-h\" />\n                    </P>\n                  )}\n                </Dropdown>\n              )}\n            </StyleWrapper>\n          );\n        }}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default Toolbar;\n","import styled from \"styled-components\";\n\n/**\n * Creates a circle that represents a color on the color palette.\n *\n * Provide a color prop to set the color.\n */\nconst ColorTile = styled.div`\n  display: block;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background-color: ${props => props.color || \"#ffffff\"};\n  border: 1px solid ${props => props.theme.colors.gray};\n`;\n\nexport default ColorTile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { appliedColorsShape } from \"../../containers/EditorContainer\";\n\nconst StyledDiv = styled.div`\n  ${props =>\n    props.hideOutlines\n      ? css`\n          svg * {\n            stroke-width: 0;\n          }\n        `\n      : null};\n`;\n\n/**\n * Renders the provided SVG and uses the colorMap to apply a fill color to verious elements\n */\nclass ColorableSvg extends React.Component {\n  static propTypes = {\n    svg: PropTypes.string.isRequired,\n    colorMap: appliedColorsShape.isRequired,\n    hideOutlines: PropTypes.bool\n  };\n\n  componentDidMount() {\n    this.applyColors();\n  }\n\n  componentDidUpdate() {\n    this.applyColors();\n  }\n\n  /**\n   * The colors that were originally used for each panel.\n   */\n  originalColors = {};\n\n  /**\n   * A DOM reference to the div containing the SVG\n   */\n  node = null;\n\n  /**\n   * Applies the colorMap to the rendered SVG\n   */\n  applyColors = () => {\n    const { colorMap } = this.props;\n    this.node.querySelectorAll(`[data-id]`).forEach(panel => {\n      const panelId = panel.getAttribute(\"data-id\");\n\n      // Build up a list of original colors if we haven't already, so that we\n      // know what to fall back to when the colorMap is empty.\n      if (!this.originalColors[panelId]) {\n        this.originalColors[panelId] = panel.getAttribute(\"fill\");\n      }\n      const color = colorMap[panelId]\n        ? colorMap[panelId].color\n        : this.originalColors[panelId];\n      panel.setAttribute(\"fill\", color);\n    });\n  };\n\n  render() {\n    return (\n      <StyledDiv\n        hideOutlines={this.props.hideOutlines}\n        ref={node => (this.node = node)}\n        dangerouslySetInnerHTML={{ __html: this.props.svg }}\n      />\n    );\n  }\n}\n\nexport default ColorableSvg;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Manufacturer from \"../../models/Manufacturer\";\nimport Product from \"../../models/Product\";\nimport Design from \"../../models/Design\";\nimport { productAppliedColorsShape } from \"../../containers/EditorContainer\";\nimport { Icon, FillToBottom, Sidebar as SidebarUI } from \"../../theme\";\nimport { getAssetUrl } from \"../../utils\";\nimport ManufacturerLogo from \"../ManufacturerLogo\";\nimport ColorTile from \"./ColorTile\";\nimport ColorableSvg from \"./ColorableSvg\";\n\n/**\n * A styled preview of a variation's svg\n */\nconst VariationPreview = styled.div`\n  display: block;\n  width: 24px;\n  height: 24px;\n\n  svg {\n    margin-top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const StyledSidebar = styled(SidebarUI)`\n  width: 60px;\n\n  .color-tile,\n  .manufacturer-logo,\n  .variation-preview {\n    margin: 0 auto;\n  }\n\n  .color-label,\n  .variation-label,\n  .colors-heading,\n  .manufacturer-info,\n  .design-heading {\n    display: none;\n  }\n\n  ${props => props.theme.media.mediaMd} {\n    width: 175px;\n    .color-label,\n    .variation-label {\n      display: inline;\n    }\n    .colors-heading,\n    .manufacturer-info,\n    .design-heading {\n      display: block;\n    }\n    .color-tile,\n    .manufacturer-logo,\n    .variation-preview {\n      margin: 0;\n    }\n  }\n`;\n\n/**\n * The sidebar displayed when editing/creating a new design\n */\nconst Sidebar = ({\n  appliedColors,\n  manufacturer,\n  product,\n  design,\n  selectedVariation,\n  selectedColor,\n  onColorSelect,\n  onVariationSelect\n}) => (\n  <StyledSidebar>\n    {sidebar => (\n      <React.Fragment>\n        <sidebar.components.Item\n          className=\"testing_manufacturer\"\n          isLight\n          as={product.get(\"url\") || manufacturer.get(\"website\") ? \"a\" : \"div\"}\n          href={product.get(\"url\") || manufacturer.get(\"website\")}\n          target=\"_blank\"\n          hasAction={!!(product.get(\"url\") || manufacturer.get(\"website\"))}\n        >\n          <ManufacturerLogo\n            className=\"manufacturer-logo\"\n            size={32}\n            noMargin\n            src={getAssetUrl(`/logos/${manufacturer.get(\"logo\")}`)}\n          />\n          <div className=\"manufacturer-info\">\n            {product.get(\"name\")}\n            <br />\n            <small>by {manufacturer.get(\"name\")}</small>\n          </div>\n        </sidebar.components.Item>\n        {design && (\n          <sidebar.components.Heading\n            className=\"testing_design design-heading\"\n            isLight\n          >\n            {design.get(\"name\")}\n          </sidebar.components.Heading>\n        )}\n        {product.get(\"variations\").map(variation => (\n          <sidebar.components.Item\n            className=\"testing_variation\"\n            isLight\n            hasAction\n            isActive={variation.id === selectedVariation}\n            key={variation.id}\n            onClick={() => onVariationSelect(variation.id)}\n          >\n            <VariationPreview className=\"variation-preview\">\n              <ColorableSvg\n                svg={variation.svg}\n                colorMap={appliedColors[variation.id] || {}}\n              />\n            </VariationPreview>\n            <span className=\"variation-label\"> {variation.name}</span>\n          </sidebar.components.Item>\n        ))}\n        <sidebar.components.Heading isLight className=\"colors-heading\">\n          <Icon icon=\"palette\" /> Colors\n        </sidebar.components.Heading>\n        <FillToBottom offset={33} strict minHeight={300}>\n          {product.get(\"colors\").map(color => (\n            <sidebar.components.Item\n              className=\"testing_color\"\n              isLight\n              hasAction\n              key={color.name}\n              isActive={color.name === selectedColor}\n              onClick={() => onColorSelect(color.name)}\n            >\n              <ColorTile color={color.color} className=\"color-tile\" />\n              <span className=\"color-label\"> {color.name}</span>\n            </sidebar.components.Item>\n          ))}\n        </FillToBottom>\n      </React.Fragment>\n    )}\n  </StyledSidebar>\n);\n\nSidebar.propTypes = {\n  appliedColors: productAppliedColorsShape.isRequired,\n  /**\n   * The manufacturer that creates the product being edited.\n   */\n  manufacturer: PropTypes.instanceOf(Manufacturer).isRequired,\n  /**\n   * The produt that is being edited\n   */\n  product: PropTypes.instanceOf(Product).isRequired,\n  /**\n   * The pre-existing design that is being edited, if any\n   */\n  design: PropTypes.instanceOf(Design),\n  /**\n   * The name of the variation that is currently selected\n   */\n  selectedVariation: PropTypes.string.isRequired,\n  /**\n   * The name of the color that is currently selected\n   */\n  selectedColor: PropTypes.string.isRequired,\n  /**\n   * Called when a color is selected.\n   * Is provided with the color name as the first parameter.\n   */\n  onColorSelect: PropTypes.func.isRequired,\n  /**\n   * Called when a variation is selected.\n   * Is provided with the variation id as the first parameter.\n   */\n  onVariationSelect: PropTypes.func.isRequired\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { appliedColorsShape } from \"../../containers/EditorContainer\";\nimport ColorableSvg from \"./ColorableSvg\";\n\nexport const StyleWrapper = styled.div`\n  flex-grow: 1;\n  ${props => props.theme.patterns.transparencyBackground};\n  padding: 16px;\n  ${props =>\n    props.background\n      ? css`\n          background: url(${props.background});\n          background-size: cover;\n          background-position: center;\n        `\n      : null};\n\n  > div {\n    min-height: 50vh;\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n  svg {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    max-width: 100%;\n    max-height: 100%;\n\n    *[data-id] {\n      cursor: ${props => (props.isReadOnly ? \"default\" : \"pointer\")};\n    }\n  }\n`;\n\n/**\n * Canvas is a UI component for the editing area. It displays a product and allows the user to click\n * on enabled panels.\n */\nclass Canvas extends React.Component {\n  static propTypes = {\n    background: PropTypes.string,\n    hideOutlines: PropTypes.bool,\n    /**\n     * The product SVG to be rendered and interacted with. Colorable elements (path, polygon, g)\n     * should be given a data-id attribute. That is used to indicate that the panel/group can be\n     * colored, and it is also used to indicate the coorelation between panels/groups in different\n     * variations (used for autofill).\n     *\n     * A panel/group may also have a data-whitelist property that contains a comma separated list of\n     * color names that may be used on that panel/group.\n     */\n    svg: PropTypes.string.isRequired,\n    /**\n     * Called when a colorable panel or group is clicked. Is provided with the data-id value as the\n     * first parameter.\n     */\n    onClick: PropTypes.func,\n    /**\n     * The currently selected color. This is needed to prevent triggering onClick when a panel/group\n     * with data-whitelist is clicked and the current color is not in that whitelist.\n     */\n    currentColor: PropTypes.string,\n    /**\n     * A map of colors currently applied to the svg\n     */\n    colorMap: appliedColorsShape,\n    /**\n     * Indicates that the canvas is read-only. Will not fire onClick events.\n     */\n    isReadOnly: PropTypes.bool\n  };\n  static defaultProps = {\n    onClick: () => {},\n    colorMap: {},\n    currentColor: \"\"\n  };\n\n  /**\n   * Handle click events by deciding if it is a relevant item that was clicked.\n   * @param  {Object} event The DOM click event\n   */\n  handleClick = event => {\n    // Checks if the the currentColor can be applied given the content or absence of a whitelist.\n    const checkWhitelist = whitelist => {\n      return (\n        !whitelist ||\n        !whitelist.length ||\n        whitelist.includes(this.props.currentColor.toLowerCase())\n      );\n    };\n\n    // Parses a string form the data-whitelist property into an array of lowercase,trimmed values\n    const processWhitelist = whitelistString => {\n      return whitelistString\n        .split(\",\")\n        .map(color => color.trim().toLowerCase())\n        .filter(color => !!color);\n    };\n\n    // Get the data-id attribute from the target.\n    const targetId = event.target.getAttribute(\"data-id\");\n    if (targetId) {\n      // Get the data-whitelist attribute which contains a comma separated list of color names that can\n      // be applied\n      const whitelistString = event.target.getAttribute(\"data-whitelist\") || \"\";\n      const whitelist = processWhitelist(whitelistString);\n\n      // If the whitelist is empty or it contains the current color, trigger onClick\n      if (checkWhitelist(whitelist)) {\n        this.props.onClick(targetId);\n        return;\n      }\n      return;\n    }\n\n    // If there is no parent element, return\n    if (!event.target.parentElement) {\n      return;\n    }\n\n    // If there was no id on the target, check the parent to see if it is colored as a group\n    const parentGroupId = event.target.parentElement.getAttribute(\"data-id\");\n\n    // If there's no group id, then there's nothing to color.\n    if (!parentGroupId) {\n      return;\n    }\n\n    // Get the whitelist of colors for the group\n    const whitelistString =\n      event.target.parentElement.getAttribute(\"data-whitelist\") || \"\";\n    const whitelist = processWhitelist(whitelistString);\n\n    // Call onClick if the current color is in the whitelist or if the whitelist is empty\n    if (checkWhitelist(whitelist)) {\n      this.props.onClick(parentGroupId);\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <StyleWrapper\n        onClick={this.props.isReadOnly ? () => {} : this.handleClick}\n        isReadOnly={this.props.isReadOnly}\n        background={this.props.background}\n      >\n        <ColorableSvg\n          hideOutlines={this.props.hideOutlines}\n          svg={this.props.svg}\n          colorMap={this.props.colorMap}\n        />\n      </StyleWrapper>\n    );\n  }\n}\n\nexport default Canvas;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Icon, Modal, H3, P, ModalClose } from \"../../theme\";\n\nexport const StyleWrapper = styled.div`\n  position: fixed;\n  bottom: 50px;\n  right: 8px;\n  background: ${props => props.theme.colors.white};\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  text-align: center;\n  cursor: pointer;\n  line-height: 32px;\n  cursor: pointer;\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\n/**\n * Displays an info icon that opens a modal when clicked. The modal contains\n * the provided notes.\n */\nclass ProductNotes extends React.Component {\n  static propTypes = {\n    /** The notes to be displayed in the modal */\n    notes: PropTypes.arrayOf(PropTypes.string).isRequired\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  handleOpen = () => this.setState({ isOpen: true });\n  handleClose = () => this.setState({ isOpen: false });\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.state.isOpen}\n        onBackdropClick={this.handleClose}\n        modalContent={\n          <React.Fragment>\n            <ModalClose onClick={this.handleClose} />\n            <H3>Notes:</H3>\n            {this.props.notes.map(\n              (note, index) => note.trim() && <P key={note + index}>{note}</P>\n            )}\n          </React.Fragment>\n        }\n      >\n        <StyleWrapper onClick={this.handleOpen}>\n          <Icon icon=\"info\" />\n        </StyleWrapper>\n      </Modal>\n    );\n  }\n}\nexport default ProductNotes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport CreateNewContainer from \"../../containers/CreateNewContainer\";\nimport EditorContainer from \"../../containers/EditorContainer\";\nimport UserContainer from \"../../containers/UserContainer\";\nimport { PageLoader } from \"../../theme\";\nimport Toolbar from \"../editor/Toolbar\";\nimport Sidebar from \"../editor/Sidebar\";\nimport Canvas from \"../editor/Canvas\";\nimport ProductNotes from \"../editor/ProductNotes\";\nimport ErrorPage from \"../ErrorPage\";\n\nconst PageLayout = styled.div`\n  display: flex;\n  justify-content: stretch;\n  position: relative;\n\n  .product-notes {\n    position: absolute;\n    background: rgba(0, 0, 0, 0.8);\n    bottom: 0;\n    right: 0;\n    padding: 8px;\n    max-width: calc(100% - 200px);\n  }\n`;\n\n/**\n * A coordinating component that builds the CreatNew page.\n * The CreateNew page is provided a productId from the router, and is intended to create a new\n * design based on that product.\n */\nconst CreateNew = ({ match }) => (\n  <CreateNewContainer productId={match.params.productId}>\n    {createNewData => {\n      if (createNewData.props.isLoading) {\n        return <PageLoader />;\n      }\n      if (!createNewData.props.product) {\n        return <ErrorPage />;\n      }\n      return (\n        <EditorContainer product={createNewData.props.product}>\n          {editorData => (\n            <React.Fragment>\n              <UserContainer>\n                {userData => (\n                  <Toolbar\n                    hideOutlines={editorData.props.hideOutlines}\n                    onAutofill={editorData.actions.autofill}\n                    onBackgroundChange={editorData.actions.changeBackground}\n                    onHideOutlines={editorData.actions.toggleHideOutlines}\n                    onSave={name => {\n                      editorData.actions.save({\n                        name,\n                        user: userData.props.isLoggedIn\n                          ? userData.props.id\n                          : \"0\"\n                      });\n                    }}\n                    onRedo={editorData.actions.redo}\n                    onReset={editorData.actions.reset}\n                    onUndo={editorData.actions.undo}\n                    redoDisabled={!editorData.props.canRedo}\n                    undoDisabled={!editorData.props.canUndo}\n                  />\n                )}\n              </UserContainer>\n              <PageLayout>\n                <Sidebar\n                  product={createNewData.props.product}\n                  manufacturer={createNewData.props.manufacturer}\n                  selectedVariation={editorData.props.currentVariation.id}\n                  selectedColor={editorData.props.currentColor.name}\n                  onColorSelect={editorData.actions.selectColor}\n                  onVariationSelect={editorData.actions.selectVariation}\n                  appliedColors={editorData.props.appliedColors}\n                />\n                <Canvas\n                  background={editorData.props.background}\n                  hideOutlines={editorData.props.hideOutlines}\n                  colorMap={editorData.props.currentVariationColors}\n                  svg={editorData.props.currentVariation.svg}\n                  onClick={editorData.actions.applyColor}\n                  currentColor={editorData.props.currentColor.name}\n                />\n                {createNewData.props.product.get(\"notes\") &&\n                  !!createNewData.props.product.get(\"notes\").length && (\n                    <ProductNotes\n                      notes={createNewData.props.product.get(\"notes\")}\n                    />\n                  )}\n              </PageLayout>\n            </React.Fragment>\n          )}\n        </EditorContainer>\n      );\n    }}\n  </CreateNewContainer>\n);\n\nCreateNew.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      productId: PropTypes.string.isRequired\n    })\n  })\n};\n\nexport default CreateNew;\n","import { handleActions } from \"redux-actions\";\nimport { fromJS } from \"immutable\";\nimport {\n  GET_DESIGNS,\n  GET_DESIGN,\n  DELETE_DESIGN,\n  UPDATE_DESIGN\n} from \"../actions\";\n\nexport const defaultState = fromJS({});\n\n/**\n * The reducer managing retrieved designs.\n */\nexport default handleActions(\n  {\n    [GET_DESIGNS.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      const designsById = data.reduce((accumulated, design) => {\n        accumulated[design.get(\"id\")] = design;\n        return accumulated;\n      }, {});\n      return state.merge(designsById);\n    },\n    [GET_DESIGN.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      if (!data || !data.get) {\n        return state;\n      }\n      return state.set(data.get(\"id\"), data);\n    },\n    [DELETE_DESIGN.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      const deletedId = data.id;\n      return state.delete(deletedId);\n    },\n    [UPDATE_DESIGN.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      if (!data || !data.get) {\n        return state;\n      }\n      const id = data.get(\"id\");\n      return state.set(id, data);\n    }\n  },\n  defaultState\n);\n\nconst sortNewestToOldest = (designA, designB) => {\n  const aId = designA.get(\"updatedDate\");\n  const bId = designB.get(\"updatedDate\");\n  if (aId > bId) {\n    return -1;\n  }\n  if (aId < bId) {\n    return 1;\n  }\n  return 0;\n};\n\n/**\n * Get the x most recent designs.\n * @param  {Map} state\n * @param {Number} count The number of designs to retrieve\n * @return {Design[]} an array of designs\n */\nexport const getRecentDesigns = (state, count) => {\n  const designs = state.get(\"designs\");\n  return designs\n    .filter(design => design.get(\"isPublic\"))\n    .sort(sortNewestToOldest)\n    .toList()\n    .toJS()\n    .slice(0, count);\n};\n\n/**\n * Get designs created by the specified user\n * @param  {Map} state\n * @param  {Object[]} userId The ID of the user\n * @return {Design[]}\n */\nexport const getDesignsByUser = (state, userId) => {\n  const designs = state.get(\"designs\");\n  return designs\n    .filter(design => design.get(\"user\") === userId)\n    .sort(sortNewestToOldest)\n    .toList()\n    .toJS();\n};\n\n/**\n * Get a design by ID\n * @param  {Map} state\n * @param  {String} id The ID of the design to retrieve\n * @return {Design} The design\n */\nexport const getDesignById = (state, id) => {\n  const design = state.getIn([\"designs\", id]);\n  return design || null;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getRecentDesigns } from \"../redux/modules/designs\";\nimport { getProductsWithIndex } from \"../redux/modules/products\";\nimport { getManufacturersWithIndex } from \"../redux/modules/manufacturers\";\nimport { GET_DESIGNS, GET_PRODUCTS, GET_MANUFACTURERS } from \"../redux/actions\";\nimport Design from \"../models/Design\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport { makeCancelable } from \"../utils\";\n\nconst PAGE_SIZE = 50;\n\n/**\n * Manages pagination for the DesignsContainer\n */\nexport class Counter extends React.Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    count: 0\n  };\n\n  /**\n   * Increment the count by the provided page size\n   * @param  {Number} pageSize\n   */\n  updateCount = pageSize => {\n    const count = this.state.count;\n    this.setState({\n      count: count + pageSize\n    });\n  };\n\n  render() {\n    return this.props.children({\n      actions: {\n        updateCount: this.updateCount\n      },\n      props: {\n        count: this.state.count\n      }\n    });\n  }\n}\n\nexport class Data extends React.Component {\n  static propTypes = {\n    /** Indicates how many items should be loaded for sake of pagination. Provided as a prop so it can be provided in mapDispatchToProps. */\n    loadedCount: PropTypes.number.isRequired,\n    /** Called after each request for designs to increase the\n     loadedCount. Is provided with the amount to increase the count\n     by as the first param.*/\n    onChangeLoadedCount: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retieval of the user's designs. Provided by Redux.\n     */\n    onFetchDesigns: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retrieval of products. Provided by Redux.\n     */\n    onFetchProducts: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retireval of manufacturers. Provided by Redux.\n     */\n    onFetchManufacturers: PropTypes.func.isRequired,\n    /**\n     * The designs created by the current user. Provided by Redux.\n     */\n    designs: PropTypes.arrayOf(PropTypes.instanceOf(Design)).isRequired,\n    /**\n     * All of the products, indexed by ID. Provided by Redux.\n     */\n    products: PropTypes.objectOf(PropTypes.instanceOf(Product)).isRequired,\n    /**\n     * All the manufacturers, indexed by ID. Provided by Redux.\n     */\n    manufacturers: PropTypes.objectOf(PropTypes.instanceOf(Manufacturer))\n      .isRequired,\n    /**\n     * A function that renders content.\n     */\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    /**\n     *\n     * @type {Boolean}\n     */\n    isLoading: true,\n    hasMore: true\n  };\n\n  /**\n   * Fetches the designs. Fetches more designs each time it is\n   * called.\n   * Retrurns a Promise that is already cancelable.\n   *\n   * @param {Boolean} [setLoading=true] If true, will toggle isLoading on state.\n   * @return {Promise}\n   */\n  _fetchDesigns = (setLoading = true) => {\n    if (setLoading) {\n      this.setState({ isLoading: true });\n    }\n    const request = makeCancelable(\n      this.props.onFetchDesigns(\n        {\n          limit: `${this.props.loadedCount}, ${this.props.loadedCount +\n            PAGE_SIZE}`,\n          publicOnly: true\n        },\n        false // dont cache this request\n      )\n    );\n    request.promise\n      .then(response => {\n        // Get the number of items returned\n        const count = response.data.length;\n\n        this.setState({\n          // The API will return all of the items so far. If it\n          // returned fewer than the previous count + the page size,\n          // then there are no more items to retrieve.\n          hasMore: count >= this.props.loadedCount + PAGE_SIZE\n        });\n        this.props.onChangeLoadedCount(count);\n\n        if (setLoading) {\n          this.setState({\n            isLoading: false\n          });\n        }\n      })\n      .catch(() => {});\n    this.cancelablePromises.push(request);\n    return request.promise;\n  };\n\n  componentDidMount() {\n    // fetch designs, products, and manufacturers\n    const designRequest = this._fetchDesigns(false);\n    const productRequest = makeCancelable(this.props.onFetchProducts());\n    const manufacturerRequest = makeCancelable(\n      this.props.onFetchManufacturers()\n    );\n\n    this.cancelablePromises.push(productRequest);\n    this.cancelablePromises.push(manufacturerRequest);\n\n    Promise.all([\n      designRequest,\n      productRequest.promise,\n      manufacturerRequest.promise\n    ])\n      .then(() => {\n        this.setState({\n          isLoading: false\n        });\n      })\n      .catch(responses => {\n        if (responses[0].isCanceled) {\n          return;\n        }\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  cancelablePromises = [];\n\n  render() {\n    return this.props.children({\n      actions: {\n        loadMore: this._fetchDesigns\n      },\n      props: {\n        hasMore: this.state.hasMore,\n        isLoading: this.state.isLoading,\n        designs: this.props.designs,\n        products: this.props.products,\n        manufacturers: this.props.manufacturers\n      }\n    });\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  designs: getRecentDesigns(state, props.loadedCount),\n  products: getProductsWithIndex(state),\n  manufacturers: getManufacturersWithIndex(state)\n});\n\nconst mapDispatchToProps = {\n  onFetchDesigns: GET_DESIGNS,\n  onFetchProducts: GET_PRODUCTS,\n  onFetchManufacturers: GET_MANUFACTURERS\n};\n\nconst DataConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Data);\n\n/**\n * Retrieves and manages public designs with pagination\n */\nconst DesignsContainer = ({ children }) => (\n  <Counter>\n    {counter => (\n      <DataConnected\n        loadedCount={counter.props.count}\n        onChangeLoadedCount={counter.actions.updateCount}\n      >\n        {data => children(data)}\n      </DataConnected>\n    )}\n  </Counter>\n);\n\nDesignsContainer.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nexport default DesignsContainer;\n","import React from \"react\";\nimport DesignsContainer from \"../../containers/DesignsContainer\";\nimport { Button, Loading, Spacer, H1, P } from \"../../theme\";\nimport RecentDesigns from \"../RecentDesigns\";\n\nconst Designs = () => (\n  <Spacer top=\"md\" right=\"md\" left=\"md\" bottom=\"md\">\n    <React.Fragment>\n      <H1>Public Designs</H1>\n      <Spacer bottom=\"md\" />\n      <P>\n        Designs that were made by other KitePaint users and are set to public.\n      </P>\n      <DesignsContainer>\n        {designs => (\n          <React.Fragment>\n            {designs.props.isLoading && (\n              <Spacer top=\"md\" bottom=\"md\">\n                <Loading />\n              </Spacer>\n            )}\n            {/* <RecentDesigns\n              designs={designs.props.designs}\n              products={designs.props.products}\n              manufacturers={designs.props.manufacturers}\n              cta={\n                designs.props.hasMore && (\n                  <Button\n                    disabled={designs.props.isLoading}\n                    onClick={designs.actions.loadMore}\n                    isPrimary\n                    isBlock\n                  >\n                    Load More\n                  </Button>\n                )\n              }\n            /> */}\n          </React.Fragment>\n        )}\n      </DesignsContainer>\n    </React.Fragment>\n  </Spacer>\n);\n\nexport default Designs;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Design from \"../models/Design\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport { P } from \"../theme\";\nimport { getAssetUrl } from \"../utils\";\nimport Svg from \"./Svg\";\nimport ManufacturerLogo from \"./ManufacturerLogo\";\n\nconst StyleWrapper = styled.div`\n  padding: 16px;\n  > .designs {\n    display: flex;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n  }\n  .design-preview {\n    width:200px\n    height: 200px;\n    flex-shrink: 0;\n    margin: 8px;\n    border: 1px solid ${props => props.theme.colors.gray};\n    border-radius: 4px;\n    ${props => props.theme.patterns.transparencyBackground};\n\n    > svg {\n      position: relative;\n      top: 50%;\n      transform: translateY(-50%) rotate(45deg);\n    }\n  }\n  > .cta {\n    max-width: 400px;\n    margin: 0 auto;\n  }\n  .design-name {\n    position: absolute;\n    bottom: 10%;\n    left: 0;\n    padding: 4px;\n    background: rgba(0,0,0,.8);\n    transition: .5s transform;\n  }\n  .design-wrapper {\n    position: relative;\n    overflow: hidden;\n    cursor: pointer;\n  }\n  .logo {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n`;\n\n/**\n * The banner displaying the recently created public designs.\n */\nconst RecentDesigns = ({ designs, products, manufacturers, cta }) => {\n  if (!products || !manufacturers) {\n    return null;\n  }\n  return (\n    <StyleWrapper>\n      <div className=\"designs\">\n        {designs.map(design => {\n          const product = products[design.get(\"product\")];\n          const manufacturer = manufacturers[product.get(\"manufacturer\")];\n          return (\n            <Link\n              key={design.get(\"id\")}\n              className=\"design-wrapper\"\n              to={`/view/${design.get(\"id\")}`}\n            >\n              <Svg\n                className=\"design-preview\"\n                svg={\n                  design.get(\"variations\").find(variation => variation.primary)\n                    .svg\n                }\n              />\n              <P isLight className=\"design-name\">\n                {design.get(\"name\")}\n              </P>\n              <ManufacturerLogo\n                className=\"logo\"\n                src={getAssetUrl(`/logos/${manufacturer.get(\"logo\")}`)}\n                noMargin\n                size={45}\n              />\n            </Link>\n          );\n        })}\n      </div>\n      {cta && <div className=\"cta\">{cta}</div>}\n    </StyleWrapper>\n  );\n};\n\nRecentDesigns.propTypes = {\n  /**\n   * The designs to be displayed\n   */\n  designs: PropTypes.arrayOf(PropTypes.instanceOf(Design)).isRequired,\n  manufacturers: PropTypes.objectOf(PropTypes.instanceOf(Manufacturer))\n    .isRequired,\n  products: PropTypes.objectOf(PropTypes.instanceOf(Product)).isRequired,\n  cta: PropTypes.node\n};\n\nexport default RecentDesigns;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../redux/modules/user\";\nimport { getDesignById } from \"../redux/modules/designs\";\nimport { getProductById } from \"../redux/modules/products\";\nimport { getManufacturerByProductId } from \"../redux/modules/manufacturers\";\nimport { GET_DESIGN, GET_PRODUCTS, GET_MANUFACTURERS } from \"../redux/actions\";\nimport Design from \"../models/Design\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport { makeCancelable } from \"../utils\";\n\n/**\n * Provides information about a specific product.\n */\nexport class EditContainer extends React.Component {\n  static propTypes = {\n    /**\n     * The ID of the design to get information about.\n     */\n    designId: PropTypes.string.isRequired,\n    /**\n     * The design being edited\n     */\n    design: PropTypes.instanceOf(Design),\n    /**\n     * The product. Provided by redux.\n     */\n    product: PropTypes.instanceOf(Product),\n    /**\n     * The manufactuer of the product. Provided by redux.\n     */\n    manufacturer: PropTypes.instanceOf(Manufacturer),\n    /**\n     * The currently logged in user\n     */\n    user: PropTypes.shape({\n      id: PropTypes.string\n    }),\n    /**\n     * A function to request the design be fetched. Provided by redux.\n     */\n    onRequestDesign: PropTypes.func.isRequired,\n    /**\n     * A function to request the product be fetched. Provided by redux.\n     */\n    onRequestProduct: PropTypes.func.isRequired,\n    /**\n     * A function to request the manufacturer of the product be fetched. Provided by redux.\n     */\n    onRequestManufacturer: PropTypes.func.isRequired,\n    /**\n     * A function that returns the content to be rendered.\n     */\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    isLoading: true\n  };\n\n  componentDidMount() {\n    // Requesting data used on the edit page\n    const productRequest = makeCancelable(this.props.onRequestProduct());\n    const manufacturerRequest = makeCancelable(\n      this.props.onRequestManufacturer()\n    );\n    const designRequest = makeCancelable(\n      this.props.onRequestDesign(this.props.designId)\n    );\n    this.cancelablePromises.push(productRequest);\n    this.cancelablePromises.push(manufacturerRequest);\n    this.cancelablePromises.push(designRequest);\n    Promise.all([\n      productRequest.promise,\n      manufacturerRequest.promise,\n      designRequest.promise\n    ])\n      .then(() => {\n        this.setState({\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  cancelablePromises = [];\n\n  render() {\n    // If the design was not made by the current user, don't provide it.\n    const userMatchesDesign =\n      this.props.design && this.props.design.get(\"user\") === this.props.user.id;\n    return this.props.children({\n      props: {\n        design: userMatchesDesign ? this.props.design : null,\n        isLoading: this.state.isLoading,\n        product: this.props.product,\n        manufacturer: this.props.manufacturer,\n        user: this.props.user\n      }\n    });\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  user: getUser(state),\n  product: getProductById(state, props.design && props.design.get(\"product\")),\n  manufacturer: getManufacturerByProductId(\n    state,\n    props.design && props.design.get(\"product\")\n  )\n});\n\nconst mapDispatchToProps = {\n  onRequestDesign: GET_DESIGN,\n  onRequestProduct: GET_PRODUCTS,\n  onRequestManufacturer: GET_MANUFACTURERS\n};\n\nconst withoutDesign = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditContainer);\n\nexport default connect((state, props) => ({\n  design: getDesignById(state, props.designId)\n}))(withoutDesign);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EditContainer from \"../../containers/EditContainer\";\nimport EditorContainer from \"../../containers/EditorContainer\";\nimport { PageLoader } from \"../../theme\";\nimport Toolbar from \"../editor/Toolbar\";\nimport Sidebar from \"../editor/Sidebar\";\nimport Canvas from \"../editor/Canvas\";\nimport ProductNotes from \"../editor/ProductNotes\";\nimport ErrorPage from \"../ErrorPage\";\n\nconst PageLayout = styled.div`\n  display: flex;\n  justify-content: stretch;\n  position: relative;\n\n  .product-notes {\n    position: absolute;\n    background: rgba(0, 0, 0, 0.8);\n    bottom: 0;\n    right: 0;\n    padding: 8px;\n    max-width: calc(100% - 200px);\n  }\n`;\n\n/**\n * A coordinating component that builds the CreatNew page.\n * The CreateNew page is provided a productId from the router, and is intended to create a new\n * design based on that product.\n */\nconst Edit = ({ match }) => (\n  <EditContainer designId={match.params.designId}>\n    {editData => {\n      if (editData.props.isLoading) {\n        return <PageLoader />;\n      }\n      if (!editData.props.design) {\n        return <ErrorPage />;\n      }\n      if (!editData.props.product) {\n        return (\n          <ErrorPage errorMessage=\"This product is no longer available.\" />\n        );\n      }\n      return (\n        <EditorContainer\n          design={editData.props.design}\n          product={editData.props.product}\n        >\n          {editorData => (\n            <React.Fragment>\n              <Toolbar\n                design={editData.props.design}\n                hideOutlines={editorData.props.hideOutlines}\n                onAutofill={editorData.actions.autofill}\n                onBackgroundChange={editorData.actions.changeBackground}\n                onHideOutlines={editorData.actions.toggleHideOutlines}\n                onRedo={editorData.actions.redo}\n                onReset={editorData.actions.reset}\n                onSave={name =>\n                  editorData.actions.save({\n                    name,\n                    user: editData.props.user.id\n                  })\n                }\n                onUndo={editorData.actions.undo}\n                onUpdate={editorData.actions.update}\n                redoDisabled={!editorData.props.canRedo}\n                showSettings\n                undoDisabled={!editorData.props.canUndo}\n              />\n              <PageLayout>\n                <Sidebar\n                  design={editData.props.design}\n                  product={editData.props.product}\n                  manufacturer={editData.props.manufacturer}\n                  selectedVariation={editorData.props.currentVariation.id}\n                  selectedColor={editorData.props.currentColor.name}\n                  onColorSelect={editorData.actions.selectColor}\n                  onVariationSelect={editorData.actions.selectVariation}\n                  appliedColors={editorData.props.appliedColors}\n                />\n                <Canvas\n                  hideOutlines={editorData.props.hideOutlines}\n                  background={editorData.props.background}\n                  colorMap={editorData.props.currentVariationColors}\n                  svg={editorData.props.currentVariation.svg}\n                  onClick={editorData.actions.applyColor}\n                  currentColor={editorData.props.currentColor.name}\n                />\n                {editData.props.product.get(\"notes\") &&\n                  !!editData.props.product.get(\"notes\").length && (\n                    <ProductNotes notes={editData.props.product.get(\"notes\")} />\n                  )}\n              </PageLayout>\n            </React.Fragment>\n          )}\n        </EditorContainer>\n      );\n    }}\n  </EditContainer>\n);\n\nEdit.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      designId: PropTypes.string.isRequired\n    })\n  })\n};\n\nexport default Edit;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Design from \"../models/Design\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport { getRecentDesigns } from \"../redux/modules/designs\";\nimport { getProductsWithIndex } from \"../redux/modules/products\";\nimport { getManufacturersWithIndex } from \"../redux/modules/manufacturers\";\nimport { GET_DESIGNS, GET_PRODUCTS, GET_MANUFACTURERS } from \"../redux/actions\";\nimport { makeCancelable } from \"../utils\";\n\n/**\n * Provides information and actions about/for Designs.\n */\nexport class RecentDesignsContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A function returning content to be rendered\n     */\n    children: PropTypes.func.isRequired,\n    /**\n     * A list of designs\n     */\n    designs: PropTypes.arrayOf(PropTypes.instanceOf(Design)).isRequired,\n    /** The manufacturers indexed by id */\n    manufacturers: PropTypes.objectOf(PropTypes.instanceOf(Manufacturer))\n      .isRequired,\n    /** The products indexed by id */\n    products: PropTypes.objectOf(PropTypes.instanceOf(Product)).isRequired,\n    /**\n     * A function to trigger the retrieval of the designs. This should update the redux state,\n     * causing designs to be provided through redux.\n     */\n    getDesigns: PropTypes.func.isRequired,\n    /** A function to trigger the retrieval of all products */\n    getProducts: PropTypes.func.isRequired,\n    /** A funciton to trigger the retrieval of all manufacturers */\n    getManufacturers: PropTypes.func.isRequired\n  };\n\n  state = {\n    isLoading: true\n  };\n\n  componentDidMount() {\n    // Get the designs, but limit the request to 6 since we don't need to show many.\n    const designRequest = makeCancelable(\n      this.props.getDesigns({\n        limit: 6\n      })\n    );\n    const productsRequest = makeCancelable(this.props.getProducts());\n    const manufacturersRequest = makeCancelable(this.props.getManufacturers());\n    this.cancelablePromises.push(designRequest);\n    this.cancelablePromises.push(productsRequest);\n    this.cancelablePromises.push(manufacturersRequest);\n\n    Promise.all([\n      designRequest.promise,\n      productsRequest.promise,\n      manufacturersRequest.promise\n    ])\n      .then(() => this.setState({ isLoading: false }))\n      .catch(response => {\n        if (response && response.isCanceled) {\n          return;\n        }\n        this.setState({ isLoading: false });\n      });\n  }\n\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  cancelablePromises = [];\n\n  render() {\n    return this.props.children({\n      props: {\n        isLoading: this.state.isLoading,\n        designs: this.props.designs,\n        products: this.props.products,\n        manufacturers: this.props.manufacturers\n      }\n    });\n  }\n}\n\nconst mapStateToProps = state => ({\n  designs: getRecentDesigns(state, 6),\n  products: getProductsWithIndex(state),\n  manufacturers: getManufacturersWithIndex(state)\n});\n\nconst mapDispatchToProps = {\n  getDesigns: GET_DESIGNS,\n  getProducts: GET_PRODUCTS,\n  getManufacturers: GET_MANUFACTURERS\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RecentDesignsContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { A, P, Label, Input, Button, Error, Tooltip } from \"../theme\";\n\n/**\n * A from for logging in to KitePaint.\n */\nconst LogInForm = ({\n  id,\n  isDisabled,\n  errorMessage,\n  onPasswordChange,\n  onRegister,\n  onResetPassword,\n  onSubmit,\n  onUsernameChange,\n  password,\n  username\n}) => (\n  <form\n    id={id}\n    onSubmit={e => {\n      e.preventDefault();\n      onSubmit();\n    }}\n  >\n    {errorMessage && (\n      <Error className=\"testing_error-message\">\n        <P>{errorMessage}</P>\n      </Error>\n    )}\n    <Label htmlFor={`${id}-username`}>\n      Username{\" \"}\n      <Tooltip>\n        Usernames may be between 3-30 characters.\n        <br />\n        They may include these characters: a-z, A-Z, 0-9.\n      </Tooltip>\n    </Label>\n    <Input\n      id={`${id}-username`}\n      value={username}\n      disabled={isDisabled}\n      onChange={e => onUsernameChange(e.target.value)}\n    />\n    <Label htmlFor={`${id}-password`}>\n      Password{\" \"}\n      <Tooltip>\n        Passwords may be between 6-15 characters.\n        <br />\n        They may include these characters: a-z, A-Z, 0-9, #, @, or *.\n      </Tooltip>\n    </Label>\n    <Input\n      id={`${id}-password`}\n      type=\"password\"\n      value={password}\n      disabled={isDisabled}\n      onChange={e => onPasswordChange(e.target.value)}\n    />\n    <Button isPrimary isBlock type=\"submit\" disabled={isDisabled}>\n      Sign In\n    </Button>\n    <P>\n      <A className=\"testing_reset-password\" onClick={onResetPassword}>\n        Lost your password?\n      </A>\n    </P>\n    <P>\n      <A className=\"testing_register\" onClick={onRegister}>\n        Register\n      </A>\n    </P>\n  </form>\n);\n\nLogInForm.propTypes = {\n  /**\n   * An identifieng string used to differentiate this from other instances\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Indicates if the form should be disabled.\n   */\n  isDisabled: PropTypes.bool,\n  /**\n   * An error message to be displayed at the top of the form.\n   */\n  errorMessage: PropTypes.string,\n  /**\n   * A function called when the password field changes. Is called with the new value as the first\n   * parameter\n   */\n  onPasswordChange: PropTypes.func.isRequired,\n  /**\n   * A function called when the link to the register form is clicked.\n   */\n  onRegister: PropTypes.func.isRequired,\n  /**\n   * A function called when the link to the reset password form is clicked.\n   */\n  onResetPassword: PropTypes.func.isRequired,\n  /**\n   * A function called when the form is submitted.\n   */\n  onSubmit: PropTypes.func.isRequired,\n  /**\n   * A function called when the username is changed. Is called with the new username as the first\n   * parameter.\n   */\n  onUsernameChange: PropTypes.func.isRequired,\n  /**\n   * The value for the password field.\n   */\n  password: PropTypes.string,\n  /**\n   * The value for the username field.\n   */\n  username: PropTypes.string\n};\n\nexport default LogInForm;\n","import React from \"react\";\nimport LogInForm from \"../components/LogInForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport makeCancelable from \"../utils/makeCancelable\";\nimport { LOG_IN } from \"../redux/actions\";\n\nexport class LogInFormContainer extends React.Component {\n  static propTypes = {\n    /**\n     * An identifieng string used to differentiate this from other instances\n     */\n    id: PropTypes.string.isRequired,\n    /**\n     * A function called when the log in form is submitted.\n     * Provided by redux.\n     */\n    onSubmit: PropTypes.func.isRequired,\n    /**\n     * A function called when the link to the register form is clicked.\n     */\n    onRegister: PropTypes.func.isRequired,\n    /** A function called when the use successfully logs in */\n    onLogin: PropTypes.func,\n    /**\n     * A function called when the link to the reset password form is clicked.\n     */\n    onResetPassword: PropTypes.func.isRequired\n  };\n  static defaultProps = {\n    onLogin: () => {}\n  };\n  state = {\n    /**\n     * The user-entered username value.\n     * @type {String}\n     */\n    username: \"\",\n    /**\n     * The displayed error message.\n     * @type {String}\n     */\n    errorMessage: null,\n    /**\n     * The user-entered password value.\n     * @type {String}\n     */\n    password: \"\",\n    /**\n     * Is the register request pending?\n     * @type {Boolean}\n     */\n    pendingRequest: false\n  };\n\n  /**\n   * Handles changes to the username field by storing it in state\n   * @param  {String} username The new username\n   */\n  handleUsernameChange = username => {\n    this.setState({\n      username,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles changes to the password field by storing it in state\n   * @param  {String} password The new password\n   */\n  handlePasswordChange = password => {\n    this.setState({\n      password,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles the log in form submission\n   */\n  handleSubmit = () => {\n    this.setState({\n      pendingRequest: true\n    });\n    const cancelablePromise = makeCancelable(\n      this.props.onSubmit(this.state.username, this.state.password)\n    );\n    const promise = cancelablePromise.promise\n      .then(() => {\n        this.setState({\n          pendingRequest: false\n        });\n        this.props.onLogin();\n      })\n      .catch(error => {\n        if (error.isCanceled) {\n          return;\n        }\n        this.setState({\n          pendingRequest: false,\n          errorMessage: error\n        });\n      });\n    this.pendingPromises.push(cancelablePromise);\n    return promise;\n  };\n\n  pendingPromises = [];\n\n  componentWillUnmount() {\n    this.pendingPromises.forEach(promise => promise.cancel());\n  }\n\n  render() {\n    return (\n      <LogInForm\n        id={this.props.id}\n        errorMessage={this.state.errorMessage}\n        username={this.state.username}\n        password={this.state.password}\n        isDisabled={this.state.pendingRequest}\n        onUsernameChange={this.handleUsernameChange}\n        onPasswordChange={this.handlePasswordChange}\n        onSubmit={this.handleSubmit}\n        onRegister={this.props.onRegister}\n        onResetPassword={this.props.onResetPassword}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  onSubmit: LOG_IN\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LogInFormContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { A, P, Label, Input, Button, Error, Tooltip } from \"../theme\";\nimport { getAssetUrl } from \"../utils\";\n\n/**\n * A form for registering an account for KitePaint.\n */\nconst RegisterForm = ({\n  email,\n  errorMessage,\n  id,\n  isDisabled,\n  onEmailChange,\n  onLogIn,\n  onPasswordChange,\n  onPasswordConfirmationChange,\n  onSubmit,\n  onUsernameChange,\n  password,\n  passwordConfirmation,\n  showSuccessMessage,\n  username\n}) => (\n  <form\n    id={id}\n    onSubmit={e => {\n      e.preventDefault();\n      onSubmit();\n    }}\n  >\n    {showSuccessMessage ? (\n      <React.Fragment>\n        <P className=\"testing_success-message\">\n          A confirmation email has been sent to {email}. After confirming your\n          email address, you main sign in.\n        </P>\n        <Button type=\"button\" isPrimary isBlock onClick={onLogIn}>\n          Sign In\n        </Button>\n      </React.Fragment>\n    ) : (\n      <React.Fragment>\n        {errorMessage && (\n          <Error>\n            <P>{errorMessage}</P>\n          </Error>\n        )}\n        <Label htmlFor={`${id}-username`}>\n          Username{\" \"}\n          <Tooltip>\n            Usernames may be between 3-30 characters.\n            <br />\n            They may include these characters: a-z, A-Z, 0-9.\n          </Tooltip>\n        </Label>\n        <Input\n          id={`${id}-username`}\n          value={username}\n          disabled={isDisabled}\n          onChange={e => onUsernameChange(e.target.value)}\n        />\n        <Label htmlFor={`${id}-email`}>Email Address</Label>\n        <Input\n          id={`${id}-email`}\n          type=\"email\"\n          value={email}\n          disabled={isDisabled}\n          onChange={e => onEmailChange(e.target.value)}\n        />\n        <Label htmlFor={`${id}-password`}>\n          Password{\" \"}\n          <Tooltip>\n            Passwords may be between 6-15 characters.\n            <br />\n            They may include these characters: a-z, A-Z, 0-9, #, @, or *.\n          </Tooltip>\n        </Label>\n        <Input\n          id={`${id}-password`}\n          type=\"password\"\n          value={password}\n          disabled={isDisabled}\n          onChange={e => onPasswordChange(e.target.value)}\n        />\n        <Label htmlFor={`${id}-password-2`}>Confirm Password</Label>\n        <Input\n          id={`${id}-password-2`}\n          type=\"password\"\n          value={passwordConfirmation}\n          disabled={isDisabled}\n          onChange={e => onPasswordConfirmationChange(e.target.value)}\n        />\n        <Button disabled={isDisabled} isPrimary isBlock type=\"submit\">\n          Sign Up\n        </Button>\n        <P>\n          <A\n            href={getAssetUrl(\"/KitePaintTermsandConditions.pdf\")}\n            target=\"_blank\"\n          >\n            Terms and Conditions\n          </A>\n        </P>\n        <P>\n          Already registered?{\" \"}\n          <A className=\"testing_log-in\" onClick={onLogIn}>\n            Sign In\n          </A>\n        </P>\n      </React.Fragment>\n    )}\n  </form>\n);\n\nRegisterForm.propTypes = {\n  /**\n   * The value for the email field.\n   */\n  email: PropTypes.string,\n  /**\n   * An error message to be displayed at the top of the form.\n   */\n  errorMessage: PropTypes.string,\n  /**\n   * A unique identifier to distinguish this from other instances.\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Indicates if the form should be disabled.\n   */\n  isDisabled: PropTypes.bool,\n  /**\n   * A function called when the email value is changed. Is called with the new email as the first\n   * parameter.\n   */\n  onEmailChange: PropTypes.func.isRequired,\n  /**\n   * A function called when the link to go to the log in form is clicked.\n   */\n  onLogIn: PropTypes.func.isRequired,\n  /**\n   * A function called when the password field changes. Is called with the new password as the first\n   * parameter.\n   */\n  onPasswordChange: PropTypes.func.isRequired,\n  /**\n   * A function called when the confirmation password changes. Is called with the new password as\n   * the first parameter.\n   */\n  onPasswordConfirmationChange: PropTypes.func.isRequired,\n  /**\n   * A function called when the form is submitted.\n   */\n  onSubmit: PropTypes.func.isRequired,\n  /**\n   * A function called when the username changes. Is called with the new username as the first\n   * parameter.\n   */\n  onUsernameChange: PropTypes.func.isRequired,\n  /**\n   * The value of the password field.\n   */\n  password: PropTypes.string,\n  /**\n   * The value of the confirmation password field.\n   */\n  passwordConfirmation: PropTypes.string,\n  /**\n   * Indicates if the success message should be shown.\n   */\n  showSuccessMessage: PropTypes.bool,\n  /**\n   * The value of the username field.\n   */\n  username: PropTypes.string\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport RegisterForm from \"../components/RegisterForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { CREATE_ACCOUNT } from \"../redux/actions\";\n\nexport class RegisterFormContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A unique identifier to distinguish this from other instances.\n     */\n    id: PropTypes.string.isRequired,\n    /**\n     * A function called when the link to go to the log in form is clicked.\n     */\n    onLogIn: PropTypes.func.isRequired,\n    /**\n     * A function called when the log in form is submitted.\n     * Provided by redux.\n     */\n    onSubmit: PropTypes.func.isRequired\n  };\n  state = {\n    /**\n     * The user entered email address. Used on the registration and reset password forms.\n     * @type {String}\n     */\n    email: \"\",\n    /**\n     * Is the register request pending?\n     * @type {Boolean}\n     */\n    pendingRequest: false,\n    /**\n     * The user entered password. Used on the registration and log in forms.\n     * @type {String}\n     */\n    password: \"\",\n    /**\n     * The user entered confirmation password. This is used to force the user to enter the password\n     * twice when registering. Used on the registration form.\n     * @type {String}\n     */\n    passwordConfirmation: \"\",\n    /**\n     * An error message to display when registration fails.\n     * @type {String}\n     */\n    errorMessage: null,\n    /**\n     * Indicates that a registration request has been sent. Should be set to true after submission\n     * of the registration form, that way we can display a success message to the user.\n     * @type {Boolean}\n     */\n    registrationSent: false,\n    /**\n     * The user entered username. Used on the registration, log in, and reset password forms.\n     * @type {String}\n     */\n    username: \"\"\n  };\n  /**\n   * Handles changes to the email field by storing it in state\n   * @param  {String} email The new email address\n   */\n  handleEmailChange = email => {\n    this.setState({\n      email,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles changes to the username field by storing it in state\n   * @param  {String} username The new username\n   */\n  handleUsernameChange = username => {\n    this.setState({\n      username,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles changes to the password field by storing it in state\n   * @param  {String} password The new password\n   */\n  handlePasswordChange = password => {\n    this.setState({\n      password,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles changes to the passwordConfirmation field by storing it in state\n   * @param  {String} passwordConfirmation The new passwordConfirmation\n   */\n  handlePasswordConfirmationChange = passwordConfirmation => {\n    this.setState({\n      passwordConfirmation,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles the log in form submission\n   */\n  handleSubmit = () => {\n    const data = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.passwordConfirmation\n    };\n    this.setState({\n      pendingRequest: true\n    });\n    return this.props\n      .onSubmit(data)\n      .then(() => {\n        this.setState({\n          pendingRequest: false,\n          registrationSent: true\n        });\n      })\n      .catch(error => {\n        this.setState({\n          pendingRequest: false,\n          errorMessage: error\n        });\n      });\n  };\n\n  render() {\n    return (\n      <RegisterForm\n        email={this.state.email}\n        errorMessage={this.state.errorMessage}\n        id={this.props.id}\n        isDisabled={this.state.pendingRequest}\n        onEmailChange={this.handleEmailChange}\n        onLogIn={this.props.onLogIn}\n        onPasswordChange={this.handlePasswordChange}\n        onPasswordConfirmationChange={this.handlePasswordConfirmationChange}\n        onSubmit={this.handleSubmit}\n        onUsernameChange={this.handleUsernameChange}\n        password={this.state.password}\n        passwordConfirmation={this.state.passwordConfirmation}\n        showSuccessMessage={this.state.registrationSent}\n        username={this.state.username}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  onSubmit: CREATE_ACCOUNT\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RegisterFormContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { A, P, Error, Label, Input, Button, Tooltip } from \"../theme\";\n\nconst ResetPasswordForm = ({\n  email,\n  errorMessage,\n  id,\n  isDisabled,\n  onCancel,\n  onEmailChange,\n  onSubmit,\n  onUsernameChange,\n  showSuccessMessage,\n  username\n}) => (\n  <form\n    id={id}\n    onSubmit={e => {\n      e.preventDefault();\n      onSubmit();\n    }}\n  >\n    {showSuccessMessage ? (\n      <React.Fragment>\n        <P className=\"testing_success-message\">\n          An email containing a password reset link has been sent to {email}.\n        </P>\n        <Button type=\"button\" isPrimary isBlock onClick={onCancel}>\n          Sign In\n        </Button>\n      </React.Fragment>\n    ) : (\n      <React.Fragment>\n        {errorMessage && (\n          <Error>\n            <P>{errorMessage}</P>\n          </Error>\n        )}\n        <P>Enter your username and email address to reset your password.</P>\n        <Label htmlFor={`${id}-username`}>\n          Username{\" \"}\n          <Tooltip>\n            Usernames may be between 3-30 characters.\n            <br />\n            They may include these characters: a-z, A-Z, 0-9.\n          </Tooltip>\n        </Label>\n        <Input\n          id={`${id}-username`}\n          value={username}\n          disabled={isDisabled}\n          onChange={e => onUsernameChange(e.target.value)}\n        />\n        <Label htmlFor={`${id}-email`}>Email Address</Label>\n        <Input\n          id={`${id}-email`}\n          type=\"email\"\n          value={email}\n          disabled={isDisabled}\n          onChange={e => onEmailChange(e.target.value)}\n        />\n        <Button isPrimary isBlock type=\"submit\" disabled={isDisabled}>\n          Reset Password\n        </Button>\n        <P>\n          <A className=\"testing_cancel\" onClick={onCancel}>\n            Cancel\n          </A>\n        </P>\n      </React.Fragment>\n    )}\n  </form>\n);\n\nResetPasswordForm.propTypes = {\n  /**\n   * The value for the email field.\n   */\n  email: PropTypes.string,\n  /**\n   * A message to display as an error.\n   * @type {String}\n   */\n  errorMessage: PropTypes.string,\n  /**\n   * A unique identifier needed to differentiate instances of this componnet.\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Indicates if the form is disabled.\n   */\n  isDisabled: PropTypes.bool,\n  /**\n   * A function called when the user clicks on the cancel button.\n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * A function called when the email changes. Is called with the new email as the first paramater.\n   * @type {[type]}\n   */\n  onEmailChange: PropTypes.func.isRequired,\n  /**\n   * A function called when the form is submitted.\n   */\n  onSubmit: PropTypes.func.isRequired,\n  /**\n   * A function called when the username changes. Is called with the new username as the first parameter.\n   */\n  onUsernameChange: PropTypes.func.isRequired,\n  /**\n   * Indicates if the pasword reset request has been sent successfully.\n   */\n  showSuccessMessage: PropTypes.bool,\n  /**\n   * The value for the username field.\n   */\n  username: PropTypes.string\n};\n\nexport default ResetPasswordForm;\n","import React from \"react\";\nimport ResetPasswordForm from \"../components/ResetPasswordForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { RESET_PASSWORD } from \"../redux/actions\";\n\nexport class ResetPasswordFormContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A unique identifier needed to differentiate instances of this componnet.\n     */\n    id: PropTypes.string.isRequired,\n    /**\n     * A function called when the user clicks on the cancel button.\n     */\n    onCancel: PropTypes.func.isRequired,\n    /**\n     * A function called when the form is submitted.\n     * Provided by redux.\n     */\n    onSubmit: PropTypes.func.isRequired\n  };\n  state = {\n    /**\n     * The user entered email address. Used on the registration and reset password forms.\n     * @type {String}\n     */\n    email: \"\",\n    /**\n     * Is the register request pending?\n     * @type {Boolean}\n     */\n    pendingRequest: false,\n    /**\n     * An error message to display when reset password fails.\n     * @type {String}\n     */\n    errorMessage: null,\n    /**\n     * Indicates that a reset password request has been sent. Should be set to true after submission\n     * of the reset password form, that way we can display a success message to the user.\n     * @type {Boolean}\n     */\n    resetPasswordSent: false,\n    /**\n     * The user entered username. Used on the registration, log in, and reset password forms.\n     * @type {String}\n     */\n    username: \"\"\n  };\n\n  /**\n   * Handles changes to the email field by storing it in state\n   * @param  {String} email The new email address\n   */\n  handleEmailChange = email => {\n    this.setState({\n      email,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles changes to the username field by storing it in state\n   * @param  {String} username The new username\n   */\n  handleUsernameChange = username => {\n    this.setState({\n      username,\n      errorMessage: null\n    });\n  };\n\n  /**\n   * Handles the password reset form submission.\n   */\n  handleSubmit = () => {\n    this.setState({\n      pendingRequest: true\n    });\n    return this.props\n      .onSubmit(this.state.username, this.state.email)\n      .then(() => {\n        this.setState({\n          pendingRequest: false,\n          resetPasswordSent: true\n        });\n      })\n      .catch(error => {\n        this.setState({\n          pendingRequest: false,\n          errorMessage: error\n        });\n      });\n  };\n\n  render() {\n    return (\n      <ResetPasswordForm\n        email={this.state.email}\n        errorMessage={this.state.errorMessage}\n        id={this.props.id}\n        isDisabled={this.state.pendingRequest}\n        onCancel={this.props.onCancel}\n        onEmailChange={this.handleEmailChange}\n        onSubmit={this.handleSubmit}\n        onUsernameChange={this.handleUsernameChange}\n        showSuccessMessage={this.state.resetPasswordSent}\n        username={this.state.username}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  onSubmit: RESET_PASSWORD\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPasswordFormContainer);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport LogInFormContainer from \"../containers/LogInFormContainer\";\nimport RegisterFormContainer from \"../containers/RegisterFormContainer\";\nimport ResetPasswordFormContainer from \"../containers/ResetPasswordFormContainer\";\n\n/**\n * Styles for the account form.\n */\nexport const StyleWrapper = styled.div`\n  width: 100%;\n  max-width: 300px;\n  background: ${({ theme }) => theme.colors.white};\n  border-radius: 8px;\n  padding: 16px;\n`;\n\n/**\n * AccountForm combines the Login, Register, and Reset Password forms into one unit.\n */\nclass AccountForm extends React.Component {\n  static propTypes = {\n    /**\n     * An ID to be applied to the form and to form fields to uniquely identify them since this\n     * component may be used more than once.\n     */\n    id: PropTypes.string.isRequired,\n    /**\n     * Indicates if the user is recognized as someone who has a KitePaint account. Will show the\n     * log in form if this is true, or the register form if this is false.\n     */\n    isRecognizedUser: PropTypes.bool.isRequired,\n    /**\n     * A function called when the user indicates that they do, or do not have a KitePaint account.\n     */\n    onToggleRecognition: PropTypes.func.isRequired,\n    /** A function called when the use successfully logs in */\n    onLogin: PropTypes.func,\n    className: PropTypes.string\n  };\n  static defaultProps = {\n    onLogin: () => {}\n  };\n\n  state = {\n    /**\n     * Indicates if we should be showing the reset password form.\n     * @type {Boolean}\n     */\n    showResetPassword: false\n  };\n\n  /**\n   * Toggles the showResetPassword state and clears out the password fields to switch between the\n   * reset password form and the log in form.\n   */\n  handleResetPasswordToggle = () => {\n    const { showResetPassword } = this.state;\n    this.setState({\n      showResetPassword: !showResetPassword\n    });\n  };\n\n  render() {\n    const { id, isRecognizedUser } = this.props;\n\n    // If we don't recognize the user, show the registration form\n    if (!isRecognizedUser) {\n      return (\n        <StyleWrapper className={this.props.className}>\n          <RegisterFormContainer\n            id={id}\n            onLogIn={this.props.onToggleRecognition}\n          />\n        </StyleWrapper>\n      );\n    }\n\n    // Show the reset password form\n    if (this.state.showResetPassword) {\n      return (\n        <StyleWrapper className={this.props.className}>\n          <ResetPasswordFormContainer\n            id={id}\n            onCancel={this.handleResetPasswordToggle}\n            onSubmit={this.handlePasswordReset}\n            onUsernameChange={this.handleUsernameChange}\n            showSuccessMessage={this.state.resetPasswordSent}\n            username={this.state.username}\n          />\n        </StyleWrapper>\n      );\n    }\n\n    // If all else is false, show the login form\n    return (\n      <StyleWrapper className={this.props.className}>\n        <LogInFormContainer\n          id={id}\n          onLogin={this.props.onLogin}\n          onRegister={this.props.onToggleRecognition}\n          onResetPassword={this.handleResetPasswordToggle}\n        />\n      </StyleWrapper>\n    );\n  }\n}\n\nexport default AccountForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport bgRev from \"./bg-rev.jpg\";\nimport { H3, Button } from \"../../theme\";\n\n/**\n * Styles for the CTABanner\n */\nexport const StyleWrapper = styled.div`\n  height: 408px;\n  width: 100%;\n  background: url(${bgRev}) no-repeat center;\n  background-size: cover;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .cta-wrapper {\n    background: rgba(0, 0, 0, 0.5);\n    width: 400px;\n    text-align: center;\n    padding: 16px;\n    border-radius: 8px;\n  }\n`;\n\n/**\n * Displays a banner with a Call To Action.\n */\nconst CTABanner = () => (\n  <StyleWrapper>\n    <div className=\"cta-wrapper\">\n      <H3 isLight>Get started new by creating a new kite design!</H3>\n      <Button isPrimary isBlock as={Link} to=\"/create\">\n        Get Started\n      </Button>\n    </div>\n  </StyleWrapper>\n);\nexport default CTABanner;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserContainer from \"../../containers/UserContainer\";\nimport RecentDesignsContainer from \"../../containers/RecentDesignsContainer\";\nimport { H2, Loading, Spacer, Button } from \"../../theme\";\nimport AccountForm from \"../AccountForm\";\nimport CTABanner from \"./CTABanner\";\nimport AccountBanner from \"./AccountBanner\";\nimport RecentDesigns from \"../RecentDesigns\";\n\n/**\n * A coordinating component for the Home page.\n */\nconst Home = () => (\n  <React.Fragment>\n    <CTABanner />\n    {/* <UserContainer>\n      {userData =>\n        !userData.props.isLoggedIn && (\n          <AccountBanner isRecognizedUser={userData.props.isRecognizedUser}>\n            <AccountForm\n              onToggleRecognition={userData.actions.toggleRecognition}\n              id=\"account-banner-login\"\n              isRecognizedUser={userData.props.isRecognizedUser}\n            />\n          </AccountBanner>\n        )\n      }\n    </UserContainer> */}\n    {/* <RecentDesignsContainer>\n      {designsData =>\n        designsData.props.isLoading ? (\n          <Spacer top=\"xl\" bottom=\"xl\">\n            <Loading />\n          </Spacer>\n        ) : (\n          <React.Fragment>\n            <Spacer top=\"sm\" left=\"sm\">\n              <H2>Recent Designs</H2>\n            </Spacer>\n            <RecentDesigns\n              designs={designsData.props.designs}\n              products={designsData.props.products}\n              manufacturers={designsData.props.manufacturers}\n              cta={\n                <Button isBlock as={Link} to=\"/designs\">\n                  See All Designs\n                </Button>\n              }\n            />\n          </React.Fragment>\n        )\n      }\n    </RecentDesignsContainer> */}\n  </React.Fragment>\n);\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { H2, P } from \"../../theme\";\n\nexport const StyleWrapper = styled.div`\n  background: ${({ theme }) => theme.colors.silver};\n  padding: 16px 24px;\n  display: flex;\n  justify-content: center;\n\n  .message {\n    padding: 16px;\n    display: none;\n  }\n\n  ${props => props.theme.media.mediaSm} {\n    .message {\n      display: block;\n    }\n  }\n`;\n\n/**\n * Displays a banner with login or account information.\n */\nconst AccountBanner = ({ isRecognizedUser, children }) => {\n  const recognizedUserContent = (\n    <div className=\"message\">\n      <H2>Welcome Back!</H2>\n      <P>Sign in to get back to your saved designs.</P>\n    </div>\n  );\n  const unrecognizedUserContent = (\n    <div className=\"message\">\n      <H2>Create an Account</H2>\n      <P>By creating a free account, you get access to features such as:</P>\n      <ul>\n        <li>\n          <P>Save your designs and modify them later</P>\n        </li>\n        <li>\n          <P>Control the visibility of your designs</P>\n        </li>\n        <li>\n          <P>More features to come!</P>\n        </li>\n      </ul>\n    </div>\n  );\n  return (\n    <StyleWrapper>\n      {children}\n      {isRecognizedUser ? recognizedUserContent : unrecognizedUserContent}\n    </StyleWrapper>\n  );\n};\n\nAccountBanner.propTypes = {\n  /**\n   * Indicates if the user is known to have a KitePaint account or not.\n   */\n  isRecognizedUser: PropTypes.bool,\n  /**\n   * Children nodes to be displayed to the left of the message.\n   */\n  children: PropTypes.node.isRequired\n};\n\nexport default AccountBanner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport UserContainer from \"../../containers/UserContainer\";\nimport { getQueryParams, redirect } from \"../../utils\";\nimport AccountForm from \"../AccountForm\";\n\nexport const StyleWrapper = styled.div`\n  box-sizing: border-box;\n  min-height: calc(100vh - 85px);\n  ${props => props.theme.patterns.transparencyBackground};\n  padding-top: 10%;\n\n  .account-form {\n    margin: 0 auto;\n  }\n`;\n\nclass Login extends React.Component {\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    const redirectUrl = getQueryParams().url;\n    this.state = {\n      redirectUrl\n    };\n  }\n\n  // After a successful login, either redirect to the url provided in the query\n  // params, or redirect to the home page.\n  redirectAfterLogin = () => {\n    if (this.state.redirectUrl) {\n      redirect(this.state.redirectUrl);\n      return;\n    }\n    redirect(window.location.origin);\n  };\n\n  render() {\n    return (\n      <StyleWrapper>\n        <UserContainer>\n          {userData => (\n            <AccountForm\n              className=\"account-form\"\n              onLogin={this.redirectAfterLogin}\n              onToggleRecognition={userData.actions.toggleRecognition}\n              id=\"account-banner-login\"\n              isRecognizedUser={userData.props.isRecognizedUser}\n            />\n          )}\n        </UserContainer>\n      </StyleWrapper>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../redux/modules/user\";\nimport { getDesignsByUser } from \"../redux/modules/designs\";\nimport { getProductsWithIndex } from \"../redux/modules/products\";\nimport { getManufacturersWithIndex } from \"../redux/modules/manufacturers\";\nimport {\n  GET_DESIGNS,\n  GET_PRODUCTS,\n  GET_MANUFACTURERS,\n  DELETE_DESIGN\n} from \"../redux/actions\";\nimport Design from \"../models/Design\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport { makeCancelable } from \"../utils\";\n\n/**\n * Provides access to designs created by the current user.\n */\nexport class MyDesignsContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A function that is called when the user requests to delete a design.\n     */\n    onDeleteDesign: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retieval of the user's designs. Provided by Redux.\n     */\n    onFetchDesigns: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retrieval of products. Provided by Redux.\n     */\n    onFetchProducts: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retireval of manufacturers. Provided by Redux.\n     */\n    onFetchManufacturers: PropTypes.func.isRequired,\n    /**\n     * The designs created by the current user. Provided by Redux.\n     */\n    designs: PropTypes.arrayOf(PropTypes.instanceOf(Design)).isRequired,\n    /**\n     * All of the products, indexed by ID. Provided by Redux.\n     */\n    products: PropTypes.objectOf(PropTypes.instanceOf(Product)).isRequired,\n    /**\n     * All the manufacturers, indexed by ID. Provided by Redux.\n     */\n    manufacturers: PropTypes.objectOf(PropTypes.instanceOf(Manufacturer))\n      .isRequired,\n    /**\n     * The current user. Provided by Redux.\n     */\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }),\n    /**\n     * A function that renders content.\n     */\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    isLoading: true\n  };\n\n  componentDidMount() {\n    const designRequest = makeCancelable(\n      this.props.onFetchDesigns({\n        userId: this.props.user.id,\n        limit: null,\n        publicOnly: false\n      })\n    );\n    const productRequest = makeCancelable(this.props.onFetchProducts());\n    const manufacturerRequest = makeCancelable(\n      this.props.onFetchManufacturers()\n    );\n    this.cancelablePromises.push(designRequest);\n    this.cancelablePromises.push(productRequest);\n    this.cancelablePromises.push(manufacturerRequest);\n\n    Promise.all([\n      designRequest.promise,\n      productRequest.promise,\n      manufacturerRequest.promise\n    ])\n      .then(() => {\n        this.setState({\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  cancelablePromises = [];\n\n  render() {\n    return this.props.children({\n      actions: {\n        deleteDesign: this.props.onDeleteDesign\n      },\n      props: {\n        isLoading: this.state.isLoading,\n        designs: this.props.designs,\n        products: this.props.products,\n        manufacturers: this.props.manufacturers\n      }\n    });\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  designs: getDesignsByUser(state, props.user && props.user.id),\n  products: getProductsWithIndex(state),\n  manufacturers: getManufacturersWithIndex(state)\n});\n\nconst mapDispatchToProps = {\n  onDeleteDesign: DELETE_DESIGN,\n  onFetchDesigns: GET_DESIGNS,\n  onFetchProducts: GET_PRODUCTS,\n  onFetchManufacturers: GET_MANUFACTURERS\n};\n\n// We need the user prop to be provided in order to get the designs, so wrap the container once\n// to get the designs, and again to get the user.\nconst withoutUser = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyDesignsContainer);\n\nexport default connect(state => ({\n  user: getUser(state)\n}))(withoutUser);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Status from \"../../models/Status\";\nimport Design from \"../../models/Design\";\nimport Product from \"../../models/Product\";\nimport Manufacturer from \"../../models/Manufacturer\";\nimport DesignSettingsModalContainer from \"../../containers/DesignSettingsModalContainer\";\nimport { H2, P, Button, Icon, Tile, ModalConfirm, Error } from \"../../theme\";\nimport ShareModal from \"../ShareModal\";\nimport Svg from \"../Svg\";\n\nexport const StyleWrapper = styled(Tile)`\n  > div {\n    padding: 8px;\n  }\n\n  .previews {\n    ${props => props.theme.patterns.transparencyBackground};\n    display: flex;\n    padding: 8px 0;\n\n    > div {\n      width: 200px;\n      padding: 0 8px;\n    }\n  }\n`;\n\n/**\n * Provides a UI for managing a user's design.\n */\nconst DesignManager = ({ design, product, manufacturer, onDelete }) => (\n  <StyleWrapper>\n    <div>\n      <H2>{design.get(\"name\")}</H2>\n      {product && (\n        <P>\n          <strong className=\"testing_product-info\">\n            {product.get(\"name\")}\n            {manufacturer && ` by ${manufacturer.get(\"name\")}`}\n          </strong>\n        </P>\n      )}\n    </div>\n    <div className=\"previews\">\n      {design.get(\"variations\").map(variation => (\n        <Svg key={variation.id} svg={variation.svg} />\n      ))}\n    </div>\n    <div>\n      <P>\n        Created: {design.get(\"created\")} | Last Modified:{\" \"}\n        {design.get(\"updated\")} | Visiblity:{\" \"}\n        {Status[design.get(\"currentStatus\")]}\n      </P>\n      {!design.get(\"isPrivateProduct\") && (\n        <Button\n          className=\"testing_view\"\n          as={Link}\n          to={`view/${design.get(\"id\")}`}\n        >\n          <Icon icon=\"eye\" /> View\n        </Button>\n      )}{\" \"}\n      {!design.get(\"isPrivateProduct\") && (\n        <Button as={Link} to={`edit/${design.get(\"id\")}`}>\n          <Icon icon=\"edit\" /> Edit\n        </Button>\n      )}{\" \"}\n      <ShareModal design={design}>\n        {modal => (\n          <Button onClick={modal.actions.open}>\n            <Icon icon=\"share\" /> Share\n          </Button>\n        )}\n      </ShareModal>{\" \"}\n      <ModalConfirm\n        onConfirm={() => onDelete()}\n        confirmText=\"Yes\"\n        cancelText=\"No\"\n        message={`Are you sure you want to delete ${design.get(\n          \"name\"\n        )}? This cannot be undone.`}\n      >\n        {modal => (\n          <Button onClick={modal.actions.open}>\n            <Icon icon=\"trash\" /> Delete\n          </Button>\n        )}\n      </ModalConfirm>{\" \"}\n      <DesignSettingsModalContainer design={design}>\n        {modal => (\n          <Button onClick={modal.actions.open}>\n            <Icon icon=\"cog\" /> Settings\n          </Button>\n        )}\n      </DesignSettingsModalContainer>\n      {design.get(\"isPrivateProduct\") && (\n        <Error>\n          <P>This product is no longer available.</P>\n        </Error>\n      )}\n    </div>\n  </StyleWrapper>\n);\n\nDesignManager.propTypes = {\n  design: PropTypes.instanceOf(Design),\n  onDelete: PropTypes.func.isRequired,\n  product: PropTypes.instanceOf(Product),\n  manufacturer: PropTypes.instanceOf(Manufacturer)\n};\nexport default DesignManager;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport MyDesignsContainer from \"../../containers/MyDesignsContainer\";\nimport { H1, Spacer, PageLoader, P } from \"../../theme\";\nimport DesignManager from \"./DesignManager\";\n\nconst StyleWrapper = styled.div`\n  padding: 8px 16px;\n  margin: 0 auto;\n  max-width: 1280px;\n`;\n\n/**\n * A coordinating component for the My Designs page.\n * The page is intended to allow users to see and manage their designs\n */\nconst MyDesigns = () => (\n  <StyleWrapper>\n    <H1>My Designs</H1>\n    <Spacer bottom=\"md\" />\n    <MyDesignsContainer>\n      {userDesigns =>\n        userDesigns.props.isLoading ? (\n          <PageLoader />\n        ) : (\n          <React.Fragment>\n            {userDesigns.props.designs.map(design => {\n              const product = userDesigns.props.products[design.get(\"product\")];\n              const manufacturer = product\n                ? userDesigns.props.manufacturers[product.get(\"manufacturer\")]\n                : null;\n              return (\n                <Spacer key={design.get(\"id\")} bottom=\"md\">\n                  <DesignManager\n                    onDelete={() =>\n                      userDesigns.actions.deleteDesign(design.get(\"id\"))\n                    }\n                    design={design}\n                    product={product}\n                    manufacturer={manufacturer}\n                  />\n                </Spacer>\n              );\n            })}\n            {!userDesigns.props.designs.length && (\n              <Spacer top=\"lg\" bottom=\"lg\">\n                <P>\n                  You have not saved any designs yet. Go to the{\" \"}\n                  <Link to=\"/create\">Create</Link> page to start creating a new\n                  design.\n                </P>\n              </Spacer>\n            )}\n          </React.Fragment>\n        )\n      }\n    </MyDesignsContainer>\n  </StyleWrapper>\n);\n\nexport default MyDesigns;\n","import { handleActions } from \"redux-actions\";\nimport { fromJS } from \"immutable\";\nimport { GET_USER } from \"../actions\";\n\nexport const defaultState = fromJS({});\n\n/**\n * The reducer managing retrieved users.\n */\nexport default handleActions(\n  {\n    [GET_USER.RECEIVED]: (state, action) => {\n      const { data } = action.payload;\n      if (!data || !data.get) {\n        return state;\n      }\n      return state.merge({\n        [data.get(\"loginid\")]: data\n      });\n    }\n  },\n  defaultState\n);\n\n/**\n * Get user by idea\n * @param  {Map} state\n * @param  {String} id\n * @return {Object}\n */\nexport const getUserById = (state, id) => {\n  const user = state.getIn([\"users\", id]);\n  return user ? user : null;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getDesignById } from \"../redux/modules/designs\";\nimport { getProductById } from \"../redux/modules/products\";\nimport { getManufacturerByProductId } from \"../redux/modules/manufacturers\";\nimport { getUserById } from \"../redux/modules/users\";\nimport {\n  GET_DESIGN,\n  GET_PRODUCTS,\n  GET_MANUFACTURERS,\n  GET_USER\n} from \"../redux/actions\";\nimport Design from \"../models/Design\";\nimport Product from \"../models/Product\";\nimport Manufacturer from \"../models/Manufacturer\";\nimport User from \"../models/User\";\nimport { isEmbedded, defaultBackground } from \"../constants/embed\";\nimport ErrorPage from \"../components/ErrorPage\";\nimport { softCompareStrings, makeCancelable, embedAllowed } from \"../utils\";\nimport { generateAppliedColors } from \"./EditorContainer\";\n\n/**\n * A container that provides data management for the View page.\n */\nexport class ViewContainer extends React.Component {\n  static propTypes = {\n    /**\n     * A function that triggers the retrieval of a specific design. Provided by Redux.\n     */\n    onFetchDesign: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retrieval of products. Provided by Redux.\n     */\n    onFetchProducts: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retrieval of manufacturers. Provided by Redux.\n     */\n    onFetchManufacturers: PropTypes.func.isRequired,\n    /**\n     * A function that triggers the retrieval of a specific user. Provided by Redux.\n     */\n    onFetchUser: PropTypes.func.isRequired,\n    /**\n     * The design being viewed. Provided by Redux.\n     */\n    design: PropTypes.instanceOf(Design),\n    /**\n     * The ID of the design that is being viewed.\n     */\n    designId: PropTypes.string.isRequired,\n    /**\n     * The product related to the design. Provided by Redux.\n     */\n    product: PropTypes.instanceOf(Product),\n    /**\n     * The manufacturer related to the design. Provided by Redux.\n     */\n    manufacturer: PropTypes.instanceOf(Manufacturer),\n    /**\n     * The user that created the design. Provided by Redux.\n     */\n    user: PropTypes.instanceOf(User),\n    /**\n     * A function that renders content.\n     */\n    children: PropTypes.func.isRequired\n  };\n\n  state = {\n    isLoading: true,\n    usedColors: {},\n    currentVariation: null,\n    background: defaultBackground || null,\n    hideOutlines: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const variations = props.design && props.design.get(\"variations\");\n    const productColors = props.product && props.product.get(\"colors\");\n    if (!variations || !productColors) {\n      return {};\n    }\n\n    const newState = {};\n\n    // Set the current variation if not set already\n    if (!state.currentVariation) {\n      newState.currentVariation = variations.find(\n        variation => variation.primary\n      );\n    }\n\n    // Set the appied colors if not already set\n    if (!state.appliedColors) {\n      newState.appliedColors = generateAppliedColors(\n        props.design,\n        props.product\n      );\n    }\n\n    // Loop through the variations to grab the colors used in each\n    newState.usedColors = variations.reduce((accumulated, variation) => {\n      const svg = variation.svg;\n      const fillRegex = /\\sfill=\".{4,7}\"/g;\n      const matches = svg.match(fillRegex) || [];\n\n      // Loop through the found colors and match them to the product colors, if possible, with no\n      // duplicates\n      const colors = matches.reduce((accumulatedColors, match) => {\n        const colorValue = match.split('\"')[1];\n        const alreadyFound = accumulatedColors.find(color =>\n          softCompareStrings(color.color, colorValue)\n        );\n        if (alreadyFound) {\n          return accumulatedColors;\n        }\n\n        const color = productColors.find(color =>\n          softCompareStrings(color.color, colorValue)\n        );\n        if (color) {\n          accumulatedColors.push(color);\n          return accumulatedColors;\n        }\n\n        accumulatedColors.push({\n          name: \"\",\n          color: colorValue\n        });\n        return accumulatedColors;\n      }, []);\n      accumulated[variation.id] = colors;\n      return accumulated;\n    }, {});\n\n    return newState;\n  }\n\n  componentDidMount() {\n    const productPromise = this.props.onFetchProducts();\n    const manufacturerPromise = this.props.onFetchManufacturers();\n    const promises = [productPromise, manufacturerPromise];\n    let designPromise = Promise.resolve({\n      data: this.props.design\n    });\n    if (!this.props.design) {\n      designPromise = this.props.onFetchDesign(this.props.designId);\n    }\n    promises.push(designPromise);\n    const request = makeCancelable(Promise.all(promises));\n    this.cancelablePromises.push(request);\n    request.promise\n      .then(responses => {\n        const userId = responses[2].data.get(\"user\");\n        return this.props.onFetchUser(userId);\n      })\n      .then(() => {\n        this.setState({\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.cancelablePromises.forEach(cancelable => cancelable.cancel());\n  }\n\n  cancelablePromises = [];\n\n  /**\n   * Gets the applied colors for the current variation\n   */\n  getCurrentVariationColors = () => {\n    if (!this.state.currentVariation) {\n      return {};\n    }\n    const currentVariationId = this.state.currentVariation.id;\n    return this.state.appliedColors[currentVariationId] || {};\n  };\n\n  /**\n   * Handles when a different variation is selected by updating state.\n   * @param  {String} variationId The id of the newly selected variation\n   */\n  handleVariationSelection = variationId => {\n    const currentVariation = this.props.design\n      .get(\"variations\")\n      .find(variation => variation.id === variationId);\n    this.setState({\n      currentVariation\n    });\n  };\n\n  handleBackgroundChange = value => this.setState({ background: value });\n\n  handleToggleHideOutlines = () =>\n    this.setState({ hideOutlines: !this.state.hideOutlines });\n\n  render() {\n    if (\n      isEmbedded &&\n      this.props.product &&\n      !embedAllowed(this.props.product.get(\"embed\").split(\",\"))\n    ) {\n      return (\n        <ErrorPage\n          errorCode={401}\n          errorMessage=\"Embedding of this page is not permitted.\"\n        />\n      );\n    }\n    return this.props.children({\n      actions: {\n        changeBackground: this.handleBackgroundChange,\n        selectVariation: this.handleVariationSelection,\n        toggleHideOutlines: this.handleToggleHideOutlines\n      },\n      props: {\n        currentVariationColors: this.getCurrentVariationColors(),\n        background: this.state.background,\n        hideOutlines: this.state.hideOutlines,\n        currentVariation: this.state.currentVariation,\n        isLoading: this.state.isLoading,\n        design: this.props.design,\n        manufacturer: this.props.manufacturer,\n        product: this.props.product,\n        usedColors: this.state.usedColors,\n        user: this.props.user\n      }\n    });\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  product: getProductById(state, props.design && props.design.get(\"product\")),\n  manufacturer: getManufacturerByProductId(\n    state,\n    props.design && props.design.get(\"product\")\n  ),\n  user: getUserById(state, props.design && props.design.get(\"user\"))\n});\n\nconst mapDispatchToProps = {\n  onFetchDesign: GET_DESIGN,\n  onFetchProducts: GET_PRODUCTS,\n  onFetchManufacturers: GET_MANUFACTURERS,\n  onFetchUser: GET_USER\n};\n\nconst withoutDesign = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewContainer);\n\nexport default connect((state, props) => ({\n  design: getDesignById(state, props.designId)\n}))(withoutDesign);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Manufacturer from \"../../models/Manufacturer\";\nimport Product from \"../../models/Product\";\nimport Design from \"../../models/Design\";\nimport User from \"../../models/User\";\nimport ColorTile from \"../editor/ColorTile\";\nimport { Icon, FillToBottom, Sidebar as SidebarUI } from \"../../theme\";\nimport { getAssetUrl } from \"../../utils\";\nimport ManufacturerLogo from \"../ManufacturerLogo\";\nimport Svg from \"../Svg\";\n\n/**\n * A styled preview of a variation's svg\n */\nconst VariationPreview = styled.div`\n  display: block;\n  width: 24px;\n  height: 24px;\n\n  svg {\n    margin-top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const StyledSidebar = styled(SidebarUI)`\n  width: 60px;\n\n  .color-tile,\n  .manufacturer-logo,\n  .variation-preview {\n    margin: 0 auto;\n  }\n\n  .color-label,\n  .variation-label,\n  .colors-heading,\n  .manufacturer-info,\n  .design-heading {\n    display: none;\n  }\n\n  ${props => props.theme.media.mediaMd} {\n    width: 175px;\n    .color-label,\n    .variation-label {\n      display: inline;\n    }\n    .colors-heading,\n    .manufacturer-info,\n    .design-heading {\n      display: block;\n    }\n    .color-tile,\n    .manufacturer-logo,\n    .variation-preview {\n      margin: 0;\n    }\n  }\n`;\n\n/**\n * The sidebar displayed when editing/creating a new design\n */\nconst Sidebar = ({\n  manufacturer,\n  product,\n  design,\n  selectedVariation,\n  onVariationSelect,\n  user,\n  usedColors\n}) => (\n  <StyledSidebar>\n    {sidebar => (\n      <React.Fragment>\n        {product &&\n          manufacturer && (\n            <sidebar.components.Item\n              isLight\n              as={\n                product.get(\"url\") || manufacturer.get(\"website\") ? \"a\" : \"div\"\n              }\n              href={product.get(\"url\") || manufacturer.get(\"website\")}\n              target=\"_blank\"\n              hasAction={!!(product.get(\"url\") || manufacturer.get(\"website\"))}\n            >\n              <ManufacturerLogo\n                className=\"manufacturer-logo\"\n                size={32}\n                noMargin\n                src={getAssetUrl(`/logos/${manufacturer.get(\"logo\")}`)}\n              />\n              <div className=\"testing_manufacturer manufacturer-info\">\n                {product.get(\"name\")} <br />\n                <small>by {manufacturer.get(\"name\")}</small>\n              </div>\n            </sidebar.components.Item>\n          )}\n        <sidebar.components.Heading\n          className=\"testing_design design-heading\"\n          isLight\n        >\n          {design.get(\"name\")}{\" \"}\n          {user && (\n            <React.Fragment>\n              <br />\n              designed by {user.get(\"username\")}\n            </React.Fragment>\n          )}\n        </sidebar.components.Heading>\n        {design.get(\"variations\").map(variation => (\n          <sidebar.components.Item\n            className=\"testing_variation\"\n            isLight\n            hasAction\n            isActive={variation.id === selectedVariation}\n            key={variation.id}\n            onClick={() => onVariationSelect(variation.id)}\n          >\n            <VariationPreview className=\"variation-preview\">\n              <Svg svg={variation.svg} />\n            </VariationPreview>\n            <span className=\"variation-label\"> {variation.name}</span>\n          </sidebar.components.Item>\n        ))}\n        <sidebar.components.Heading isLight className=\"colors-heading\">\n          <Icon icon=\"palette\" /> Colors\n        </sidebar.components.Heading>\n        <FillToBottom offset={35}>\n          {usedColors[selectedVariation].map(color => (\n            <sidebar.components.Item isLight key={color.color}>\n              <ColorTile color={color.color} className=\"color-tile\" />\n              <span className=\"color-label\"> {color.name}</span>\n            </sidebar.components.Item>\n          ))}\n        </FillToBottom>\n      </React.Fragment>\n    )}\n  </StyledSidebar>\n);\n\nSidebar.propTypes = {\n  /**\n   * The manufacturer that creates the product being edited.\n   */\n  manufacturer: PropTypes.instanceOf(Manufacturer),\n  /**\n   * The produt that is being edited\n   */\n  product: PropTypes.instanceOf(Product),\n  /**\n   * The pre-existing design that is being edited, if any\n   */\n  design: PropTypes.instanceOf(Design).isRequired,\n  /**\n   * The user that created the design.\n   */\n  user: PropTypes.instanceOf(User),\n  /**\n   * The id of the variation that is currently selected\n   */\n  selectedVariation: PropTypes.string.isRequired,\n  /**\n   * The colors that are used in the current variation.\n   */\n  usedColors: PropTypes.objectOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        color: PropTypes.string.isRequired\n      }).isRequired\n    ).isRequired\n  ).isRequired,\n  /**\n   * Called when a variation is selected.\n   * Is provided with the variation id as the first parameter.\n   */\n  onVariationSelect: PropTypes.func.isRequired\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport ViewContainer from \"../../containers/ViewContainer\";\nimport { PageLoader } from \"../../theme\";\nimport Toolbar from \"../editor/Toolbar\";\nimport Sidebar from \"./Sidebar\";\nimport Canvas from \"../editor/Canvas\";\nimport ErrorPage from \"../ErrorPage\";\n\nconst PageLayout = styled.div`\n  display: flex;\n  justify-content: stretch;\n  position: relative;\n`;\n\n/**\n * A coordinating component that builds the View page.\n */\nconst View = ({ match }) => (\n  <ViewContainer designId={match.params.designId}>\n    {viewData => {\n      if (viewData.props.isLoading) {\n        return <PageLoader />;\n      }\n      if (!viewData.props.design) {\n        return <ErrorPage />;\n      }\n      if (!viewData.props.product) {\n        return (\n          <ErrorPage errorMessage=\"This product is no longer available.\" />\n        );\n      }\n      return (\n        <React.Fragment>\n          <Toolbar\n            design={viewData.props.design}\n            hideOutlines={viewData.props.hideOutlines}\n            onHideOutlines={viewData.actions.toggleHideOutlines}\n            onBackgroundChange={viewData.actions.changeBackground}\n          />\n          <PageLayout>\n            <Sidebar\n              manufacturer={viewData.props.manufacturer}\n              product={viewData.props.product}\n              design={viewData.props.design}\n              selectedVariation={viewData.props.currentVariation.id}\n              usedColors={viewData.props.usedColors}\n              user={viewData.props.user}\n              onVariationSelect={viewData.actions.selectVariation}\n            />\n            <Canvas\n              hideOutlines={viewData.props.hideOutlines}\n              svg={viewData.props.currentVariation.svg}\n              isReadOnly\n              background={viewData.props.background}\n              colorMap={viewData.props.currentVariationColors}\n            />\n          </PageLayout>\n        </React.Fragment>\n      );\n    }}\n  </ViewContainer>\n);\n\nView.propTypes = {\n  /**\n   * Provided by react-router.\n   */\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      designId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default View;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { isEmbedded } from \"../constants/embed\";\nimport { Alert } from \"../theme\";\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport EmbeddedCss from \"./EmbeddedCss\";\nimport RestrictedRoute from \"./RestrictedRoute\";\nimport LegacyRedirect from \"./LegacyRedirect\";\nimport About from \"./about\";\nimport Account from \"./account\";\nimport Activate from \"./activate\";\nimport Create from \"./create\";\nimport CreateNew from \"./createNew\";\nimport Designs from \"./designs\";\nimport Edit from \"./edit\";\nimport ErrorPage from \"./ErrorPage\";\nimport Home from \"./home\";\nimport Login from \"./login\";\nimport MyDesigns from \"./my-designs\";\nimport View from \"./view\";\n\n/**\n * The entry for the app. The router will go here.\n */\nconst App = ({ _isEmbedded }) => (\n  <React.Fragment>\n    <EmbeddedCss />\n    {/* {!_isEmbedded && <Header />} */}\n    <LegacyRedirect />\n    <Switch>\n      <RestrictedRoute exact path=\"/\" component={Home} />\n      <RestrictedRoute exact path=\"/about\" component={About} />\n      <RestrictedRoute exact path=\"/account\" component={Account} />\n      <RestrictedRoute\n        exact\n        path=\"/activate/:userId/:activationCode\"\n        component={Activate}\n      />\n      <RestrictedRoute exact path=\"/create\" component={Create} />\n      <Route exact path=\"/create/:productId\" component={CreateNew} />\n      <RestrictedRoute exact path=\"/designs\" component={Designs} />\n      <Route exact path=\"/edit/:designId\" component={Edit} />\n      <RestrictedRoute exact path=\"/login\" component={Login} />\n      <RestrictedRoute exact path=\"/my-designs\" component={MyDesigns} />\n      <Route exact path=\"/view/:designId\" component={View} />\n      <Route component={ErrorPage} />\n    </Switch>\n    <Footer />\n    <Alert />\n  </React.Fragment>\n);\n\nApp.defaultProps = {\n  _isEmbedded: isEmbedded\n};\n\nApp.propTypes = {\n  _isEmbedded: PropTypes.bool\n};\n\nexport default App;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ThemeProvider } from \"styled-components\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Theme from \"../theme\";\nimport { CHECK_LOGIN } from \"../redux/actions\";\nimport { getCheckingLogin } from \"../redux/modules/user\";\nimport { setupFontAwesome } from \"../theme/Icon\";\nimport { PageLoader } from \"../theme\";\nimport App from \"../components/App\";\n\nsetupFontAwesome();\n\nexport class AppContainer extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    isCheckingLogin: PropTypes.bool.isRequired,\n    onCheckLogin: PropTypes.func.isRequired\n  };\n\n  constructor(props, ...rest) {\n    super(props, ...rest);\n    props.onCheckLogin();\n  }\n\n  render() {\n    if (this.props.isCheckingLogin) {\n      return <PageLoader />;\n    }\n    return (\n      <BrowserRouter>\n        <ThemeProvider theme={Theme}>\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isCheckingLogin: getCheckingLogin(state)\n});\n\nconst mapDispatchToProps = {\n  onCheckLogin: CHECK_LOGIN\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppContainer);\n","import { combineReducers } from \"redux-immutable\";\nimport UserReducer from \"./user\";\nimport UsersReducer from \"./users\";\nimport DesignsReducer from \"./designs\";\nimport ProductsReducer from \"./products\";\nimport ManufacturersReducer from \"./manufacturers\";\n\n/**\n * The global combined reducer\n */\nexport default combineReducers({\n  designs: DesignsReducer,\n  user: UserReducer,\n  users: UsersReducer,\n  products: ProductsReducer,\n  manufacturers: ManufacturersReducer\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./modules\";\n\nconst composeEnahancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default createStore(reducers, composeEnahancers(applyMiddleware(thunk)));\n","/* eslint-disable no-undef */\nexport default function polyfil() {\n  /**\n   * NodeList.prototype.forEach\n   * https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\n   *\n   * Polyfill for Chrome v49.0.263.122 (latest available on WinXP)\n   */\n  if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport \"normalize.css\";\nimport AppContainer from \"./containers/AppContainer\";\nimport polyfill from \"./utils/polyfill\";\nimport Store from \"./redux\";\nimport \"./index.css\";\n\npolyfill();\n\nReactDOM.render(\n  <ReduxProvider store={Store}>\n    <AppContainer />\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/bg-rev.f5e486e3.jpg\";"],"sourceRoot":""}